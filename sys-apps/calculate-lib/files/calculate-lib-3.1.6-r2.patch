diff --git calculate/lib/utils/common.py calculate/lib/utils/common.py
index 1799713..d9bb232 100644
--- calculate/lib/utils/common.py
+++ calculate/lib/utils/common.py
@@ -439,7 +439,7 @@ def mountEcryptfs(userName,userPwd,userDir):
         else:
             raise Exception
     except:
-        raise CommonError("Failed to unwrap passphrase")
+        raise CommonError(_("Failed to unwrap passphrase"))
 
     # добавить passphrase в ключи ядра
     p = process('/usr/bin/ecryptfs-add-passphrase', '--fnek', '-',stderr=STDOUT)
@@ -452,7 +452,7 @@ def mountEcryptfs(userName,userPwd,userDir):
         ecryptfs_sig, ecryptfs_fnek_sig = \
             readLinesFile(path.join(ecryptUserName,".ecryptfs/Private.sig"))
     except ValueError:
-        raise CommonError("Failed to parse Private.sig")
+        raise CommonError(_("Failed to parse Private.sig"))
 
     # подключить шифрованный раздел
     mountProcess = process('/sbin/mount.ecryptfs',
@@ -471,3 +471,13 @@ def mountEcryptfs(userName,userPwd,userDir):
     # отправить пароль через stdin
     mountProcess.write("passphrase_passwd="+userPwd)
     return mountProcess.success()
+
+def isBootstrapDataOnly(directory):
+    """
+    Каталог содержит только сертификат, созданный командой cl-core
+    """
+    from calculate.lib.utils.files import (process,readLinesFile,STDOUT,
+                                           isMount)
+    userCalculate = path.join(directory,".calculate")
+    return (set(listDirectory(directory)) == set([".calculate"]) and
+            set(listDirectory(userCalculate)) == set(["client_cert"]))
diff --git calculate/lib/utils/ip.py calculate/lib/utils/ip.py
index b704c76..e488da0 100644
--- calculate/lib/utils/ip.py
+++ calculate/lib/utils/ip.py
@@ -327,7 +327,10 @@ class Pinger:
         """
         Send one ping to the given >destIP<.
         """
-        destIP  =  socket.gethostbyname(destIP)
+        try:
+            destIP  =  socket.gethostbyname(destIP)
+        except socket.gaierror as e:
+            raise IPError(e.strerror)
 
         # Header is type (8), code (8), checksum (16), id (16), sequence (16)
         myChecksum = 0
diff --git calculate/lib/variables/user.py calculate/lib/variables/user.py
index e8e378f..7b3596a 100644
--- calculate/lib/variables/user.py
+++ calculate/lib/variables/user.py
@@ -21,7 +21,7 @@ import grp
 from os import environ,path
 from calculate.lib.datavars import Variable,VariableError,ReadonlyVariable
 from calculate.lib.cl_vars_share import varsShare
-from calculate.lib.utils.common import getPasswdUsers
+from calculate.lib.utils.common import getPasswdUsers,isBootstrapDataOnly
 from calculate.lib.utils.files import listDirectory
 import sys
 from calculate.lib.cl_lang import setLocalTranslate
@@ -229,7 +229,8 @@ class VariableUrHomeCryptSet(ReadonlyVariable):
         # если пользовательского профиля нет, то шифровать ли профиль
         # узнаем на уровне системы
         homeDir = self.Get('ur_home_path')
-        if not path.exists(homeDir) or not listDirectory(homeDir):
+        if (not path.exists(homeDir) or not listDirectory(homeDir) or
+            isBootstrapDataOnly(homeDir)):
             return self.Get('cl_home_crypt_set')
         # профиль не шифрованный
         return "off"
