diff --git calculate/lib/cl_template.py calculate/lib/cl_template.py
index efda545..5c6e50a 100644
--- calculate/lib/cl_template.py
+++ calculate/lib/cl_template.py
@@ -327,6 +327,8 @@ class _terms(_error, _shareTermsFunction):
                     else:
                         try:
                             valVars = self.objVar.Get(vals[0])
+                            varTable = self.objVar.Get('cl_used_action')
+                            varTable.append((vals[0],vals[1]))
                             if not valVars:
                                 valVars = ""
                         except DataVarsError, e:
diff --git calculate/lib/variables/X11.py calculate/lib/variables/X11.py
index 72de72b..ad33e27 100644
--- calculate/lib/variables/X11.py
+++ calculate/lib/variables/X11.py
@@ -18,7 +18,7 @@ import os
 import re
 from os import path
 from calculate.lib.datavars import Variable,VariableError,ReadonlyVariable
-from calculate.lib.utils.files import process, readLinesFile
+from calculate.lib.utils.files import process, readLinesFile,FilesError
 from calculate.lib.utils.common import (getAvailableVideo, getValueFromCmdLine,
                 getVideoFromXorgLog, getVideoFromXorgConf, getVideoFromCmdLine,
                 getCompositeFromXorgconf,getTupleVersion,
@@ -36,7 +36,7 @@ class VariableOsX11Resolution(Variable):
             processXDpy = process('xdpyinfo')
             if processXDpy.failed():
                 return ""
-        except OSError:
+        except (FilesError,OSError) as e:
             return ""
         lines = processXDpy.readlines()
         reRes = re.compile("dimensions:\s+(\d+)x(\d+)\s+pixels")
diff --git calculate/lib/variables/env.py calculate/lib/variables/env.py
index 094afcd..6d376e5 100644
--- calculate/lib/variables/env.py
+++ calculate/lib/variables/env.py
@@ -204,12 +204,26 @@ class VariableClAutoupdateSet(Variable):
         else:
             return "off"
 
+class VariableClHumanEditSet(Variable):
+    """
+    Параметр для отметки "ручной правки"
+    """
+    type = "bool"
+    opt = ["--human-edit"]
+    value = "off"
+
+    def init(self):
+        self.help = _("mark as human modification")
+        self.label = _("Mark as human modification")
+
 class VariableClProtectUseSet(ReadonlyVariable):
     """
     Использовать portage интеграцию с конфигурационными файлами
     """
     type = "bool"
-    value = "on"
+
+    def get(self):
+        return "on" if self.Get('cl_human_edit_set') == 'off' else "off"
 
 class VariableClDispatchConf(Variable):
     """
diff --git calculate/lib/variables/system.py calculate/lib/variables/system.py
index 08593ef..70bcf87 100644
--- calculate/lib/variables/system.py
+++ calculate/lib/variables/system.py
@@ -145,3 +145,12 @@ class VariableOsUefiSet(ReadonlyVariable):
             return "on"
         else:
             return "off"
+
+class VariableClUsedAction(ReadonlyVariable):
+    """
+    Переменная содержит все найденные при обработке шаблонов
+    событийные переменные (ac_)
+    """
+    type = "table"
+    def get(self):
+        return []
