diff --git calculate/lib/cl_template.py calculate/lib/cl_template.py
index 55527cd..1da632a 100644
--- calculate/lib/cl_template.py
+++ calculate/lib/cl_template.py
@@ -4039,6 +4039,12 @@ gettext -d cl_template "$*"
         """
         return True
 
+    def templateModify(self,filesApl):
+        """
+        Files which created by apping templates
+        """
+        return True
+
     def fixNameFileConfig(self,origfilename):
         """Support ._cfg0000 files for postinst"""
         if self.objVar.Get('cl_ebuild_phase') != 'postinst':
@@ -4229,6 +4235,8 @@ gettext -d cl_template "$*"
             self.cltObj.numberProcessTempl = self.allTemplates
             # метод показывающий номер clt шаблона
             self.cltObj.numberProcessTemplates = self.numberProcessTemplates
+            # метод показывающий номер clt шаблона
+            self.cltObj.templateModify = self.templateModify
             # общее количество шаблонов
             self.allTemplates += self.cltObj.allTemplates
             self.cltObj.allTemplates = self.allTemplates
@@ -4399,6 +4407,7 @@ gettext -d cl_template "$*"
                 nameEnvFile = os.path.basename(nameFileConfig)
                 self.functObj.timeConfigsIni[nameEnvFile] = float(time.time())
             self.filesApply += filesApl
+            self.templateModify(filesApl)
         if filesApl:
             self._addFile(filesApl)
         return True
@@ -5693,6 +5702,7 @@ class templateClt(scanDirectoryClt, Template):
                 nameEnvFile = os.path.basename(nameFileConfig)
                 self.functObj.timeConfigsIni[nameEnvFile] = float(time.time())
             self.filesApply += filesApl
+            self.templateModify(filesApl)
             return nameFileConfig
         else:
             return True
@@ -6109,6 +6119,7 @@ class ProgressTemplate(Template):
         Template.__init__(self, *args, **kwargs)
         self.setValueCallback = setValueCallback
         self.value = None
+        self.firstValue = True
 
     def numberAllTemplates(self, number):
         self.maximum = number
@@ -6121,3 +6132,8 @@ class ProgressTemplate(Template):
             self.setValueCallback(min(100,max(0,value)))
             self.value = value
         return True
+
+    def templateModify(self,filesApl):
+        if self.firstValue and hasattr(self,"onFirstValue"):
+            self.onFirstValue()
+            self.firstValue = False
