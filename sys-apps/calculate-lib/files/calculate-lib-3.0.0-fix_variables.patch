commit f26ea6f4ca72377fb020d7308a7926dfd5b6ae07
Author: Mike Hiretsky <mh@calculate.ru>
Date:   Wed Aug 8 13:41:59 2012 +0400

    Add function for install,fix fill variables

diff --git calculate/lib/cl_template.py calculate/lib/cl_template.py
index 831705d..5547101 100644
--- calculate/lib/cl_template.py
+++ calculate/lib/cl_template.py
@@ -3931,7 +3931,7 @@ re.M|re.S)
                                                              self.dictTemplates)
         # Считаем количество шаблонов
         dirsTemplatesExists = filter(lambda x: os.path.exists(x), dirsTemplates)
-        if not dirsTemplatesExists:
+        if not dirsTemplatesExists and not self.cltObj:
             self.setError(_("No such template directories") +\
                     ": %s"%", ".join(map(lambda x: "'%s'"%x ,dirsTemplates)))
             return (self.createdDirs, self.filesApply)
diff --git calculate/lib/utils/device.py calculate/lib/utils/device.py
index cf3aea3..50351bc 100644
--- calculate/lib/utils/device.py
+++ calculate/lib/utils/device.py
@@ -401,3 +401,9 @@ def refreshUdev():
         except:
             pass
         process(udevadm,"trigger","--subsystem-match","block").success()
+
+def getCommonDeviceName(dev):
+    """
+    Get common device name (example: LVM -> /dev/dm- and etc)
+    """
+    return getUdevDeviceInfo(name=dev).get('DEVNAME',dev)
diff --git calculate/lib/variables/X11.py calculate/lib/variables/X11.py
index 78f1df6..ed5c49e 100644
--- calculate/lib/variables/X11.py
+++ calculate/lib/variables/X11.py
@@ -38,7 +38,7 @@ class VariableOsX11Resolution(Variable):
                 return ""
         except OSError:
             return ""
-        lines = processXDpy.readLines()
+        lines = processXDpy.readlines()
         reRes = re.compile("dimensions:\s+(\d+)x(\d+)\s+pixels")
         searchRes=False
         for line in lines:
diff --git calculate/lib/variables/__init__.py calculate/lib/variables/__init__.py
index 37e0cd5..a79d5ea 100644
--- calculate/lib/variables/__init__.py
+++ calculate/lib/variables/__init__.py
@@ -1,3 +1,5 @@
+from calculate.lib.datavars import ReadonlyVariable
+
 import X11
 import locale
 import env
diff --git calculate/lib/variables/env.py calculate/lib/variables/env.py
index 849563f..e948553 100644
--- calculate/lib/variables/env.py
+++ calculate/lib/variables/env.py
@@ -50,6 +50,20 @@ class VariableClEnvPath(Variable):
     type = 'list'
     value = list(zip(*_envData)[1])
 
+class VariableClTemplateData(TableVariable):
+    """
+    Aliases to templates path
+    """
+    source = ["cl_template_location","cl_template_path"]
+
+class VariableClTemplateLocation(Variable):
+    """
+    Name to templates
+    """
+    type = 'list'
+    value = ["overlay","local","remote"]
+
+
 class VariableClTemplatePath(Variable):
     """
     Path to information file on server
diff --git calculate/lib/variables/system.py calculate/lib/variables/system.py
index 3135816..5f6dc4d 100644
--- calculate/lib/variables/system.py
+++ calculate/lib/variables/system.py
@@ -68,7 +68,7 @@ class VariableOsRootDev(ReadonlyVariable):
         dfProcess = process('df','/',envdict={'LANG':'C'})
         if dfProcess.failed():
             return ""
-        dfLines = dfProcess.readLines()
+        dfLines = dfProcess.readlines()
         if len(dfLines)>1:
             root_dev = dfLines[1].split(" ")[0].strip()
             if root_dev:
