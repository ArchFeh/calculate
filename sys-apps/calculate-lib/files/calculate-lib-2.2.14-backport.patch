diff --git a/pym/cl_fill.py b/pym/cl_fill.py
index ec5bac0..0f53c65 100644
--- a/pym/cl_fill.py
+++ b/pym/cl_fill.py
@@ -23,7 +23,7 @@ import cl_overriding
 from cl_vars_share import varsShare, clLocale
 from os.path import exists as pathexists
 from os import path
-from cl_utils import isMount, genpassword
+from cl_utils import isMount, genpassword, getAvailableX11Drivers
 from encrypt import getHash
 
 class fillVars(varsShare):
@@ -435,17 +435,10 @@ class fillVars(varsShare):
 
     def get_os_x11_video_drv(self):
         """Get video driver used by xorg"""
-        xorg_modules_dir = '/usr/lib/xorg/modules/drivers'
         xorg_conf = '/etc/X11/xorg.conf'
         # Try analize Xorg.{DISPLAY}.log
         display = os.environ.get('DISPLAY')
-        if path.exists(xorg_modules_dir):
-            list_avialable_drivers = \
-                map(lambda x: x[:-7],
-                    filter(lambda x: x.endswith('_drv.so'),
-                           os.listdir(xorg_modules_dir)))
-        else:
-            list_avialable_drivers = []
+        list_avialable_drivers = getAvailableX11Drivers()
         if display and list_avialable_drivers:
             reDriver = re.compile('|'.join(map(lambda x: "%s_drv.so"%x,
                                                list_avialable_drivers)))
diff --git a/pym/cl_utils.py b/pym/cl_utils.py
index 9ba27da..2d04135 100644
--- a/pym/cl_utils.py
+++ b/pym/cl_utils.py
@@ -253,6 +253,7 @@ class process:
     def getStdout(self):
         """Get current stdout"""
         self.close()
+        self._open()
         return self.pipe.stdout
 
     def write(self,data):
@@ -857,3 +858,53 @@ def reVerSplitToPV(x):
             'PV':"",
             'PR':"",
             'PVR':""}.copy()
+
+def getPkgUses(fullpkg):
+    """Get USE and IUSE from package"""
+    category,slash,pkg = fullpkg.partition('/')
+    pkgCategory = '/var/db/pkg/{0}'.format(category)
+    packages = filter(lambda x:x['PN'] == pkg,
+               map(reVerSplitToPV,
+               filter(lambda x:x,
+               map(lambda x:reVerSplit.search(x),
+               listDirectory(pkgCategory)))))
+    if not packages:
+        return None
+    usePath = os.path.join(pkgCategory,packages[-1]['PF'],"USE")
+    iusePath = os.path.join(pkgCategory,packages[-1]['PF'],"IUSE")
+    iuse = open(iusePath,'r').read().strip().split() \
+           if os.path.exists(iusePath) else \
+           []
+    use = open(usePath,'r').read().strip().split() \
+           if os.path.exists(usePath) else \
+           []
+    return (map(lambda x:x[1:] if x.startswith("+") else x,
+            filter(lambda x:x,
+            use)),
+            map(lambda x:x[1:] if x.startswith("+") else x,
+            filter(lambda x:x,
+            iuse)))
+
+def getPkgActiveUses(fullpkg):
+    """Get active uses from package"""
+    res = getPkgUses(fullpkg)
+    if not res:
+        return None
+    return list(set(res[0]) & set(res[1]))
+
+def getSquashList():
+    """Get supprted squashfs compressions method"""
+    wantMethod = set(["lzo","lzma","xz","gzip"])
+    usesSquashFs = getPkgActiveUses("sys-fs/squashfs-tools")
+    if not usesSquashFs:
+        return ["gzip"]
+    else:
+        return map(lambda x:{"lzma":"xz"}.get(x,x),
+               list(set(usesSquashFs) & wantMethod))
+
+def getAvailableX11Drivers():
+    """Get available x11 drivers"""
+    xorg_modules_dir = '/usr/lib/xorg/modules/drivers'
+    return map(lambda x: x[:-7],
+           filter(lambda x:x.endswith('_drv.so'),
+           listDirectory(xorg_modules_dir)))
