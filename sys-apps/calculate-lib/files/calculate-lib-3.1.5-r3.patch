diff --git calculate/lib/cl_template.py calculate/lib/cl_template.py
index 389c528..dbf6419 100644
--- calculate/lib/cl_template.py
+++ calculate/lib/cl_template.py
@@ -4455,7 +4455,7 @@ gettext -d cl_template "$*"
             self.cltObj.applyTemplates()
             self.stop = self.stop or self.cltObj.stop
         if not self.stop and ((self.objVar.Get('cl_merge_pkg') or \
-            self.objVar.Get('cl_action') == "sync") and \
+            self.objVar.Get('cl_action') in ("sync","domain","undomain")) and \
             self.objVar.Get('cl_merge_pkg_new')):
             self.objVar.Set('cl_root_path',
                             self.objVar.Get('cl_root_path_next'),force=True)
diff --git calculate/lib/utils/files.py calculate/lib/utils/files.py
index cd94e92..34c3bc8 100644
--- calculate/lib/utils/files.py
+++ calculate/lib/utils/files.py
@@ -732,9 +732,11 @@ class FStab(object):
 
     def rebuildCache(self):
         """Rebuild cache from fstab file"""
+        def setlen(ar):
+            return ar[:6]+[""]*(6-len(ar))
         self.cache = \
-            map(lambda x:map(lambda y:y.strip(),x.split()),
-            filter(lambda x:x and not x.lstrip().startswith("#"),
+            map(lambda x:setlen(map(lambda y:y.strip(),x.split())),
+            filter(lambda x:x.strip() and not x.lstrip().startswith("#"),
             open(self.fstab_file,'r').read().split('\n')))
         for data in self.cache:
             convertDev = lambda x: path.realpath(x) if x.startswith('/') else x
diff --git calculate/lib/variables/__init__.py calculate/lib/variables/__init__.py
index 415d5ef..1fac4d6 100644
--- calculate/lib/variables/__init__.py
+++ calculate/lib/variables/__init__.py
@@ -25,4 +25,4 @@ class VariableClVer(ReadonlyVariable):
     """
     Package version
     """
-    value = "3.1.5"
+    value = "3.1.5.1"
diff --git calculate/lib/variables/user.py calculate/lib/variables/user.py
index d53cdd7..b80410c 100644
--- calculate/lib/variables/user.py
+++ calculate/lib/variables/user.py
@@ -53,7 +53,7 @@ class LdapHelper:
 
     def getLdapUserObject(self):
         """Get data obejct from LDAP"""
-        if not LdapHelper._ldapUserObject:
+        if not LdapHelper._ldapUserObject and ldapUser:
             LdapHelper._ldapUserObject = ldapUser()
         return LdapHelper._ldapUserObject
 
