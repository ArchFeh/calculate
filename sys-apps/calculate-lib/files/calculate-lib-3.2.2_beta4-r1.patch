diff --git pym/calculate/lib/cl_template.py pym/calculate/lib/cl_template.py
index 0e7fed8..630747d 100644
--- pym/calculate/lib/cl_template.py
+++ pym/calculate/lib/cl_template.py
@@ -5762,7 +5762,8 @@ gettext -d cl_template "$*"
                 if objTempl.getError():
                     raise TemplatesError(_("Failed to use patch ") + \
                                     nameFileTemplate)
-                elif formatTemplate == 'diff':
+                elif (formatTemplate == 'diff' and 
+                    self.objVar.Get('cl_verbose_set') == "on"):
                     self.printSUCCESS(_("Appling patch")+ " " + \
                                 os.path.basename(nameFileTemplate))
                 if execStr:
diff --git pym/calculate/lib/utils/common.py pym/calculate/lib/utils/common.py
index 75dcdce..1604cce 100644
--- pym/calculate/lib/utils/common.py
+++ pym/calculate/lib/utils/common.py
@@ -397,6 +397,17 @@ def getKernelUid(device):
     else:
         return device.replace("/","")
 
+def dict_by_columns(i, sep, key, value):
+    """
+    Получить словарь из файла, где каждая строка разделена sep символом
+    на колонки, key - номер колонки ключей, value номер колонки значений
+    """
+    max_val = max(key,value)
+    return dict(
+        map(lambda x: (x[key], x[value]),
+        filter(lambda x: len(x) >= max_val,
+        map(lambda x: x.split(sep),i))))
+
 from calculate.lib.utils.files import readLinesFile
 def getUserGroups(userName,prefix="/"):
     """
@@ -407,6 +418,22 @@ def getUserGroups(userName,prefix="/"):
            map(lambda x:x.split(':')[0::3],
            readLinesFile(path.join(prefix,'etc/group')))))
 
+
+def getUserPrimaryGroup(userName, prefix="/"):
+    """
+    Получить основную группу пользователя
+    """
+    passwd = path.join(prefix,'etc/passwd')
+    group = path.join(prefix,'etc/group')
+    sep_symb = ":"
+    userGidMap = dict_by_columns(readLinesFile(passwd),sep_symb,0,3)
+    gidGroupMap = dict_by_columns(readLinesFile(group),sep_symb,2,0)
+    if userName in userGidMap:
+        gid = userGidMap[userName]
+        return gidGroupMap.get(gid,None)
+    return None
+
+
 def getGroups(prefix="/"):
     """
     Get groups from etc/group
diff --git pym/calculate/lib/utils/files.py pym/calculate/lib/utils/files.py
index 7fe505a..846b0ed 100644
--- pym/calculate/lib/utils/files.py
+++ pym/calculate/lib/utils/files.py
@@ -342,10 +342,12 @@ class typeFile:
     def isBinary(self, filename):
         """является ли файл бинарным"""
         mime = self.getMType(filename)
-        if mime.startswith("text"):
-            return False
-        else:
-            return True
+        if mime:
+            if mime.startswith("text"):
+                return False
+            else:
+                return True
+        return None
 
 class scanDirectory:
     """Класс для cканирования директории"""
