commit a780af1325ddaebb34c5a1fb2366a581a0fd4dc2
Author: Mike Hiretsky <mh@calculate.ru>
Date:   Tue Mar 22 13:00:14 2011 +0300

    Add creating use list.

diff --git a/i18n/cl_assemble_ru.mo b/i18n/cl_assemble_ru.mo
index b552f67..d084398 100644
Binary files a/i18n/cl_assemble_ru.mo and b/i18n/cl_assemble_ru.mo differ
diff --git a/pym/cl_assemble.py b/pym/cl_assemble.py
index 25a68fb..32c4782 100644
--- a/pym/cl_assemble.py
+++ b/pym/cl_assemble.py
@@ -175,15 +175,13 @@ class cl_assemble(color_print):
              {'command':'binaryCleaning()',
               'step':'binclean',
               'message':_("Cleaning binary repository"),
-              'hideout':True,
-              'condition':'.'
+              'hideout':True
              },
              # creating mask,unmask list
              {'command':'createMaskUnmaskList()',
               'step':'maskunmask',
-              'message':_("Creating mask/unmask list file"),
-              'hideout':True,
-              'condition':'.'
+              'message':_("Creating mask/unmask/use list file"),
+              'hideout':True
              },
              # update eix base
              {'command':'eix-update',
@@ -1495,6 +1493,10 @@ class cl_assemble(color_print):
                           self.clVars.Get('cl_assemble_pkgdir'))
         dbPkg = pathJoin(chrootPath, 'var/db/pkg')
 
+        if not path.exists(dbPkg):
+            os.makedirs(dbPkg)
+        if not path.exists(pkgDir):
+            os.makedirs(pkgDir)
         if path.exists(dbPkg) and path.exists(pkgDir):
             # get pkg list from distro
             pkgList = \
@@ -1576,6 +1578,41 @@ class cl_assemble(color_print):
             return False
         return True
 
+    def createUseList(self,chrootdir,filename):
+        """Create package uselist by chrootdir"""
+        pkgdir = path.join(chrootdir,'var/db/pkg')
+        def calcUseFlags(pkg):
+            iusePath = path.join(pkgdir,pkg,"IUSE")
+            usePath = path.join(pkgdir,pkg,"USE")
+            if path.exists(iusePath):
+                IUSE = set(
+                       map(lambda x: x[1:] if x and x[0] in ("-","+") else x,
+                       open(iusePath,"r").read().strip().split()))
+            else:
+                return ""
+            if path.exists(usePath):
+                USE = set(open(usePath,"r").read().strip().split())
+            else:
+                USE = set([])
+            plus = " ".join(sorted(IUSE & USE))
+            minus = " ".join(sorted(map(lambda x:"-%s"%x, IUSE - USE)))
+            if plus:
+                plus = " %s"%plus
+            if minus:
+                minus = " %s"%minus
+            return "=%s%s%s\n"%(pkg, plus, minus)
+
+        if not path.exists(chrootdir):
+            return False
+        try:
+            packageList = sorted(reduce(lambda x,y:x+map(lambda x:path.join(y,x),
+                os.listdir(path.join(pkgdir,y))), os.listdir(pkgdir),[]))
+
+            open(filename,'w').writelines(map(calcUseFlags,packageList))
+        except (IOError,OSError),e:
+            return False
+        return True
+
     def createMaskUnmaskList(self):
         """Action create mask unmask list"""
         baseDir = self.clVars.Get('cl_assemble_pkgdir')
@@ -1584,9 +1621,12 @@ class cl_assemble(color_print):
             os.makedirs(baseDir,mode=0755)
         maskName = pathJoin(baseDir,"%s.mask"%name)
         unmaskName = pathJoin(baseDir,"%s.unmask"%name)
+        useName = pathJoin(baseDir,"%s.use"%name)
         if self.createMaskList(self.clVars.Get('cl_assemble_path'),
                                maskName) and \
            self.createUnmaskList(self.clVars.Get('cl_assemble_path'),
-                               unmaskName):
+                               unmaskName) and \
+           self.createUseList(self.clVars.Get('cl_assemble_path'),
+                               useName):
             return True
         return False
