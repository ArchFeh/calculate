commit b03c3685dc36aa8e3d5ad7d89deb8d7bd95620bf
Author: Хирецкий Михаил <mh@calculate.ru>
Date:   Tue Aug 21 17:18:27 2012 +0400

    Add clean portages

diff --git pym/cl_assemble.py pym/cl_assemble.py
index 4615d58..620d7f0 100644
--- pym/cl_assemble.py
+++ pym/cl_assemble.py
@@ -42,6 +42,7 @@ import cl_overriding
 import random
 from shutil import copyfile
 import time
+from itertools import *
 
 def DEBUG(msg):
     if "DEBUG" in os.environ:
@@ -134,6 +135,12 @@ class cl_assemble(color_print):
               'hideout':True,
               'step':"eixsync",
               'foraction':('syncupdate',)},
+             {'command':'eix-checkout',
+              'progname':'eix-checkout',
+              'message':_("Checkout portages"),
+              'hideout':True,
+              'step':"eixcheckout",
+              'foraction':('update',)},
              # try install python
              {'command':'emerge -u python',
               'step':'updatepython',
@@ -232,7 +239,8 @@ class cl_assemble(color_print):
               'step':'showdowngrade',
               'progname':'eix'}]
 
-    reVerSplit = re.compile(r"^(.*?)-(([^-]+?)(?:-(r\d+))?)(?:.(tbz2))?$",re.S)
+    reVerSplit = re.compile(
+        r"^(.*?)-(([^-]+?)(?:-(r\d+))?)(::\w+)?(?:.(tbz2))?$",re.S)
 
     def __init__(self):
         self.clVars = None
@@ -1614,20 +1622,21 @@ class cl_assemble(color_print):
 
     def fetchDrivers(self):
         """Fetch propreitary drivers"""
+        chrootPath = self.clVars.Get('cl_assemble_path')
+        nvidiaEclass = pathJoin(chrootPath,
+                       '/usr/portage/eclass/nvidia-driver.eclass')
         if self.clVars.Get('cl_assemble_withvideo_set') == "on":
-            drivers = [
-                       ('nvidia-drivers',
-                        'x11-drivers/nvidia-drivers'),
-                       ('nvidia-drivers',
-                        '\\<x11-drivers/nvidia-drivers-174'),
-                       ('nvidia-drivers',
-                        '\\<x11-drivers/nvidia-drivers-97'),
-                       ('ati-drivers',
-                       'x11-drivers/ati-drivers')
-                       ]
+            drivers = [('nvidia-drivers','','x11-drivers/nvidia-drivers')]+\
+                      map(lambda x:('nvidia-drivers',x,
+                                    x.replace('>=','\\<')),
+                      imap(lambda x:x.partition('="')[2].strip('\n"'),
+                      ifilterfalse(lambda x:x.startswith('mask_71') or \
+                                            x.startswith('mask_96'),
+                      ifilter(lambda x:x.startswith('mask_'),
+                      open(nvidiaEclass)))))+\
+                      [('ati-drivers',"",'x11-drivers/ati-drivers')]
         else:
             drivers = []
-        chrootPath = self.clVars.Get('cl_assemble_path')
         distDir = '/usr/portage/distfiles'
         pathDistDir = pathJoin(chrootPath,distDir)
         if not path.exists(pathDistDir):
@@ -1650,7 +1659,8 @@ class cl_assemble(color_print):
             curDistdir = '/var/calculate/remote/distfiles'
         while drivers:
             repeatDrivers = []
-            for verName,drvVer in drivers:
+            driversMatrix = []
+            for verName,maskName,drvVer in drivers:
                 rePackage = re.compile("^\[ebuild[^\]]+]\s+(\S+)")
                 checkprocess = self.runChroot(
                             "emerge -pv %s"%
@@ -1681,6 +1691,7 @@ class cl_assemble(color_print):
                                     %"%s-%s"%(verName,nvidiaVersions)+":")
                 # print dep packages (error message for probably wrong packages)
                 nameRight = "/%s-"%verName.partition("-")[0]
+                # installPkgList, package list for install
                 for pkg in installPkgList:
                     if nameRight in pkg:
                         self.printSUCCESS("  %s"%pkg)
@@ -1710,6 +1721,8 @@ class cl_assemble(color_print):
                     self.printByResult(fetchprocess.success())
                     needFiles += fetchedFiles
                 self.defaultPrint("\n")
+                driversMatrix.append((verName,maskName,drvVer,
+                                      " ".join(installPkgList)))
             drivers = repeatDrivers
             if drivers:
                 self.printMessageForTest(" " +
@@ -1717,6 +1730,24 @@ class cl_assemble(color_print):
                 time.sleep(10)
                 self.printByResult(True)
 
+        self.clVars.Set('cl_assemble_drivers_info',
+                        driversMatrix,force=True)
+        self.printMessageForTest(" " +
+            _("Creating install video driver script"))
+        try:
+            parentDir = pathJoin(chrootPath,"usr/local/sbin")
+            if not path.exists(parentDir):
+                os.makedirs(parentDir,mode=0755)
+            installDriverScript = pathJoin(chrootPath,
+                                  "usr/local/sbin/cl-video-install")
+            open(installDriverScript,'w').write(
+                 self.clVars.Get('cl_assemble_drivers_script'))
+            os.chmod(installDriverScript,0755)
+            self.printByResult(True)
+        except (IOError,OSError) as e:
+            import traceback
+            traceback.print_exc()
+            self.printByResult(False)
         needFiles = set(needFiles)
         fetchedList = set(listDirectory(pathDistDir))
         removedList = fetchedList - needFiles
diff --git pym/cl_fill_assemble.py pym/cl_fill_assemble.py
index 5df5d55..c0a7a39 100644
--- pym/cl_fill_assemble.py
+++ pym/cl_fill_assemble.py
@@ -29,7 +29,7 @@ from cl_utils import (_toUNICODE,isMount,pathJoin,listDirectory,readFile,
 from datetime import datetime
 from os import readlink,access,R_OK
 from cl_datavars import glob_attr
-
+from cl_assemble import cl_assemble
 from cl_lang import lang
 tr = lang()
 tr.setLocalDomain('cl_builder')
@@ -487,3 +487,51 @@ class fillVars(object, glob_attr):
     def get_os_device_type(self):
         """Device type (hdd,cdrom,usb-flash)"""
         return self.getAttributeFromHash('os_device_hash','type')
+
+    def get_cl_assemble_drivers_info(self):
+        """matrix for prepare driver script"""
+        return [[]]
+
+    def prepareScript(self,info):
+        """
+        Script lines from info
+        """
+        reVerSplit = cl_assemble.reVerSplit
+        yield "#!/bin/bash"
+        yield "PKG=$1"
+        yield "MASK=`cat /etc/portage/nvidia 2>/dev/null`"
+        yield "PORTAGE=/usr/portage"
+        yield "OVERLAY=/var/lib/layman/calculate"
+        for verName,maskName,drvVer,ebuilds in info:
+            yield "if [[ $PKG == 'x11-drivers/{verName}' ]] " \
+                  "&& [[ $MASK == '{maskName}' ]]"\
+                .format(verName=verName,maskName=maskName)
+            yield "then"
+            for ebuild in ebuilds.split(" "):
+                packageName = reVerSplit.search(ebuild)
+                if packageName:
+                    packageName = packageName.group(1)
+                else:
+                    continue
+                if "::calculate" in ebuild:
+                    portage="$OVERLAY"
+                    ebuild = ebuild.replace('::calculate','')
+                else:
+                    portage="$PORTAGE"
+                ebuild = ebuild.partition('/')[2]
+                yield "\tcd {portage}".format(portage=portage)
+                yield "\t[[ -f {pkgName}/{ebuild}.ebuild ]] " \
+                      "|| git checkout {pkgName}".format(pkgName=packageName,
+                                                         ebuild=ebuild)
+                yield "\tebuild {pkgName}/{ebuild}.ebuild merge " \
+                      "--skip-manifest"\
+                    .format(pkgName=packageName,
+                            ebuild=ebuild)
+            yield "\texit $?"
+            yield "fi"
+        yield "exit 1"
+
+    def get_cl_assemble_drivers_script(self):
+        """part of script for driver installing"""
+        return "\n".join(self.prepareScript(
+                         self.Get('cl_assemble_drivers_info')))
diff --git pym/cl_vars_assemble.py pym/cl_vars_assemble.py
index 0659b90..9858c04 100644
--- pym/cl_vars_assemble.py
+++ pym/cl_vars_assemble.py
@@ -158,3 +158,9 @@ class Data:
 
     # makeconf makeopts
     os_assemble_makeopts = {'mode':'w'}
+
+    # matrix for prepare driver script
+    cl_assemble_drivers_info = {'mode':'r'}
+
+    # part of script for driver installing
+    cl_assemble_drivers_script = {'mode':'r'}
