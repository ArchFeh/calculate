diff --git data/login.d/20desktop data/login.d/20desktop
index 85c0ecf..8ec8ace 100644
--- data/login.d/20desktop
+++ data/login.d/20desktop
@@ -13,7 +13,7 @@
 #  See the License for the specific language governing permissions and
 #  limitations under the License.
 
-env-update
+/usr/sbin/env-update
 source /etc/profile
 source /usr/share/calculate/xdm/functions
 
diff --git data/logout.d/95syncface data/logout.d/95syncface
new file mode 100644
index 0000000..10f57f4
--- /dev/null
+++ data/logout.d/95syncface
@@ -0,0 +1,20 @@
+#!/bin/bash
+# 
+# Syncronize icon face from local user to kdm
+# (c) 2013 Calculate Ltd. http://www.calculate-linux.org
+
+# get icon face directory from kdm config
+get_icon_face_dir() {
+    local config_file=/usr/share/config/kdm/kdmrc
+    [[ -f $config_file ]] && sed -rn 's/^FaceDir=(.*)/\1/p' $config_file
+}
+
+# copy .face.icon from user home directory to kdm face directory
+if [[ $DOMAIN_USER == "off" ]] && [[ -f $HOME_DIR/.face.icon ]]; then
+    FACE_DIR=$(get_icon_face_dir)
+    if [[ -n $FACE_DIR ]] && [[ -d $FACE_DIR ]];then
+        cp $HOME_DIR/.face.icon $FACE_DIR/${USER}.face
+    fi
+fi
+
+exit 0
diff --git data/xdm data/xdm
index cfe5033..b5b346d 100755
--- data/xdm
+++ data/xdm
@@ -76,7 +76,7 @@ umount_user_res(){
 			KILL_PIDS=`fuser ${MOUNT_DIR} 2>/dev/null`
 			if [[ -n $KILL_PIDS ]];
 			then
-				kill -9 KILL_PIDS
+				kill -9 $KILL_PIDS
 			fi
 			umount "${MOUNT_DIR}"
 		done
@@ -147,9 +147,10 @@ FILELIST=$(find ${EXECDIR} -type f | sort)
 
 gtk_background
 DOMAIN_USER="`desktop_variable_value desktop.ur_domain_set`"
+HOME_DIR=`getent passwd $USER | awk -F: '{ print( $6 ); }'`
 for script in $FILELIST
 do
-	FILE_LOG=$FILE_LOG DOMAIN_USER=$DOMAIN_USER /bin/bash $script || die_xmes "failed on execute $script"
+	FILE_LOG=$FILE_LOG HOME_DIR=$HOME_DIR USER=$USER DOMAIN_USER=$DOMAIN_USER /bin/bash $script || die_xmes "failed on execute $script"
 done
 
 sleep_kill()
diff --git desktop/desktop.py desktop/desktop.py
index fd7b8a7..7d87b3e 100644
--- desktop/desktop.py
+++ desktop/desktop.py
@@ -291,3 +291,24 @@ class Desktop:
             time.sleep(1)
         else:
             return False
+          
+    def prepareFace(self,ur_home_path):
+        """Подготовить каталог пользователя с шифрованием для работы с .face
+        
+        Для шифрованных профилей в корне домашней директории
+        создается симлинк на .ecryptfs/.face. В зашифрованном профиле
+        такой симлинк будет создаваться шаблонами
+
+        Args:
+            ur_home_path: домашняя директория пользователя
+
+        Returns:
+            True/False в зависимости от успешности
+        """
+        if path.exists(ur_home_path):
+            symlink_path = path.join(ur_home_path,'.face')
+            if not path.lexists(symlink_path):
+                os.symlink('.ecryptfs/.face', symlink_path)
+                return True
+        else:
+            return False
diff --git desktop/utils/cl_desktop.py desktop/utils/cl_desktop.py
index 3533e2e..a4cc6e6 100644
--- desktop/utils/cl_desktop.py
+++ desktop/utils/cl_desktop.py
@@ -65,16 +65,24 @@ class ClDesktopAction(Action):
           'method':'Desktop.createUserDir(ur_login,ur_uid,ur_gid,ur_home_path)',
           'condition':lambda dv:not path.exists(dv.Get('ur_home_path'))
          },
-         # подключить шифрованные данные
-         {'name':'ecryptfs',
-          'message':__("Mounting encrypted data"),
-          'method':'Desktop.createCryptDir(ur_login,ur_uid,ur_gid,'
-                                          'ur_home_path,False)',
+         # используется ли шифрование
+         {'name':'crypt',
           'condition':lambda dv:(not isMount(dv.Get('ur_home_path')) and \
                       dv.Get('ur_home_crypt_set') == 'on' and 
                       (not dv.isModuleInstalled("install") or
                       dv.Get('install.cl_autologin') != dv.Get('ur_login')))
          },
+         # подготовить шифрованный профиль пользователя для работы с .icon
+         {'name':'crypt:prepare_icon',
+          'method':'Desktop.prepareFace(ur_home_path)',
+          'condition':lambda Get:Get('ur_domain_set') == 'off'
+         },
+         # подключить шифрованные данные
+         {'name':'crypt:ecryptfs',
+          'message':__("Mounting encrypted data"),
+          'method':'Desktop.createCryptDir(ur_login,ur_uid,ur_gid,'
+                                          'ur_home_path,False)'
+         },
          # настроить пользовательских профиль шаблонами
          {'name':'user_profile',
           'message':__("Setting up the user profile"),
diff --git desktop/variables/desktop.py desktop/variables/desktop.py
index 30ae7bb..b90e61f 100644
--- desktop/variables/desktop.py
+++ desktop/variables/desktop.py
@@ -22,10 +22,12 @@ import pwd
 from calculate.lib.datavars import Variable,VariableError,ReadonlyVariable, \
                     ReadonlyTableVariable,FieldValue
 from calculate.lib.variables.user import VariableUrLogin
-from calculate.lib.utils.files import readLinesFile,process,isMount
+from calculate.lib.utils.files import (readLinesFile,process,isMount,
+    listDirectory)
 from calculate.desktop._cl_keys import getKey
 from itertools import *
 from calculate.lib.cl_template import (templateFunction,iniParser)
+import hashlib
 
 from calculate.lib.cl_lang import setLocalTranslate
 setLocalTranslate('cl_desktop3',sys.modules[__name__])
@@ -372,3 +374,31 @@ class VariableClDesktopForceSetupSet(Variable):
     def init(self):
         self.label = _("Force setup")
         self.help = _("force setup")
+
+class VariableClDesktopFacePath(Variable):
+    """Путь к стандартным иконкам пользователей"""
+    value = "/usr/share/pixmaps/faces"
+
+class VariableClDesktopFaceList(Variable):
+    """Список доступных иконок по умолчанию для пользователей"""
+    type = "list"
+
+    def get(self):
+        return sorted(
+               filter(lambda x:x.endswith('.png'),
+               listDirectory(self.Get('cl_desktop_face_path'))))
+
+class VariableClDesktopHashFace(Variable):
+    """Номер иконки пользователя
+
+    Номер вычисляется по контрольной сумму md5 логина пользователя
+    """
+    def get(self):
+        login = self.Get('ur_login')
+        icon_list = self.Get('cl_desktop_face_list')
+        if icon_list:
+            return path.join(self.Get('cl_desktop_face_path'),
+                   icon_list[sum(map(lambda x:ord(x),
+                                 hashlib.md5(login).digest()))%len(icon_list)])
+        else:
+            return ""
diff --git setup.py setup.py
index 1567e89..d2982f6 100755
--- setup.py
+++ setup.py
@@ -42,6 +42,7 @@ data_files += [('/usr/share/calculate/xdm', ['data/cmd_login',
                                              'data/login.d/99final'])] + \
               [('/usr/share/calculate/xdm/logout.d',
                                             ['data/logout.d/00init',
+                                             'data/logout.d/95syncface',
                                              'data/logout.d/98umount'])]
 
 def __scanDir(scanDir, prefix, replace_dirname, dirData, flagDir=False):
