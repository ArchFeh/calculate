commit ddb0933cf78388b384934d6e9ba4cbe18e114506
Author: Mike Hiretsky <mh@calculate.ru>
Date:   Wed May 30 15:40:29 2012 +0400

    Add variable for configure xfce mixer

diff --git a/pym/cl_fill_desktop.py b/pym/cl_fill_desktop.py
index 9637744..fffd037 100644
--- a/pym/cl_fill_desktop.py
+++ b/pym/cl_fill_desktop.py
@@ -16,6 +16,19 @@
 
 import re
 import os
+import sys
+
+# try import gst
+try:
+    olderr = os.dup(sys.stderr.fileno())
+    os.close(sys.stderr.fileno())
+    import gst
+    import gst.interfaces
+except ImportError:
+    gst = None
+finally:
+    os.dup2(olderr,sys.stderr.fileno())
+
 
 class fillVars():
     """Методы определения значений переменных шаблона"""
@@ -109,3 +122,48 @@ class fillVars():
             else:
                 return xsession.lower()
         return ""
+
+    def get_cl_desktop_gst_data(self):
+        """GStreamer data"""
+        if gst is None:
+            return {}
+
+        outdata = {}
+        try:
+            pipeline = "alsamixer"
+            alsamixer = gst.element_factory_make(pipeline)
+            res = alsamixer.set_state(gst.STATE_PAUSED)
+            if res == gst.STATE_CHANGE_SUCCESS:
+                outdata['device_name'] = alsamixer.get_property("device-name")
+                outdata['long_name'] = alsamixer.get_factory().get_longname()
+                outdata['internal_name'] = filter(str.isalnum,
+                                "%s (%s)"%(outdata['device_name'],
+                                           outdata['long_name']))
+                outdata['channels'] = []
+                for t in alsamixer.list_tracks():
+                    if t.flags & gst.interfaces.MIXER_TRACK_OUTPUT:
+                        if t.flags & gst.interfaces.MIXER_TRACK_MASTER or \
+                            any(x in t.label 
+                                for x in ("Wave","Front","LFE","Center",
+                                          "Head","Side","Speaker",
+                                          "Surround","PCM")):
+                            outdata['channels'].append(t.label)
+                            if t.flags & gst.interfaces.MIXER_TRACK_MASTER:
+                                outdata['master_channel'] = t.label
+        except:
+            pass
+        return outdata
+
+    def get_cl_desktop_gst_card(self):
+        """Internal card name for xfce mixer"""
+        return self.Get('cl_desktop_gst_data').get('internal_name','')
+
+    def get_cl_desktop_gst_masterchannel(self):
+        """Master track name"""
+        return self.Get('cl_desktop_gst_data').get('master_channel','')
+
+    def get_cl_desktop_xfce_mixer(self):
+        """List of channel for xfce-perchannel mixer"""
+        return "\n".join(
+               map(lambda x:'      <value type="string" value="%s" />'%x,
+               self.Get('cl_desktop_gst_data').get('channels',[])))
diff --git a/pym/cl_vars_desktop.py b/pym/cl_vars_desktop.py
index bcd6715..66ef68e 100644
--- a/pym/cl_vars_desktop.py
+++ b/pym/cl_vars_desktop.py
@@ -69,6 +69,18 @@ class Data:
     # user current X session
     cl_desktop_xsession = {}
 
+    # GStreamer data
+    cl_desktop_gst_data = {'hide':True}
+
+    # internal card name for xfce mixer
+    cl_desktop_gst_card = {}
+
+    # master track name
+    cl_desktop_gst_masterchannel = {}
+
+    # list of channel for xfce-perchannel mixer
+    cl_desktop_xfce_mixer = {}
+
     # lib vars
     cl_env_path = {}
     cl_root_path = {'mode':"w"}
