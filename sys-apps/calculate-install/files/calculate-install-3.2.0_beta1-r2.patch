diff --git install/variables/distr.py install/variables/distr.py
index 2e0d32c..a1da1a1 100644
--- install/variables/distr.py
+++ install/variables/distr.py
@@ -505,9 +505,13 @@ class VariableClTarget(ReadonlyVariable):
         elif self.Get('os_install_pxe') == "on":
             return PxeDistributive(self.Get('os_install_pxe_path'))
         elif self.Get('os_install_root_type')=="flash":
+            flashLabel = "{short}-{build}".format(
+                short=self.Get('os_install_linux_shortname'),
+                build=self.Get('os_install_linux_build'))
             return FlashDistributive(disk,mdirectory="/mnt/install",
                                     check=True, fileSystem=fileSystem,
                                     isFormat=isFormat, systemId=systemId,
+                                    rootLabel=flashLabel,
                                     partitionTable=partTable)
         else:
             target = PartitionDistributive(disk,mdirectory='/mnt/install',
diff --git install/variables/net.py install/variables/net.py
index 01b0032..a07cfe3 100644
--- install/variables/net.py
+++ install/variables/net.py
@@ -34,6 +34,7 @@ from calculate.lib.utils import ip
 from calculate.lib.utils.portage import isPkgInstalled
 from operator import itemgetter
 from itertools import *
+from functools import partial
 import hashlib
 from calculate.install.distr import DistributiveError
 
@@ -92,18 +93,24 @@ class VariableOsInstallNetInterfacesOrig(NetHelper,ReadonlyVariable):
     """
     type = "list"
 
+    def is_classic_interface_name(self):
+        hashsum = lambda x: hashlib.md5(readFile(x)).digest()
+        chroot_path = self.Get('cl_chroot_path')
+        etc_path_join = partial(path.join,
+                                chroot_path, 'etc/udev/rules.d')
+        lib_path_join = partial(path.join,
+                                chroot_path, 'lib/udev/rules.d')
+        udev_files = ('70-persistent-net.rules',
+                      '80-net-name-slot.rules',
+                      '80-net-setup-link.rules')
+        for etc_file, lib_file in  izip(map(etc_path_join,udev_files),
+                                        map(lib_path_join,udev_files)):
+            if path.exists(etc_file) and hashsum(etc_file) != hashsum(lib_file):
+                return True
+        return False
+
     def get(self):
-        chrootPath = self.Get('cl_chroot_path')
-        pathOldUdevNet = path.join(chrootPath,
-            'etc/udev/rules.d/70-persistent-net.rules')
-        pathNewUdevNet = path.join(chrootPath,
-            'etc/udev/rules.d/80-net-name-slot.rules')
-        pathOrigUdevNet = path.join(chrootPath,
-            'lib/udev/rules.d/80-net-name-slot.rules')
-        if path.exists(pathOldUdevNet) or \
-            (path.exists(pathNewUdevNet) and 
-            hashlib.md5(readFile(pathNewUdevNet)).digest() != \
-            hashlib.md5(readFile(pathOrigUdevNet)).digest()):
+        if self.is_classic_interface_name():
             return self.Get('os_install_net_interfaces')
         def getOrig(x):
             try:
diff --git install/wsdl_install.py install/wsdl_install.py
index bff5954..4808516 100644
--- install/wsdl_install.py
+++ install/wsdl_install.py
@@ -95,8 +95,6 @@ class Wsdl(WsdlBase):
                 expert=('cl_install_home_crypt_set',),
                 hide=('cl_migrate_data',),
                 brief=('cl_migrate_user',)),
-            lambda group:group(_("Audio"),
-                normal=('os_audio_default',)),
             lambda group:group(_("Video"),
                 normal=('os_install_x11_video_drv','os_install_x11_composite',
                         'os_install_x11_resolution','os_install_fb_resolution',
@@ -154,28 +152,8 @@ class Wsdl(WsdlBase):
                 expert=('os_install_pxe_path',
                         'os_install_pxe_ip'),
                 next_label=_("Install"))]},
-        # настройка аудио
-        {
-        'method_name':"setup_audio",
-        'category':__("Configuration"),
-        'title':__("Audio"),
-        'image':'audio-card',
-        'command':'cl-setup-audio',
-        'gui':True,
-        'rights':['setupaudio'],
-        'logic':{'Install':install.Install},
-        'action':ClSetupAudioAction,
-        'datavars':"install",
-        'native_error':(VariableError,DataVarsError,install.InstallError),
-        'setvars':{'cl_action!':'merge','cl_merge_pkg!':[None],
-                   'cl_merge_set!':"on",'cl_setup':'audio'},
-        'groups':[
-            lambda group:group(_("Audio"),
-                normal=('os_audio_default',),
-                expert=('cl_templates_locate',"cl_dispatch_conf","cl_verbose_set"),
-                next_label=_("Save"))]},
-        {
         # настройка загрузки системы
+        {
         'method_name':"setup_boot",
         'category':__("Configuration"),
         'title':__("Boot"),
