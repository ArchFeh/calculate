commit 983964d61d224534244569e565afe94aa6c179b0
Author: Mike Hiretsky <mh@calculate.ru>
Date:   Wed Jun 27 17:57:39 2012 +0400

    Fix print expected error in cl-configure
    
    Fix detect default mbr for hdd installation

diff --git a/install/cl_install.py b/install/cl_install.py
index 04dfbe5..ec71e82 100644
--- a/install/cl_install.py
+++ b/install/cl_install.py
@@ -830,6 +830,13 @@ class Install(color_print):
                         pass
             if not setupType:
                 self.installDesktopClient()
+        except (MigrationError,
+                TemplatesError,
+                InstallError,
+                AutopartitionError,
+                DistributiveError) as e:
+            error = str(e)
+            self.printERROR(error)
         except (BaseException),e:
             error = ""
             for i in apply(traceback.format_exception, sys.exc_info()):
@@ -841,6 +848,13 @@ class Install(color_print):
                 self.clVars.close()
                 if target:
                     target.close()
+            except (MigrationError,
+                    TemplatesError,
+                    InstallError,
+                    AutopartitionError,
+                    DistributiveError) as e:
+                error = str(e)
+                self.printERROR(error)
             except (BaseException),e:
                 error = ""
                 for i in apply(traceback.format_exception, sys.exc_info()):
diff --git a/install/variables/disk.py b/install/variables/disk.py
index 22989c5..a2e8078 100644
--- a/install/variables/disk.py
+++ b/install/variables/disk.py
@@ -1423,9 +1423,7 @@ class VariableOsInstallMbr(LocationHelper,Variable):
             # search /boot device or / device, by priority /boot,/
             if bootDevice:
                 return bootDevice
-        if self.Get('os_device_dev'):
-            return [self.Get('os_device_dev')[0]]
-        return []
+        return self.Select('os_device_dev',where='os_device_type',eq='hdd')
 
     def choice(self):
         deviceParentMap = dict(self.ZipVars('os_device_dev','os_device_name'))
