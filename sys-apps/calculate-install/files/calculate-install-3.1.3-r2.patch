diff --git install/cl_install.py install/cl_install.py
index f4a511b..a225a7a 100644
--- install/cl_install.py
+++ install/cl_install.py
@@ -590,16 +590,14 @@ class Install(color_print):
         self.endTask()
 
         self.startTask(_("Copying configuration files to the new system"))
-        fileMask = r"/etc/udev/rules\.d/70-persistent-net\.rules"
         if self.clVars.Get('os_root_type') != "livecd":
             fileMask = \
-                "(%s|/etc/ssh/ssh_host_.*|/root/.ssh/(id_.*|known_hosts))"% \
-                    fileMask
-        fileCpy = otherfilesCopy(target=targetDistr.getDirectory(),
-                                 reTest=fileMask)
-        fileCpy.performCopy('/etc')
-        if path.exists('/root/.ssh'):
-            fileCpy.performCopy('/root/.ssh')
+                "(/etc/ssh/ssh_host_.*|/root/.ssh/(id_.*|known_hosts))"
+            fileCpy = otherfilesCopy(target=targetDistr.getDirectory(),
+                                     reTest=fileMask)
+            fileCpy.performCopy('/etc')
+            if path.exists('/root/.ssh'):
+                fileCpy.performCopy('/root/.ssh')
         self.endTask()
 
         # optimize initrd
diff --git install/variables/net.py install/variables/net.py
index c8801c4..2213077 100644
--- install/variables/net.py
+++ install/variables/net.py
@@ -28,11 +28,13 @@ from calculate.lib.utils.ip import (getInterfaces,getIp,getMask,getMac,
     cidrToMask,maskToCidr,getIpNet,isDhcpIp,checkIp,checkMask,
     getOperState)
 from calculate.lib.utils.device import lspci
-from calculate.lib.utils.files import listDirectory,readLinesFile,process
+from calculate.lib.utils.files import listDirectory,readLinesFile,process,\
+                                      readFile
 from calculate.lib.utils import ip
 from calculate.lib.utils.portage import isPkgInstalled
 from operator import itemgetter
 from itertools import *
+import hashlib
 
 class NetHelper:
     """
@@ -95,8 +97,12 @@ class VariableOsInstallNetInterfacesOrig(NetHelper,ReadonlyVariable):
             'etc/udev/rules.d/70-persistent-net.rules')
         pathNewUdevNet = path.join(chrootPath,
             'etc/udev/rules.d/80-net-name-slot.rules')
-        for foundPath in ifilter(path.exists,(pathOldUdevNet,
-                                              pathNewUdevNet)):
+        pathOrigUdevNet = path.join(chrootPath,
+            'lib/udev/rules.d/80-net-name-slot.rules')
+        if path.exists(pathOldUdevNet) or \
+            (path.exists(pathNewUdevNet) and 
+            hashlib.md5(readFile(pathNewUdevNet)).digest() != \
+            hashlib.md5(readFile(pathOrigUdevNet)).digest()):
             return self.Get('os_install_net_interfaces')
         def getOrig(x):
             try:
