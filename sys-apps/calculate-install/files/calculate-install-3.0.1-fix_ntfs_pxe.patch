diff --git data/calculate data/calculate
index 9b3c784..ea32c87 100644
--- data/calculate
+++ data/calculate
@@ -124,7 +124,11 @@ start() {
 
 	# reinit net.* services
 	local roottype=`variable_value os_root_type`
-	[[ $roottype == "livecd" ]] && udevadm trigger --action="add" --subsystem-match=net
+	if [[ $roottype == "livecd" ]]
+	then
+		touch /* /bin/* /sbin/*
+		udevadm trigger --action="add" --subsystem-match=net
+	fi
 
 	/sbin/rc-update --update
 	return 0
diff --git install/cl_wsdl_install.py install/cl_wsdl_install.py
index ae5a639..a213a81 100644
--- install/cl_wsdl_install.py
+++ install/cl_wsdl_install.py
@@ -24,6 +24,7 @@ from calculate.core.server.api_types import ReturnedMessage
 from calculate.core.server.api_types import ChoiceValue, Table, Option, Field, \
                                            GroupField, ViewInfo, ViewParams
 from calculate.lib.datavars import VariableError,DataVarsError
+from calcualte.install.cl_install import InstallError
 
 #from cl_install import Install,DataVarsInstall
 import cl_install
@@ -107,7 +108,7 @@ class catchExcept:
                     default = 'color:red;',
                     element = "error"))
             view.groups.append(group)
-            if not isinstance(VariableError,DataVarsError,InstallError):
+            if not type(e) in (InstallError,DataVarsInstall,VariableError):
                 for i in apply(traceback.format_exception, sys.exc_info()):
                     print i,
 
diff --git install/fs_manager.py install/fs_manager.py
index 7892e35..f3f7a62 100644
--- install/fs_manager.py
+++ install/fs_manager.py
@@ -100,14 +100,14 @@ class FileSystemManager:
                   'msdos': '0b',
                   'type':['flash']},
          'ntfs': {'defaultopt': defaultOpt,
-                  'format': '/sbin/mkfs.ntfs',
+                  'format': '/usr/sbin/mkfs.ntfs',
                   'formatparam': '{labelparam} -FQ {device}',
                   'gpt': '0700',
                   'label': '-L {labelname}',
                   'msdos': '7',
                   'compatible':['ntfs-3g']},
          'ntfs-3g': {'defaultopt': defaultOpt,
-                     'format': '/sbin/mkfs.ntfs',
+                     'format': '/usr/sbin/mkfs.ntfs',
                      'formatparam': '{labelparam} -FQ {device}',
                      'gpt': '0700',
                      'label': '-L {labelname}',
diff --git install/variables/disk.py install/variables/disk.py
index d0d8fee..efda7f8 100644
--- install/variables/disk.py
+++ install/variables/disk.py
@@ -998,6 +998,8 @@ class VariableOsLocationPerformFormat(LocationHelper,Variable):
             return  map(self.defaultPerformFormat(),
                     zip(source,mount,fs,value))
 
+    fixNtfs = lambda self,x:{'ntfs-3g':'ntfs'}.get(x,x)
+
     def check(self,value):
         """Check perform format
 
@@ -1016,9 +1018,11 @@ class VariableOsLocationPerformFormat(LocationHelper,Variable):
         unavailFS = set(self.Select('os_format_type',
                                     where='os_format_use',
                                     eq="off"))
+        fixNtfs = self.fixNtfs
         for dev,mp,fs,isformat in info:
             # should format if change fs or partition is root, but non flash
-            partitionMustFormat = diskFormat.get(dev,fs) != fs or \
+            partitionMustFormat = \
+                    fixNtfs(diskFormat.get(dev,fs)) != fixNtfs(fs) or \
                     (mp == '/' and \
                      self.Get('os_install_root_type') != 'flash')
             # if entry has mount point AND
@@ -1060,10 +1064,11 @@ class VariableOsLocationPerformFormat(LocationHelper,Variable):
                              (self.Get('os_disk_format'))))
         def wrap(info):
             source,dest,fs,isformat = info
+            fixNtfs = self.fixNtfs
             if not isformat and source.startswith('/dev/'):
                 if dest == '/':
                     return "on"
-                if dest and diskFormat.get(source,fs) != fs:
+                if dest and fixNtfs(diskFormat.get(source,fs)) != fixNtfs(fs):
                     return "on"
             return isformat or ("off" if source.startswith('/dev/') else "")
         return wrap
@@ -1591,7 +1596,7 @@ class VariableOsInstallFstabMountConf(ReadonlyVariable,DeviceHelper):
             devicesForFstab = filter(lambda x:x[1] != "/", devicesForFstab)
 
         # rootLine one string, but it correct work if devicesForFstab is empty
-        rootLine =  "\n".join(map(lambda x: "%s\t%s\t%s\t%s\t0 2" %
+        rootLine =  "\n".join(map(lambda x: "%s\t%s\t%s\t%s\t0 1" %
                         (self._commentFstab(x[0],x[1],x[4]),x[1],x[2],x[3]),
                                         devicesForFstab[:1]))
         otherLines = "\n".join(map(lambda x: "%s\t%s\t%s\t%s\t0 0" %
