diff --git data/calculate data/calculate
index 4658f4e..9b3c784 100644
--- data/calculate
+++ data/calculate
@@ -101,10 +101,11 @@ configure_users() {
 		for user in $(variable_value cl_migrate_user | sed -r "s/,/ /g")
 		do
 			HOME_DIR=`getent passwd $user | awk -F: '{ print( $6 ); }'`
-			if [[ $user == "root" ]] || [[ -f $HOME_DIR/.calculate/ini.env ]]
+			if [[ -f $HOME_DIR/.calculate/ini.env ]]
 			then
 				cl-desktop $user
 			fi
+			cl-desktop root
 		done
 	fi
 }
diff --git install/cl_install.py install/cl_install.py
index 3e9e645..4822c54 100644
--- install/cl_install.py
+++ install/cl_install.py
@@ -482,7 +482,8 @@ class Install(color_print):
             else:
                 prefixBoot = ""
             grubProcess = process(cmdGrubInstall,
-                              "--boot-directory=%s"%target.getBootDirectory(),
+                              "--boot-directory=%s"%pathJoin(prefixBoot,
+                              target.getBootDirectory()),
                               mbrDisk, "-f", stderr=STDOUT,envdict=os.environ)
             if grubProcess.failed():
                 raise DistributiveError(_("Failed to install the bootloader"))
diff --git install/variables/disk.py install/variables/disk.py
index 44ed3f9..a74f737 100644
--- install/variables/disk.py
+++ install/variables/disk.py
@@ -610,6 +610,8 @@ class VariableOsLocationData(LocationHelper,TableVariable):
               "os_location_perform_format",
               "os_location_size"]
 
+    check_after = ["os_install_root_type"]
+
     def init(self):
         self.help = _("DISK bound for installation will be mounted to the "
                       "DIR directory. If set to 'none', the mount point will "
diff --git install/variables/distr.py install/variables/distr.py
index 5aae686..d9af10e 100644
--- install/variables/distr.py
+++ install/variables/distr.py
@@ -242,10 +242,10 @@ class VariableClImage(ReadonlyVariable):
 
     def get(self):
         """Get image file from distributive repository"""
-        if self.Get('cl_action') != 'system':
-            return Distributive.fromFile('/')
-        filename = self.Get('cl_image_filename')
         try:
+            if self.Get('cl_action') != 'system':
+                return Distributive.fromFile('/')
+            filename = self.Get('cl_image_filename')
             if filename:
                 filename = Distributive.fromFile(filename)
         except DistributiveError as e:
