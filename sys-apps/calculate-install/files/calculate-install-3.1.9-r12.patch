diff --git data/calculate data/calculate
index c7f60b9..60a24b0 100644
--- data/calculate
+++ data/calculate
@@ -134,10 +134,6 @@ start() {
 		touch /* /bin/* /sbin/*
 		udevadm trigger --action="add" --subsystem-match=net
 	fi
-	if [[ $roottype != "livecd" ]]
-	then
-		/usr/bin/eix-checkout &>/dev/null &
-	fi
 
 	/sbin/rc-update --update
 	return 0
diff --git install/distr.py install/distr.py
index 88de47f..e6202e8 100644
--- install/distr.py
+++ install/distr.py
@@ -31,7 +31,8 @@ from functools import partial
 from calculate.lib.utils.files import (runOsCommand,isMount,removeDir,
                     processProgress,countFiles,STDOUT,
                     typeFile,pathJoin,process,getRunCommands,
-                    readLinesFile,getProgPath,listDirectory,checkUtils)
+                    readLinesFile,getProgPath,listDirectory,checkUtils,
+                    MAGIC_COMPRESS,MAGIC_SYMLINK,MAGIC_CONTINUE)
 from calculate.lib.utils.common import getTupleVersion,cmpVersion
 from calculate.lib.utils.device import (detectDeviceForPartition, 
                                 getUdevDeviceInfo, countPartitions,
@@ -114,7 +115,7 @@ class Distributive(object):
     def fromFile(cls,filename):
         """Get Distributive object by filename"""
         # MAGIC_COMPRESS 0x000004 Check inside compressed files 
-        tf = typeFile(magic=0x6)
+        tf = typeFile(magic=MAGIC_COMPRESS|MAGIC_SYMLINK|MAGIC_CONTINUE)
         ftype = tf.getMType(filename)
         if ftype:
             if "block special" in ftype:
@@ -753,7 +754,7 @@ class PartitionDistributive(Distributive):
             mulipartDataNotBind = filter(lambda x: x[2]!="bind",
                                          self.getMultipartData())
             for dev, mountPoint, fileSystem, isFormat, partTable\
-                    in mulipartDataNotBind:
+                    in sorted(mulipartDataNotBind, key=lambda x:x[1]):
                 if fileSystem!="swap":
                     realMountPoint = pathJoin(mdirectory, mountPoint)
                     self._mountPartition(dev,realMountPoint,"-t %s"%fileSystem)
@@ -1095,7 +1096,7 @@ class IsoDistributive(Distributive):
         self.compress = compress
 
     def getType(self):
-        tf = typeFile(magic=0x6)
+        tf = typeFile(magic=MAGIC_COMPRESS|MAGIC_SYMLINK|MAGIC_CONTINUE)
         ftype = tf.getMType(self.file)
         if "block special" in ftype:
             return _("live image %s")%self.file
@@ -1116,7 +1117,7 @@ class IsoDistributive(Distributive):
     def _mountIso(self,file,directory):
         if self.file != self.mdirectory:
             self._makeDirectory(directory)
-            tf = typeFile(magic=0x6)
+            tf = typeFile(magic=MAGIC_COMPRESS|MAGIC_SYMLINK|MAGIC_CONTINUE)
             ftype = tf.getMType(file)
             if "block special" in ftype:
                 mopts = "-o ro"
diff --git install/install.py install/install.py
index fdd6b04..c3e0c7e 100644
--- install/install.py
+++ install/install.py
@@ -28,7 +28,8 @@ from shutil import copy2
 from calculate.core.server.func import safetyWrapper
 from calculate.lib.utils.files import (runOsCommand,pathJoin,
                                        isMount,process,listDirectory,STDOUT,
-                                       checkUtils,readFile,find,copyWithPath)
+                                       checkUtils,readFile,find,copyWithPath,
+                                       readLinesFile)
 from calculate.lib.utils.common import (appendProgramToEnvFile,
                         removeProgramToEnvFile, getTupleVersion,
                         cmpVersion,getUserPassword,
@@ -350,7 +351,7 @@ class Install:
             newModuleName = defaultGL
         curModuleName = map(lambda x:x.strip().rpartition('=')[-1].strip('"\''),
                    filter(lambda x: x.startswith("OPENGL_PROFILE="),
-                          readFile(openGLenv)))
+                          readLinesFile(openGLenv)))
         curModuleName = curModuleName[-1] if curModuleName else ""
         if curModuleName == newModuleName:
             return True
diff --git install/variables/audio.py install/variables/audio.py
index 0243ec3..5dc7a1c 100644
--- install/variables/audio.py
+++ install/variables/audio.py
@@ -33,13 +33,12 @@ class VariableOsAudioData(ReadonlyTableVariable):
               'os_audio_name']
 
     def get(self,hr=False):
-        alsaInfo = getProgPath('/usr/bin/alsa-info')
-        if not alsaInfo:
+        data = readFile('/proc/asound/cards')
+        cards = re.findall('^\s*(\d+).*\n\s+(\S.*) at .*$',data,re.M)
+        if cards:
+            return map(list, cards)
+        else:
             return [[]]
-        entry = re.compile('^Card hw:(\d+)\s*[^/]+/\'(.*?) at .*$')
-        return tuple(map(lambda x:x.groups(),
-               filter(None,map(entry.search,
-               process(alsaInfo,'--stdout',envdict=os.environ)))))
 
     setValue = Variable.setValue
 
diff --git install/variables/disk.py install/variables/disk.py
index ef0f9e2..14462e7 100644
--- install/variables/disk.py
+++ install/variables/disk.py
@@ -31,7 +31,7 @@ from calculate.lib.utils.device import (getUdevDeviceInfo,getDeviceType,
                         getUUIDDict,getCommonDeviceName)
 from calculate.install.variables.autopartition import Sizes
 from calculate.lib.utils.files import (listDirectory,pathJoin,readFile,FStab,
-                                       isMount)
+                                       isMount,getProgPath)
 from calculate.install.distr import PartitionDistributive
 from calculate.install.fs_manager import FileSystemManager
 
@@ -110,7 +110,8 @@ class VariableOsDeviceDev(ReadonlyVariable,DeviceHelper):
         """Get device /dev name"""
         if self.master is None:
             self.master,slave = pty.openpty()
-            self.monitor = Popen(["/sbin/udevadm","monitor","--kernel",
+            udevAdm = getProgPath('/sbin/udevadm')
+            self.monitor = Popen([udevAdm,"monitor","--kernel",
                                 "--subsystem-match=block"],stdout=slave,
                                 close_fds=True)
             os.close(slave)
@@ -1834,7 +1835,7 @@ class VariableOsInstallFstabMountConf(ReadonlyVariable,DeviceHelper):
                                        'os_install_disk_mount',
                                        'os_install_disk_format',
                                        'os_install_disk_options',
-                                       'os_disk_dev'],
+                                       'os_install_disk_dev'],
                                where='os_install_disk_mount',
                                func=lambda x:x[0] != "" and x[0] != "swap"),
                           lambda x,y: cmp(self.separateDevice(x[1]),
diff --git install/variables/kernel.py install/variables/kernel.py
index 2e844ac..6fa1bd7 100644
--- install/variables/kernel.py
+++ install/variables/kernel.py
@@ -19,7 +19,8 @@ import sys
 import re
 from os import path
 from calculate.lib.datavars import Variable,VariableError,ReadonlyVariable
-from calculate.lib.utils.files import typeFile,process,listDirectory
+from calculate.lib.utils.files import (
+        typeFile,process,listDirectory,MAGIC_SYMLINK,MAGIC_COMPRESS)
 
 from calculate.lib.cl_lang import setLocalTranslate
 setLocalTranslate('cl_install3',sys.modules[__name__])
@@ -137,8 +138,10 @@ class KernelHelper:
     def getFilesByType(self,pathname,descr):
         """Get files from "pathname" has "descr" in descriptions"""
         filelist = map(lambda x:path.join(pathname,x),os.listdir(pathname))
-        ftype = typeFile(magic=0x4).getMType
-        filesWithType = map(lambda x:(x,ftype(x)), filelist)
+        ftype = typeFile(magic=MAGIC_COMPRESS|MAGIC_SYMLINK).getMType
+        filesWithType = map(lambda x:(x,ftype(x)),
+                        filter(path.exists,
+                        filelist))
         return filter(lambda x:descr in x[1],filesWithType)
 
     def getInitrd(self,arch,shortname,chroot,kernel,suffix="",notsuffix=""):
@@ -150,7 +153,7 @@ class KernelHelper:
                 return resInitrdVer.groups()[1]
             return ""
 
-        ftype = typeFile(magic=0x4).getMType
+        ftype = typeFile(magic=MAGIC_COMPRESS|MAGIC_SYMLINK).getMType
         kernelfile = path.join(chroot,'boot',kernel)
         typeKernelFile = ftype(kernelfile)
         if typeKernelFile == None:
diff --git install/variables/net.py install/variables/net.py
index d8d22f6..01b0032 100644
--- install/variables/net.py
+++ install/variables/net.py
@@ -107,11 +107,18 @@ class VariableOsInstallNetInterfacesOrig(NetHelper,ReadonlyVariable):
             return self.Get('os_install_net_interfaces')
         def getOrig(x):
             try:
-                nameParam = filter(lambda x:x.startswith("ID_NET_NAME_PATH="),
-                            process("udevadm","test-builtin","net_id",
-                                    "/sys/class/net/%s"%x))
+                nameParam = \
+                    map(lambda x:x.partition('=')[::2],
+                    filter(lambda x:x.startswith("ID_NET_NAME_PATH=") or
+                                    x.startswith("ID_NET_NAME_ONBOARD="),
+                    process("udevadm","test-builtin","net_id",
+                                    "/sys/class/net/%s"%x)))
                 if nameParam:
-                    return nameParam[0].partition('=')[2].strip() or x
+                    sortOrder = {'ID_NET_NAME_PATH':0,
+                                 'ID_NET_NAME_ONBOARD':1}
+                    nameParam = sorted(nameParam,
+                                key=lambda x:sortOrder.get(x[0],-1))
+                    return nameParam[-1][1].strip() or x
             except Exception as e:
                 print str(e)
                 return x
@@ -783,3 +790,24 @@ class VariableOsInstallNetSettings(NetHelper,Variable):
 
     def choice(self):
         return [("","")]+self.Get('os_install_net_conf_available')
+
+class VariableOsInstallPxeIp(Variable):
+    """
+    IP адрес PXE сервера
+    """
+    type = "choice"
+    opt = ["--ip"]
+    metavalue = "IP"
+
+    def init(self):
+        self.label = _("PXE server IP")
+        self.help = "set IP address for PXE server"
+
+    def get(self):
+        for ipaddr in ifilter(None, self.Get('os_install_net_ip')):
+            return ipaddr
+        else:
+            return ""
+
+    def choice(self):
+        return filter(None, self.Get('os_install_net_ip'))
diff --git install/variables/system.py install/variables/system.py
index a9193b6..69e800e 100644
--- install/variables/system.py
+++ install/variables/system.py
@@ -86,8 +86,6 @@ class VariableOsFormatUse(ReadonlyVariable):
                 'value': "off"}
 
     def checkFunc(self,fs):
-        if fs == "btrfs" and self.Get('os_root_type') == 'livecd':
-            return "no"
         if "format" in FileSystemManager.supportFS[fs] and \
                path.exists(FileSystemManager.supportFS[fs]["format"]):
             return "yes"
@@ -656,6 +654,10 @@ class VariableOsInstallGrubTerminal(Variable):
                                 'etc/default/grub')
         if getValueFromConfig(grubDefault,'GRUB_TERMINAL') == 'console':
             return 'console'
+        grubCfg = '/boot/grub/grub.cfg'
+        if re.search('^terminal_output\s*console',readFile(grubCfg),re.M):
+            return 'console'
+
         return 'gfxterm'
 
     def choice(self):
diff --git install/wsdl_install.py install/wsdl_install.py
index 511e16c..f47e342 100644
--- install/wsdl_install.py
+++ install/wsdl_install.py
@@ -150,7 +150,8 @@ class Wsdl(WsdlBase):
         'groups':[
             lambda group:group(_("PXE install"),
                 normal=('cl_image_filename',),
-                expert=('os_install_pxe_path',),
+                expert=('os_install_pxe_path',
+                        'os_install_pxe_ip'),
                 next_label=_("Install"))]},
         # настройка аудио
         {
