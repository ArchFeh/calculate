diff --git pym/cl_fill_install.py pym/cl_fill_install.py
index fb9434e..1b2e27b 100644
--- pym/cl_fill_install.py
+++ pym/cl_fill_install.py
@@ -25,7 +25,7 @@ from os import readlink,access,R_OK
 from cl_utils import isMount,typeFile,getTupleVersion,pathJoin,isFstabMount,\
                      listDirectory, getAvailableX11Drivers, getUUIDDict, \
                      isPkgInstalled, process, checkUtils, readLinesFile, \
-                     lspci
+                     lspci, getPartitionSize
 from cl_distr import DistributiveRepository,PartitionDistributive
 from cl_fill import clLocale
 from operator import itemgetter
@@ -381,7 +381,7 @@ class fillVars(object, glob_attr):
                     disk_hash[partition]['part'] = parts[4]
                     if len(parts)>5 and "swap" in parts[5]:
                         disk_hash[partition]['format'] = 'swap'
-                disk_hash[partition]['size'] = parts[3]
+                disk_hash[partition]['size'] = getPartitionSize(partition)
         # fill format, name and uuid
         execStr = self.getProgPath('/sbin/blkid')
         res = self._runos(execStr)
diff --git pym/cl_install.py pym/cl_install.py
index 97404c5..f2cf84c 100644
--- pym/cl_install.py
+++ pym/cl_install.py
@@ -1279,7 +1279,7 @@ class cl_install(color_print, SignalInterrupt):
         if filter(lambda x: x != '/', usedMP):
             if self.clVars.Get('os_install_scratch') == "on":
                 self.printERROR(
-                    _("Builder mode is not support multipartition"))
+                    _("Builder mode is not support multipartition install"))
                 return False
 
         # check specified devices
@@ -1735,7 +1735,7 @@ class cl_install(color_print, SignalInterrupt):
         mbrDisk = self.clVars.Get('os_install_mbr')
         mbrDiskNum = self.varSelect(
             "os_device_map",where="os_device_dev",eq=mbrDisk)
-        if not mbrDiskNum:
+        if not mbrDiskNum and mbrDiskNum != 0:
             raise DistributiveError(_("Cann't determine mbr disk"))
         for line in ("root (hd%s)"%bootDisk,
                      "setup (hd%d)"%mbrDiskNum,
