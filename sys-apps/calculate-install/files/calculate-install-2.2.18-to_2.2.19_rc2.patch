diff --git data/bashlogin data/bashlogin
new file mode 100755
index 0000000..ea9493a
--- /dev/null
+++ data/bashlogin
@@ -0,0 +1,7 @@
+#!/bin/bash
+
+export HOME=/root
+cat /etc/motd 2>/dev/null
+cd /root
+[[ -e .bash_profile ]] && source .bash_profile
+exec -l /bin/bash -i
diff --git i18n/cl_install_bg.mo i18n/cl_install_bg.mo
index e4c3321..7f08954 100644
Binary files i18n/cl_install_bg.mo and i18n/cl_install_bg.mo differ
diff --git i18n/cl_install_ru.mo i18n/cl_install_ru.mo
index e8ea763..b0d5d92 100644
Binary files i18n/cl_install_ru.mo and i18n/cl_install_ru.mo differ
diff --git pym/cl_fill_install.py pym/cl_fill_install.py
index fb9434e..1b2e27b 100644
--- pym/cl_fill_install.py
+++ pym/cl_fill_install.py
@@ -25,7 +25,7 @@ from os import readlink,access,R_OK
 from cl_utils import isMount,typeFile,getTupleVersion,pathJoin,isFstabMount,\
                      listDirectory, getAvailableX11Drivers, getUUIDDict, \
                      isPkgInstalled, process, checkUtils, readLinesFile, \
-                     lspci
+                     lspci, getPartitionSize
 from cl_distr import DistributiveRepository,PartitionDistributive
 from cl_fill import clLocale
 from operator import itemgetter
@@ -381,7 +381,7 @@ class fillVars(object, glob_attr):
                     disk_hash[partition]['part'] = parts[4]
                     if len(parts)>5 and "swap" in parts[5]:
                         disk_hash[partition]['format'] = 'swap'
-                disk_hash[partition]['size'] = parts[3]
+                disk_hash[partition]['size'] = getPartitionSize(partition)
         # fill format, name and uuid
         execStr = self.getProgPath('/sbin/blkid')
         res = self._runos(execStr)
diff --git pym/cl_install.py pym/cl_install.py
index 97404c5..f2cf84c 100644
--- pym/cl_install.py
+++ pym/cl_install.py
@@ -1279,7 +1279,7 @@ class cl_install(color_print, SignalInterrupt):
         if filter(lambda x: x != '/', usedMP):
             if self.clVars.Get('os_install_scratch') == "on":
                 self.printERROR(
-                    _("Builder mode is not support multipartition"))
+                    _("Builder mode is not support multipartition install"))
                 return False
 
         # check specified devices
@@ -1735,7 +1735,7 @@ class cl_install(color_print, SignalInterrupt):
         mbrDisk = self.clVars.Get('os_install_mbr')
         mbrDiskNum = self.varSelect(
             "os_device_map",where="os_device_dev",eq=mbrDisk)
-        if not mbrDiskNum:
+        if not mbrDiskNum and mbrDiskNum != 0:
             raise DistributiveError(_("Cann't determine mbr disk"))
         for line in ("root (hd%s)"%bootDisk,
                      "setup (hd%d)"%mbrDiskNum,
diff --git setup.py setup.py
index fd47b8d..ec5aaae 100755
--- setup.py
+++ setup.py
@@ -31,7 +31,8 @@ share_calculate_dir = "/usr/share/calculate"
 data_dirs_share = ['i18n']
 data_files += [('/etc/init.d', ['data/calculate']),
                ('/usr/share/calculate/doc', ['data/handbook-en.html',
-                                             'data/handbook-ru.html'])]
+                                             'data/handbook-ru.html']),
+               ('/bin',['data/bashlogin'])]
 #template_calculate_dir = os.path.join(share_calculate_dir, "templates")
 #template_replace_dirname = "install"
 
@@ -75,7 +76,8 @@ class cl_install_data(install_data):
     def run (self):
         install_data.run(self)
         #data_file = [("/etc/init.d/calculate-2.2",0755)]
-        data_file = [("/etc/init.d/calculate",0755)]
+        data_file = [("/etc/init.d/calculate",0755),
+                      ("/bin/bashlogin",0755)]
         fileNames = map(lambda x: os.path.split(x[0])[1], data_file)
         listNames = map(lambda x: filter(lambda y: y, x[0].split("/")),
                         data_file)
