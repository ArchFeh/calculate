diff --git pym/install/install.py pym/install/install.py
index 80b63e6..7c0242f 100644
--- pym/install/install.py
+++ pym/install/install.py
@@ -25,7 +25,6 @@ import string
 from time import sleep
 from subprocess import PIPE,STDOUT
 from shutil import copy2
-from calculate.core.server.task_set import TaskSet
 from calculate.lib.utils.files import (runOsCommand,pathJoin,
                                        isMount,process,listDirectory,STDOUT,
                                        checkUtils,readFile,find,copyWithPath,
@@ -64,15 +63,15 @@ class InstallError(Exception):
 from migrate_users import migrate, currentUsers, MigrationError
 from calculate.lib.encrypt import encrypt
 
-_ = lambda x:x
 from calculate.lib.cl_lang import setLocalTranslate,getLazyLocalTranslate
 setLocalTranslate('cl_install3',sys.modules[__name__])
 __ = getLazyLocalTranslate(_)
 
-class Install(TaskSet):
+class Install:
     """Primary class for templates appling and system installation"""
 
-    def init(self):
+    def __init__(self):
+        self.clVars = None
         # refresh information about LVM
         refreshLVM()
         # refresh information about device in udevadm info
@@ -309,17 +308,17 @@ class Install(TaskSet):
         grubProcess = process(cmdGrub,
                "--device-map=%s/boot/grub/device.map"%target.getDirectory(),
                "--batch",stderr=STDOUT)
-        bootDisk = self.clVars.Select('os_install_disk_grub',
-                                      where='os_install_disk_mount',
-                                      _in=('/', '/boot'),
-                                      sort='DESC', limit=1)
+        bootDisk = self.Select('os_install_disk_grub',
+                              where='os_install_disk_mount',
+                              _in=('/','/boot'),
+                              sort='DESC',limit=1)
         if not bootDisk:
             raise DistributiveError(_("Failed to determine the boot disk"))
         self.setActivePartition(bootDisk)
         for mbrDisk in self.clVars.Get('os_install_mbr'):
-            mbrDiskNum = self.clVars.Select("os_device_map",
-                                            where="os_device_dev",
-                                            eq=mbrDisk)
+            mbrDiskNum = self.Select("os_device_map",
+                                     where="os_device_dev",
+                                     eq=mbrDisk)
             if not mbrDiskNum and mbrDiskNum != 0:
                 raise DistributiveError(_("Failed to determine mbr"))
             for line in ("root (hd%s)"%bootDisk,
@@ -480,7 +479,7 @@ class Install(TaskSet):
         """
         res = True
         for disk in self.clVars.Select('os_disk_dev',
-                                       where='os_disk_format', like='ntfs'):
+                                where='os_disk_format',like='ntfs'):
             mountDir = self._getFreeDirectory('/var/lib/calculate/mount.ntfs')
             try:
                 os.mkdir(mountDir)
@@ -524,3 +523,6 @@ class Install(TaskSet):
         """
         distr.close()
         return True
+
+    def mytest(self):
+        return False
diff --git pym/install/utils/cl_setup.py pym/install/utils/cl_setup.py
index ce9fa5f..ec55ce0 100644
--- pym/install/utils/cl_setup.py
+++ pym/install/utils/cl_setup.py
@@ -72,7 +72,7 @@ class ClSetupVideoAction(Action):
         }
         ]
 
-    def __init__(self, *vars, **kw):
+    def __init__(self):
         # список задач для дейсвия
         self.tasks = [
          {'name':'apply_templates',
@@ -84,7 +84,7 @@ class ClSetupVideoAction(Action):
           }]
         # выполнить дополнительные задачи
         self.tasks.extend(self.addon_tasks)
-        Action.__init__(self, *vars, **kw)
+        Action.__init__(self)
 
 
 class ClSetupSystemAction(ClSetupVideoAction):
