diff --git console/application/cert_func.py console/application/cert_func.py
index 3b4839c..d034983 100644
--- console/application/cert_func.py
+++ console/application/cert_func.py
@@ -40,7 +40,7 @@ def client_post_cert (client, clVars, show_info = False):
     result_sid = _result_sid[1].integer
 
     if result_post_cert[0] == -4:
-        print _("Certificate not found in Server Database!")
+        print _("Certificate not found in the server")
         print _('client use certificate %s') %client.CERT_FILE
         print _('You can generate a new certificate using the keys '
                 '--gen-cert-by and --get-cert-from')
@@ -48,16 +48,16 @@ def client_post_cert (client, clVars, show_info = False):
 
 #    client_sid(sid, client, cert_id = results[0][0], clVars = clVars)
     if result_post_cert[0] == -3:
-        print _("Certificate not send!")
+        print _("Certificate not sent!")
     else:
         if show_info:
-            print _(" Your certifitate id - %d") %(result_post_cert[0])
+            print _(" Your certifitate ID = %d") %(result_post_cert[0])
         try:
             if result_post_cert[1] == -2:
-                print _("expiry date certificate has passed")
+                print _("The certificate has expired")
             elif result_post_cert[1] > 0:
                 if show_info:
-                    print _("shelf life expires after %d days") \
+                    print _("The certificate expires after %d days") \
                                                     %(result_post_cert[1])
         except:
             pass
@@ -117,20 +117,20 @@ def delete_old_cert(client):
 
 def client_post_request (cert_path, args):
     if os.path.exists(cert_path + 'req_id'):
-        print _("You have sent a request to sign the certificate.")
-        _print (_("request id - %s") %open(cert_path + 'req_id', 'r').read())
-        ans = raw_input (_("Send new request? y/[n]: "))
+        print _("You have already sent a request to sign the certificate.")
+        _print (_("Request ID = %s") %open(cert_path + 'req_id', 'r').read())
+        ans = raw_input (_("Send a new request? y/[n]: "))
         if not ans.lower() in ['y','yes']:
             return 0
 
     url = "https://%s:%d/?wsdl" %(args.by_host, args.port)
-    print '%s\n'% url, _("connect...") 
+    print '%s\n'% url, _("connecting...") 
     from client_class import Client_suds
     try:
         client = Client_suds(url, transport = HTTPSClientCertTransport \
                                           (None, None, cert_path))
     except (KeyboardInterrupt, urllib2.URLError), e:
-        print '\n'+_("Close. Connecting Error.")
+        print '\n'+_("Closing. Connection error.")
         _print (_("Error: %s") %e)
         return 0
     client.wsdl.services[0].setlocation(url)
@@ -140,8 +140,8 @@ def client_post_request (cert_path, args):
     key = os.path.join(cert_path, server_host_name + '.key')
     csr_file = os.path.join(cert_path, server_host_name +'.csr')
     if os.path.exists(key) and os.path.exists(csr_file):
-        print _('secret key and request exists')
-        ask = raw_input(_("Create new secret key and request? y/[n]: "))
+        print _('secret key and request now exist')
+        ask = raw_input(_("Create a new secret key and request? y/[n]: "))
         if ask.lower() in ['y','yes']:
             passwd = get_password()
             new_key_req(key, cert_path, server_host_name, 
@@ -156,17 +156,19 @@ def client_post_request (cert_path, args):
     res = client.service.post_client_request(request = data, ip = ip,\
                                     mac = mac, client_type = client_type)
     if int(res) < 0:
-        print _("This server can not sign certificate!")
+        print _("This server has not signed the certificate!")
         return 1
     fc = open(os.path.join(cert_path, 'req_id'), 'w')
     fc.write(res)
     fc.close()
-    _print (_("Your request id - %s") %res)
+    _print (_("Your request ID = %s") %res,
+            _("To sign the certificate in the server use command") + \
+           '\n'+'cl-core --sign-client ID_CLIENT_REQUEST')
     return 0
     
 def client_get_cert(cert_path, args):
     if not os.path.exists(os.path.join(cert_path, 'req_id')):
-        print _("request was not sent or deleted file %s") \
+        print _("Request not sent or file %s deleted") \
                 %(os.path.join(cert_path, 'req_id'))
         return 1
     fc = open(os.path.join(cert_path, 'req_id'), 'r')
@@ -174,20 +176,20 @@ def client_get_cert(cert_path, args):
     fc.close()
 
     url = "https://%s:%d/?wsdl" %(args.from_host, args.port)
-    print '%s\n' %url, _("connect...")
+    print '%s\n' %url, _("connecting...")
     
     from client_class import Client_suds
     try:
         client = Client_suds(url, \
                     transport = HTTPSClientCertTransport(None, None, cert_path))
     except KeyboardInterrupt:
-        print _("Close. Connecting Error.")
+        print _("Closing. Connection error.")
     client.wsdl.services[0].setlocation(url)
     
     server_host_name = client.service.get_server_host_name()
     
     if not os.path.exists(os.path.join(cert_path, server_host_name + '.csr')):
-        print _('Request %s not found on client side') \
+        print _("Request %s not found on the client's side") \
                        %(os.path.join(cert_path, server_host_name + '.csr'))
         return 1
     request = open(os.path.join(cert_path, server_host_name + '.csr')).read()
@@ -202,14 +204,16 @@ def client_get_cert(cert_path, args):
         print _('Request to sign is rejected!')
         return 1
     elif cert == '2':
-        print _("Request for the signing has not yet reviewed.")
-        print _("Your request id - %s") %req_id
+        print _("Signature request not reviewed yet.")
+        print _("Your request ID = %s") %req_id, \
+              _("To sign the certificate in the server use command") + \
+              '\n'+'cl-core --sign-client ID_CLIENT_REQUEST'
         return 1
     elif cert == '3':
-        print _("Request on signature does not match sent earlier.")
+        print _("Signature request does not match earlier data.")
         return 1
     elif cert == '4':
-        print _("Request was sent from another ip.")
+        print _("The request was sent from another IP.")
         return 1
     cert_file = os.path.join(cert_path, server_host_name + '.crt')
     fc = open(cert_file, 'w')
@@ -219,7 +223,7 @@ def client_get_cert(cert_path, args):
         os.unlink(cert_path + 'req_id')
     except OSError, e:
         _print (e.message)
-    print 'OK. Certificate save. Your certificate id - %s' %req_id
+    print _('Certificate save. Your certificate id - %s') %req_id
     user_name = pwd.getpwuid(os.getuid()).pw_name
     try:
         pwdObj = pwd.getpwnam(user_name)
@@ -228,7 +232,7 @@ def client_get_cert(cert_path, args):
         return None
     os.chown(cert_file, pwdObj.pw_uid, pwdObj.pw_gid)
     os.chmod(cert_file, 0600)
-    
+
     if ca_root:
         clVars = DataVarsCore()
         clVars.importCore()
@@ -237,23 +241,23 @@ def client_get_cert(cert_path, args):
         if os.path.exists(system_ca_db):
             if ca_root in open(system_ca_db, 'r').read():
                 return 0
-        
+
         cl_client_cert_dir = clVars.Get('cl_client_cert_dir')
         homePath = clVars.Get('ur_home_path')
-        
+
         cl_client_cert_dir = cl_client_cert_dir.replace("~",homePath)
         root_cert_md5 = os.path.join(cl_client_cert_dir, "ca/cert_list")
-        
+
         md5 = hashlib.md5()
         md5.update(ca_root)
         md5sum = md5.hexdigest()
         print "\n================================================="
         print "md5sum = ", md5sum
-        
+
         if not os.path.exists(root_cert_md5):
             fc = open(root_cert_md5,"w")
             fc.close()
-        
+
         filename = None
         with open(root_cert_md5) as fd:
             t = fd.read()
@@ -276,7 +280,7 @@ def client_get_cert(cert_path, args):
             fc.close()
             
             if not filename:
-                print _('Not found field "CN" in certificate!')
+                print _('Field "CN" not found in the certificate!')
                 return 1
                 
             fd = open(os.path.join(cl_client_cert_dir, 'ca', filename), 'w')
@@ -290,9 +294,9 @@ def client_get_cert(cert_path, args):
             fa.write(ca_root)
             fa.close()
             print _("filename = "), filename
-            print _("CERTIFICATE ADD")
+            print _("Certificate added")
         else:
-            print _("file with ca certificates exists")
+            print _("A file with CA certificates now exists")
     return 0
     
 def client_post_auth(client):
@@ -304,9 +308,9 @@ def client_post_auth(client):
             pass#client_post_cert(client)
         else:
             #client_post_request(client)
-            print _("You do not have a certificate. Use key --gen-cert-by "
-                    "HOST for generate new request or key --get-cert-from "
-                    "HOST for get new certificate from server.")
+            print _("You do not have a certificate. Use --gen-cert-by HOST to"\
+                    " generate new request or --get-cert-from HOST to get a "\
+                    "new certificate from the server.")
             raise Exception(1)
 #        print client.service.versions(sid, VERSION)
     except VerifyError, e:
@@ -376,7 +380,7 @@ def create_socket(file_path, username):
     return s
 
 def set_password(s, req, size):
-    password = getpass.getpass()
+    password = getpass.getpass(_('Password: '))
     msg = '%s,%s' %(req,password)
     s.send(msg)
     resp = s.recv(size)
@@ -447,6 +451,8 @@ def get_password_from_daemon(server_host, server_port, wait_thread):
             if 'timeout' in resp:
                 continue
             wait_thread.stop()
+            sys.stdout.write('\r')
+            sys.stdout.flush()
             password = set_password(s, req, size)
         else:
             password = resp if resp else None
diff --git console/application/cert_verify.py console/application/cert_verify.py
index 293cf8f..8baf9d0 100644
--- console/application/cert_verify.py
+++ console/application/cert_verify.py
@@ -50,12 +50,12 @@ def verify(server_cert, crl_path, flag):
             host = L.split(':')[0]
         except:
             if not flag:
-                print _("field CN and L in CA certificate are incorrect!")
+                print _("fields CN and L in the CA certificate are incorrect!")
             return 0
         crl_file = crl_path + host
     else:
         if not flag:
-            print _( "field CN and L in CA certificate are incorrect!")
+            print _( "fields CN and L in the CA certificate are incorrect!")
         return 0
 
     if not os.path.exists(crl_file):
@@ -95,12 +95,12 @@ def get_CRL(path_to_cert):
                 try:
                     os.makedirs(path_to_cert)
                 except OSError:
-                    print _("error creating directory %s") %path_to_cert
+                    print _("Failed to create directory %s") %path_to_cert
                     raise Exception(1)
             try:
                 os.makedirs(os.path.join(path_to_cert, 'ca'))
             except OSError:
-                print _("error creating directory %s") \
+                print _("Failed to create directory %s") \
                         %(os.path.join(path_to_cert, 'ca'))
                 raise Exception(1)
         os.makedirs(CRL_path)
@@ -179,7 +179,7 @@ def get_CRL(path_to_cert):
                     fd = open(CRL_file, 'w')
                     fd.write(new_crl)
                     fd.close()
-                    print _("CRL add")
+                    print _("CRL added")
     find_ca_in_crl (CRL_path, all_ca_certs_list)
 
 def find_ca_in_crl (CRL_path, all_ca_certs_list):
@@ -271,7 +271,7 @@ def rm_ca_from_trusted(ca_cert):
             if ca_cert != cert:
                 new_user_ca_certs.append(cert)
             else:
-                print _("CA certificate delete from user trusted certificate")
+                print _("CA certificate deleted from user trusted certificate")
         
         fd = open(user_ca_db, 'w')
         for cert in new_user_ca_certs:
@@ -290,7 +290,8 @@ def rm_ca_from_trusted(ca_cert):
             if ca_cert != cert:
                 new_system_ca_certs.append(cert)
             else:
-                print _("CA certificate delete from system trusted certificate")
+                print \
+                  _("CA certificate deleted from system trusted certificates")
         
         fd = open(system_ca_db, 'w')
         for cert in new_system_ca_certs:
diff --git console/application/cl_client.py console/application/cl_client.py
index e2f61ed..00f81af 100644
--- console/application/cl_client.py
+++ console/application/cl_client.py
@@ -32,7 +32,6 @@ from cert_verify import get_CRL, VerifyError
 
 import M2Crypto, OpenSSL
 from calculate.core.datavars import DataVarsCore
-
 from client_class import HTTPSClientCertTransport
 from methods_func import call_method, get_method_argparser, parse, get_view
 from calculate.lib.utils.files import makeDirectory, readLinesFile
@@ -58,7 +57,7 @@ def client_signal(client):
         try:
             client.service.active_client(sid)
         except:
-            print _('no connection to server!')
+            print _('no connection to the server!')
             raise Exception(1)
         time.sleep(float(client_active))
 
@@ -262,13 +261,13 @@ def https_server(client, args, unknown_args, url, clVarsCore, wait_thread):
                     pid = int(mess.message)
                     result = client.service.pid_kill(pid, client.sid)
                     if result in [0,2]:
-                        print _('Process is terminated')
+                        print _('Process terminated')
                     elif result == -1:
-                        print _("Certificate not found in server database")
+                        print _("Certificate not found in the server")
                     elif result == -2:
-                        print _("Session doesn't belong to your certificate")
+                        print _("Session not matching your certificate")
                     elif result == 1:
-                        print _("It was not possible to kill process")
+                        print _("Failed to kill the process")
 #                    get_entire_frame(client, pid)
                     analysis(client, client.sid, method_result)
                 except Exception, e:
@@ -334,7 +333,7 @@ def main(wait_thread):
                 wait_thread.stop()
                 sys.stdout.write('\r')
                 sys.stdout.flush()
-                print _("cannot create directory %s") %dir_path
+                print _("Failed to create directory %s") %dir_path
                 return 1
 
     if args.update_crl:
@@ -357,7 +356,6 @@ def main(wait_thread):
     url = "https://%s:%d/?wsdl" %(host, port)
 
     clear()
-
     serv_hostname = get_server_hostname(host, path_to_cert)
     get_name_flag = False
     if serv_hostname:
@@ -373,10 +371,12 @@ def main(wait_thread):
         if Connect_Error:
             if crypto_Error and passwd_flag:
                 wait_thread.stop()
-                print _('Password is invalid')
+                sys.stdout.write('\r')
+                sys.stdout.flush()
+                print _('Invalid password')
                 # delete password from daemon list
                 clear_password(host, port)
-            if e:
+            elif e:
                 wait_thread.stop()
                 if type(e.message) != int:
                     print _('Error: '), e
@@ -391,6 +391,10 @@ def main(wait_thread):
                                           clVarsCore, wait_thread)
             except urllib2.URLError, e:
                 print _('Error: '), e
+            except KeyboardInterrupt:
+                wait_thread.stop()
+                red = '\n'+'\033[31m * \033[0m'
+                print red + _('Interrupted by the user')
             except Exception, e:
                 wait_thread.stop()
                 if type(e.message) != int:
@@ -398,6 +402,7 @@ def main(wait_thread):
                         print e.message
                     else:
                         print e
+#                    tb.print_exc()
                 return 1
             wait_thread.stop()
             return return_val
@@ -406,6 +411,10 @@ def main(wait_thread):
             _print (f.fault)
         except TransportError, te:
             print _("Exception: %s") %te
+        except KeyboardInterrupt:
+            wait_thread.stop()
+            red = '\n'+'\033[31m * \033[0m'
+            print red + _('Interrupted by the user')
         except Exception, e:
             print _("Exception: %s") %e
             tb.print_exc()
@@ -423,6 +432,10 @@ def main(wait_thread):
         wait_thread.stop()
         print '\b' + _('Failed to connect')+':', e
         return 1
+    except KeyboardInterrupt:
+        wait_thread.stop()
+        red = '\n'+'\033[31m * \033[0m'
+        print red + _('Interrupted by the user')
 
     try:
         import glob
@@ -454,11 +467,13 @@ def main(wait_thread):
         if Connect_Error:
             if crypto_Error and passwd_flag:
                 wait_thread.stop()
-                print _('Password is invalid')
+                sys.stdout.write('\r')
+                sys.stdout.flush()
+                print _('Invalid password')
                 # delete password from daemon list
                 clear_password(host, port)
                 return 1
-            if e:
+            elif e:
                 wait_thread.stop()
                 if type(e.message) != int:
                     print _('Error: '), e
@@ -478,6 +493,10 @@ def main(wait_thread):
                                       clVarsCore, wait_thread)
         except urllib2.URLError, e:
             print _('Error: '), e
+        except KeyboardInterrupt:
+            wait_thread.stop()
+            red = '\n'+'\033[31m * \033[0m'
+            print red + _('Interrupted by the user')
         except Exception, e:
             wait_thread.stop()
             if type(e.message) != int:
@@ -485,6 +504,7 @@ def main(wait_thread):
                     print e.message
                 else:
                     print e
+#                tb.print_exc()
             return 1
         wait_thread.stop()
         return return_val
@@ -494,6 +514,10 @@ def main(wait_thread):
         _print (f.fault)
     except TransportError, te:
         print _("Exception: %s") %te
+    except KeyboardInterrupt:
+        wait_thread.stop()
+        red = '\n'+'\033[31m * \033[0m'
+        print red + _('Interrupted by the user')
     except Exception, e:
         print _("Exception: %s") %e
         tb.print_exc()
diff --git console/application/client_class.py console/application/client_class.py
index c4c1ab0..3b25551 100644
--- console/application/client_class.py
+++ console/application/client_class.py
@@ -95,7 +95,7 @@ class CheckingClientHTTPSConnection(CheckingHTTPSConnection):
             if not filename:
                 return None
         except:
-            print _("Certificate not found in client")
+            print _("Certificate not found on the client’s side")
             return None
         try:
             fd = open(self.trusted_path + filename, 'r')
@@ -104,7 +104,7 @@ class CheckingClientHTTPSConnection(CheckingHTTPSConnection):
             if store_cert == server_cert:
                 return filename
         except:
-            print _("Error open file"), self.trusted_path, filename
+            print _("Failed to open the file"), self.trusted_path, filename
         return None
     
     def add_all_ca_cert(self, list_ca_certs):
@@ -167,7 +167,7 @@ class CheckingClientHTTPSConnection(CheckingHTTPSConnection):
                 fc.close()
                 
                 if not filename:
-                    print _('Not found field "CN" in certificate!')
+                    print _('Field "CN" not found in the certificate!')
                     return 1
                     
                 fd = open(os.path.join(cl_client_cert_dir,'ca/',filename),'w')
@@ -178,9 +178,9 @@ class CheckingClientHTTPSConnection(CheckingHTTPSConnection):
                 fa.write(cert)
                 fa.close()
                 print _("filename = "), filename
-                print _("CERTIFICATE ADD")
+                print _("Certificate added")
             else:
-                print _("file with ca certificates exists")
+                print _("A file with CA certificates now exists")
         get_CRL(cl_client_cert_dir)
 
     def add_ca_cert(self, cert, list_ca_certs):
@@ -190,11 +190,11 @@ class CheckingClientHTTPSConnection(CheckingHTTPSConnection):
         client.wsdl.services[0].setlocation(url)
         cert = client.service.get_ca()
         if cert == '1':
-            print _('Server certificate is not valid')
+            print _('Invalid server certificate')
             raise Exception(1)
 
         if cert == '2':
-            print _('CA not found on server')
+            print _('CA not found on the server')
             raise Exception(1)
             
         try:
@@ -213,7 +213,7 @@ class CheckingClientHTTPSConnection(CheckingHTTPSConnection):
         print '\n', _("Subject")
         for subj in Subject:
             print "%s : %s" %(subj[0], subj[1])
-        ans = raw_input (_("Add CA certificates to trusted? y/[n]:"))
+        ans = raw_input (_("Add the CA certificate to trusted? y/[n]:"))
         if ans.lower() in ['y','yes']:
             list_ca_certs.append(cert)
             self.add_all_ca_cert(list_ca_certs)
@@ -223,7 +223,7 @@ class CheckingClientHTTPSConnection(CheckingHTTPSConnection):
     # add certificate server in trusted
     def add_server_cert(self, cert):
         self.wait_thread.stop()
-        print _("Untrusted Server Certificate!")
+        print _("Untrusted server certificate!")
         certobj = OpenSSL.crypto.load_certificate \
                     (OpenSSL.SSL.FILETYPE_PEM, cert)
         print '\n' + _("Fingerprint = %s") % certobj.digest('SHA1')
@@ -237,8 +237,8 @@ class CheckingClientHTTPSConnection(CheckingHTTPSConnection):
         for item in Subject:
             print "%s : %s" %(item[0], item[1])
         
-        print '\n' + _('Add this Servers certificate to trusted (s) or')
-        print _('Try add CA and ROOT certificates to trusted (c) or')
+        print '\n' + _('Add this server certificate to trusted (s) or')
+        print _('Try to add the CA and ROOT certificates to trusted (c) or')
         choice = raw_input (_("Quit (q)? s/c/[q]: "))
         if choice.lower() in ['s', 'c']:
             #self.sock = ssl.wrap_socket(sock)
@@ -284,10 +284,10 @@ class CheckingClientHTTPSConnection(CheckingHTTPSConnection):
                 try:
                     os.makedirs(root_cert_dir)
                 except OSError:
-                    print _("error creating directory %s") %root_cert_dir
+                    print _("Failed to create directory %s") %root_cert_dir
                     raise Exception(1)
             
-            print '\n' + _("Try add CA and ROOT certificates")
+            print '\n' + _("Try to add the CA and ROOT certificates")
             self.list_ca_certs = []
             self.add_ca_cert(cert, self.list_ca_certs)
             return 3
diff --git console/application/create_cert.py console/application/create_cert.py
index 276f1c3..635c43c 100644
--- console/application/create_cert.py
+++ console/application/create_cert.py
@@ -44,7 +44,7 @@ def makeRequest(pubkey, pkey, serv_host, auto = False):
     if auto:
         c = 'n'
     else:
-        c = raw_input (_("Enter certificate data by hand? y/[n]: "))
+        c = raw_input (_("Enter the certificate data manually? y/[n]: "))
     # Get HostName
     host_name = socket.getfqdn()
     list_host_name = host_name.split('.')
@@ -74,7 +74,7 @@ def makeRequest(pubkey, pkey, serv_host, auto = False):
         name.L = raw_input (_('Network address (hostname or IP) [%s]: ')\
                             %host_name) 
         name.ST = raw_input (_('State Name: '))
-        name.C = raw_input (_('Country (2 words): [%s]') %lang)
+        name.C = raw_input (_('Country (2 characters): [%s]') %lang)
         if not name.C:
 	    name.C = lang
     else:
diff --git console/application/function.py console/application/function.py
index 7130a20..06dfc2a 100644
--- console/application/function.py
+++ console/application/function.py
@@ -61,7 +61,7 @@ def clear ():
             except OSError, e:
                 _print (e.message)
     except:
-        print _("Clear Cache error! ")
+        print _("Failed to clear the cache! ")
         return 1
     
 def get_ip_global():
@@ -356,7 +356,7 @@ def analysis(client, sid, s):
             try:
                 pid = int(mess.message)
             except:
-                show_error(_('server send pid = ') + pid)
+                show_error(_('the server sent pid = ') + pid)
                 return 1
             get_messages(client, sid, pid)
         elif mess.type == 'error':
@@ -447,7 +447,8 @@ def get_entire_frame(client, pid):
     list_pid = client.service.list_pid(sid = sid)
     if hasattr (list_pid, 'integer'):
         if not pid in list_pid.integer:
-            print _('Process not exist or not belong to your session')
+            print \
+             _('The process does not exist or does not belong to your session')
 #    if list_pid[0] == [0]:
 #        return 0
 #    for pid in list_pid[0]:
diff --git console/application/methods_func.py console/application/methods_func.py
index 8c04edd..4340f6b 100644
--- console/application/methods_func.py
+++ console/application/methods_func.py
@@ -21,9 +21,19 @@ setLocalTranslate('calculate_console',sys.modules[__name__])
 import urllib2
 
 from calculate.core.server.methods_func import get_method_argparser, \
-                                                collect_object
+                                               collect_object
 
+#class help_form (argparse.HelpFormatter):
+#    def __init__(self,prog, indent_increment=2, max_help_position=24,
+#                 width=None):
+#        from fcntl import ioctl
+#        from array import array
+#        import termios
+#        h,w=array('h', ioctl(sys.stderr,termios.TIOCGWINSZ,'\0'*8))[:2]
+#        argparse.HelpFormatter.__init__(self, prog, indent_increment,
+#                                        max_help_position, w)
 def parse():
+#    parser = argparse.ArgumentParser(add_help=False,formatter_class=help_form)
     parser = argparse.ArgumentParser(add_help=False)
     parser.add_argument(
         '-h', '--help', action='store_true', default=False,
@@ -32,50 +42,52 @@ def parse():
         '--method', type=str, dest='method', help=_('call method'))
     parser.add_argument(
         '-l', '--lang', type=str, dest='lang',
-        help=_('language for translate'))
+        help=_('language for translation'))
     parser.add_argument(
         '-p', '--port', type=int, default = '8888', dest='port',
         help=_('port number'))
     parser.add_argument(
         '--host', type=str, default = 'localhost', dest='host',
-        help=_('host destination'))
+        help=_('destination host'))
     parser.add_argument(
         '--gen-cert-by', type=str, dest='by_host', metavar = 'HOST',
-        help=_('post request a signed certificate by server'))
+        help = \
+           _('post a request on the server for the certificate to be signed'))
     parser.add_argument(
         '--get-cert-from', type=str, dest='from_host', metavar = 'HOST',
-        help=_('get signed certificate from server'))
+        help=_('get the signed certificate from the server'))
     parser.add_argument(
         '--cert-path', type=str, dest='path_to_cert', metavar = 'PATH',
-        help=_('path to cert and key files'))
+        help=_('path to the cert and key files'))
     parser.add_argument(
         '--list-pid', action='store_true', default=False,
-        dest='list_pid', help=_("view a list of running processes"))
+        dest='list_pid', help=_("view the list of running processes"))
     parser.add_argument(
         '-d', '--dump',  action='store_true', default=False, dest = 'dump',
-        help=_('dump (using with key --list-pid)'))
+        help=_('dump (to be used with --list-pid)'))
     parser.add_argument(
         '--pid-result',  type=int, metavar = 'PID',
-        dest='pid_res', help=_("view result of process"))
+        dest='pid_res', help=_("view the result of the process"))
     parser.add_argument(
         '--pid-kill',  type=int, metavar = 'PID',
-        dest='pid_kill', help=_("kill selected process"))
+        dest='pid_kill', help=_("kill the selected process"))
     parser.add_argument(
         '--session-clean', action='store_true', default=False,
-        dest='session_clean', help=_('clear cache session'))
+        dest='session_clean', help=_('clear the session cache'))
     parser.add_argument(
         '--session-info', action='store_true', default=False,
-        dest='session_info', help=_("view session information"))
+        dest='session_info', help=_("view the session information"))
     parser.add_argument(
         '--session-num-info',  type=int, metavar = 'SID',
-        dest='session_num_info', help=_("view information about session "
-                                        "with sid = SID"))
+        dest='session_num_info',
+        help=_("view information about session = SID"))
     parser.add_argument(
         '--session-list', action='store_true', default=False,
-        dest='session_list', help=_("view list active session on server"))
+        dest='session_list',
+        help=_("view the active session list on the server"))
     parser.add_argument(
         '--update-crl', action='store_true', default=False,
-        dest='update_crl', help=_("update the certificate revocation lists"))
+        dest='update_crl', help=_("update the revocation list"))
     parser.add_argument(
         '--stop-consoled', action='store_true', default=False,
         dest='stop_consoled', help=_("stop cl-consoled"))
@@ -125,7 +137,7 @@ def call_method(client, args, wait_thread):
         method_result = client.service[0][method](client.sid, param_object)
 
         if not method_result:
-            print _('method is not available')
+            print _('Method not available')
             return None
         if method_result.ReturnedMessage[0].type and \
                          method_result.ReturnedMessage[0].type != "pid":
@@ -136,7 +148,7 @@ def call_method(client, args, wait_thread):
                     for field in Group.fields.Field:
                         if field.name == error.field:
                             if field.opt.shortopt or field.opt.longopt:
-                                params_text += _('Error in parameter ')
+                                params_text += _('Wrong option ')
                                 params_text += ', '.join(filter(None,
                                     [field.opt.shortopt, field.opt.longopt])) \
                                     + '. '
@@ -154,13 +166,13 @@ def call_method(client, args, wait_thread):
         if not no_questions:
             while True:
                 try:
-                    ask = raw_input('\n' + _('Run process? (yes/no): '))
+                    ask = raw_input('\n' + _('Run the process? (yes/no): '))
                     red = '\033[31m * \033[0m'
                 except KeyboardInterrupt:
                     ask = 'no'
                     red = '\n'+'\033[31m * \033[0m'
                 if ask.lower() in ['n', 'no']:
-                    print red + _('Interrupted by user')
+                    print red + _('Interrupted by the user')
                     return None
                 if ask.lower() in ['y', 'yes']:
                     break
@@ -168,7 +180,7 @@ def call_method(client, args, wait_thread):
         param_object['CheckOnly'] = False
     method_result = client.service[0][method](client.sid, param_object)
     if not method_result:
-        print _('method is not available')
+        print _('Method not available')
         return None
     if method_result.ReturnedMessage[0].type and \
                      method_result.ReturnedMessage[0].type != "pid":
@@ -178,7 +190,7 @@ def call_method(client, args, wait_thread):
                 for field in Group.fields.Field:
                     if field.name == error.field:
                         if field.opt.shortopt or field.opt.longopt:
-                            params_text += _('Error in parameter ')
+                            params_text += _('Wrong option ')
                             params_text += ', '.join(filter(None,
                                 [field.opt.shortopt, field.opt.longopt]))+'. '
             red = '\033[31m * \033[0m'
diff --git console/application/pid_information.py console/application/pid_information.py
index 88232cf..9a1c422 100644
--- console/application/pid_information.py
+++ console/application/pid_information.py
@@ -32,13 +32,13 @@ def pid_inf(client, sid, pids):
             print _("Permission denied")
             return 1
 
-        _print ('\n', _(u"Process name - %s") %s[0][4])
-        print _(u"Process id - %s") %s[0][0]
-        _print (_(u"Process started %s") %s[0][2])
+        _print ('\n', _(u"Process name: %s") %s[0][4])
+        print _(u"Process ID: %s") %s[0][0]
+        _print (_(u"%s: process started") %s[0][2])
         if s[0][1] == '1':
-            print _(u"Process is active")
+            print _(u"Process active")
         elif s[0][1] == '0':
-            print _(u"Process has been completed")
+            print _(u"Process completed")
         else:
             print _(u"Process killed")
     return 0
@@ -52,13 +52,13 @@ def client_list_pid(client):
     try:
         list_pid = client.service.list_pid(sid = sid)
         if list_pid[0][0] == 0:
-            print red + _("Not found pid for this session!")
+            print red + _("PID not found for this session!")
             return 0
         else:
             for i in list_pid[0]:
                 print green + "pid - %d" %i
     except:
-        print red + _("Server get pids error")
+        print red + _("The server gets PID errors")
         return 1
     return len(list_pid[0])
 
@@ -69,13 +69,13 @@ def gen_pid_ls(client):
     try:
         list_pid = client.service.list_pid(sid = sid)
         if list_pid[0][0] == 0:
-            print _("Not found pid for this session!")
+            print _("PID not found for this session!")
             return 0
         else:
             for i in list_pid[0]:
                 pid_ls.append(i)
     except:
-        print _("Server get pids error")
+        print _("The server gets PID errors")
         return 0
     return pid_ls
 
@@ -108,7 +108,7 @@ def client_list_methods(client):
             return 1
     except:
         pass
-    print _("You can execute:"), _('use key'), '--method'
+    print _("You can execute:"), _('use'), '--method'
     for num in range (0, len(results[DAT])):
 #        command = results[DAT][num][RES][COM]
         view_command = results[DAT][num][RES][METH]
@@ -123,7 +123,7 @@ def client_list_sessions(client):
         _print (results[0][0])
         return 1
 
-    print _("Execute sessions:")
+    print _("Running sessions:")
     for sess in results[0]:
         _print (" - %s" %sess)
     return 0
@@ -133,15 +133,15 @@ def client_pid_kill(client, pid):
 
     result = client.service.pid_kill(pid, sid)
     if result == 0:
-        print _("Process is completed")
+        print _("Process completed")
     elif result == 2:
         print _("Process killed")
     elif result == 3:
         print _("Process not found")
     elif result == -1:
-        print _("Certificate not found in server database")
+        print _("Certificate not found in the server")
     elif result == -2:
-        print _("Session doesn't belong to your certificate")
+        print _("Session not matching your certificate")
     elif result == 1:
-        print _("It was not possible to kill process")
+        print _("Failed to kill the process")
     return 0
diff --git console/application/sid_func.py console/application/sid_func.py
index 887e50e..09b22dc 100644
--- console/application/sid_func.py
+++ console/application/sid_func.py
@@ -41,22 +41,22 @@ def client_del_sid(client):
         s = client.service.del_sid(sid)
 
         if s[0][0] == "-1":
-            print _("No access to file!")
+            print _("No access to the file!")
             return -1
         if s[0][0] == "1":
             print _("Failed to obtain certificate data!")
             return -2
         if s[0][0] == "Permission denied":
-            _print (_("Permission denied %s") % s[1][1])
+            _print (_("%s: permission denied") % s[1][1])
             return -3
 
         if s[0][0] == '0':
             fi = open(client.SID_FILE, 'w')
             fi.write('0')
             fi.close()
-            print _("Sid Deleted!")
+            print _("SID Deleted!")
     except:
-        print _("Server delete sid error")
+        print _("SID deletion error")
         return 1
     return 0
 
@@ -66,19 +66,19 @@ def sid_inf(client, sid):
     """ get information about selected session """
     s = client.service.sid_info(sid)
     if s[0][0] == "-1":
-        print red + _("This session not registered on server!")
+        print red + _("This session not registered on the server!")
         return -1
     if s[0][0] == "-2":
         print red + _("Failed to obtain certificate data!")
         return -2
     if s[0][0] == "Permission denied":
-        print red + _("Permission denied %s") % s[0][1]
+        print red + _("%s: permission denied") % s[0][1]
         return -3
 
     print _('Session information: ')
-    print green + _(u"Session number - %s") %sid
-    print green + _(u"Certificate number - %s") %s[0][0]
-    _print (green + _(u"Date issue of certificate - %s") %s[0][1])
+    print green + _(u"Session number: %s") %sid
+    print green + _(u"Certificate number: %s") %s[0][0]
+    _print (green + _(u"Certificate issued on %s") %s[0][1])
     print green + "ip - %s" %s[0][2]
     print green + "MAC - %s\n" %s[0][3]
     return 0
@@ -98,12 +98,12 @@ def client_session_list(client):
     res = client.service.get_sessions(client.sid)
     if hasattr (res, 'string'):
         if res.string:
-            print _('Active session on server: ')
+            print _('Active sessions on the server: ')
             for session_id in res.string:
                 print green + session_id
             print
             return 0
-    print red + _('No active session on server')
+    print red + _('No active session on the server')
 
 def session_clean(client):
     try:
@@ -113,4 +113,4 @@ def session_clean(client):
     if res:
         print _('Error clearing session cache')
     else:
-        print _('Session cache is cleared')
+        print _('Session cache cleared')
diff --git ru/calculate_console.po ru/calculate_console.po
old mode 100755
new mode 100644
index e758830..aad4382
--- ru/calculate_console.po
+++ ru/calculate_console.po
@@ -2,9 +2,9 @@ msgid ""
 msgstr ""
 "Project-Id-Version: console_gui_translate\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2012-06-27 09:28+0300\n"
-"PO-Revision-Date: 2012-06-27 09:28+0300\n"
-"Last-Translator: Denis <ds@mail.ru>\n"
+"POT-Creation-Date: 2012-07-05 14:24+0300\n"
+"PO-Revision-Date: 2012-07-05 14:24+0300\n"
+"Last-Translator: Denis Spiridonov <ds.calculate.ru>\n"
 "Language-Team: \n"
 "Language: \n"
 "MIME-Version: 1.0\n"
@@ -25,25 +25,26 @@ msgstr "Доступ запрещён"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:35
 #, python-format
-msgid "Process name - %s"
+msgid "Process name: %s"
 msgstr "Имя процесса - %s"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:36
 #, python-format
-msgid "Process id - %s"
+msgid "Process ID: %s"
 msgstr "Идентификатор процесса - %s"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:37
 #, python-format
-msgid "Process started %s"
+msgid "%s: process started"
 msgstr "Процесс запущен %s"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:39
-msgid "Process is active"
+msgid "Process active"
 msgstr "Процесс активен"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:41
-msgid "Process has been completed"
+#: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:136
+msgid "Process completed"
 msgstr "Процесс завершён"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:43
@@ -53,12 +54,12 @@ msgstr "Процесс убит"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:55
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:72
-msgid "Not found pid for this session!"
+msgid "PID not found for this session!"
 msgstr "Не найдены процессы для вашей сессии!"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:61
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:78
-msgid "Server get pids error"
+msgid "The server gets PID errors"
 msgstr "Ошибка списка процессов с сервера"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:103
@@ -71,39 +72,36 @@ msgid "You can execute:"
 msgstr "Вы можете запускать:"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:111
-msgid "use key"
+msgid "use"
 msgstr "используйте ключ"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:126
-msgid "Execute sessions:"
+msgid "Running sessions:"
 msgstr "Запущенные сессии:"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:136
-msgid "Process is completed"
-msgstr "Процесс завершён"
-
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:140
 msgid "Process not found"
 msgstr "Процесс не найден"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:142
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:267
-msgid "Certificate not found in server database"
-msgstr "Сертификат не найден в базе сервера"
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:266
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:43
+msgid "Certificate not found in the server"
+msgstr "Не найден сертификат на сервере"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:144
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:269
-msgid "Session doesn't belong to your certificate"
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:268
+msgid "Session not matching your certificate"
 msgstr "Сессия не соответствует Вашему сертификату"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/pid_information.py:146
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:271
-msgid "It was not possible to kill process"
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:270
+msgid "Failed to kill the process"
 msgstr "Не удалось завершить процесс"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_verify.py:53
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_verify.py:58
-msgid "field CN and L in CA certificate are incorrect!"
+msgid "fields CN and L in the CA certificate are incorrect!"
 msgstr "поля CN и L в сертификате CA некорректны!"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_verify.py:79
@@ -120,25 +118,26 @@ msgstr "Дата отзыва"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_verify.py:98
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_verify.py:103
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:336
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:287
 #, python-format
-msgid "error creating directory %s"
+msgid "Failed to create directory %s"
 msgstr "Ошибка при создании директории %s"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_verify.py:182
-msgid "CRL add"
+msgid "CRL added"
 msgstr "CRL добавлен"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_verify.py:274
-msgid "CA certificate delete from user trusted certificate"
-msgstr "Сертификат Центра Авторизации удалён из пользовательского списка доверенных сертификатов"
+msgid "CA certificate deleted from user trusted certificate"
+msgstr "Сертификат Центра авторизации удалён из пользовательского списка доверенных сертификатов"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_verify.py:293
-msgid "CA certificate delete from system trusted certificate"
-msgstr "Сертификат Центра Авторизации удалён из системного списка доверенных сертификатов"
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_verify.py:294
+msgid "CA certificate deleted from system trusted certificates"
+msgstr "Сертификат Центра авторизации удалён из системного списка доверенных сертификатов"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/create_cert.py:47
-msgid "Enter certificate data by hand? y/[n]: "
+msgid "Enter the certificate data manually? y/[n]: "
 msgstr "Ввести данные сертификата вручную? y/[n]: "
 
 #: /var/calculate/mydir/git/calculate-console/console/application/create_cert.py:66
@@ -166,11 +165,11 @@ msgstr "Город: "
 
 #: /var/calculate/mydir/git/calculate-console/console/application/create_cert.py:77
 #, python-format
-msgid "Country (2 words): [%s]"
+msgid "Country (2 characters): [%s]"
 msgstr "Страна (2 символа): [%s]"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/function.py:64
-msgid "Clear Cache error! "
+msgid "Failed to clear the cache! "
 msgstr "Ошибка очистки кэша!"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/function.py:142
@@ -197,167 +196,167 @@ msgid "Method not found: "
 msgstr "Метод не найден: "
 
 #: /var/calculate/mydir/git/calculate-console/console/application/function.py:359
-msgid "server send pid = "
+msgid "the server sent pid = "
 msgstr "сервер послал идентификатор процесса = "
 
-#: /var/calculate/mydir/git/calculate-console/console/application/function.py:450
-msgid "Process not exist or not belong to your session"
+#: /var/calculate/mydir/git/calculate-console/console/application/function.py:451
+msgid "The process does not exist or does not belong to your session"
 msgstr "Процесс не существует или принадлежит не вашей сессии"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/function.py:524
+#: /var/calculate/mydir/git/calculate-console/console/application/function.py:525
 #, python-format
 msgid "Error task by %s"
 msgstr "Ошибка задачи на %s"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:61
-msgid "no connection to server!"
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:60
+msgid "no connection to the server!"
 msgstr "нет соединения с сервером!"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:192
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:191
 #, python-format
 msgid "Not found method for %s"
 msgstr "Не найден метод для %s"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:265
-msgid "Process is terminated"
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:264
+msgid "Process terminated"
 msgstr "Процесс завершён"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:337
-#, python-format
-msgid "cannot create directory %s"
-msgstr "Не удалось создать директорию %s"
-
 #: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:376
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:457
-msgid "Password is invalid"
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:472
+msgid "Invalid password"
 msgstr "Неверный пароль"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:382
 #: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:393
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:464
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:480
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:479
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:495
 msgid "Error: "
 msgstr "Ошибка: "
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:405
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:408
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:397
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:417
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:438
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:499
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:520
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:175
+msgid "Interrupted by the user"
+msgstr "Прервано пользователем"
+
 #: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:410
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:493
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:496
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:498
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:413
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:419
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:513
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:516
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:522
 #, python-format
 msgid "Exception: %s"
 msgstr "Исключение: %s"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:424
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:94
+#: /var/calculate/mydir/git/calculate-console/console/application/cl_client.py:433
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:106
 msgid "Failed to connect"
 msgstr "Не удалось подключиться"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:30
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:40
 msgid "show this help message and exit"
 msgstr "просмотр данной справки и выход"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:32
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:42
 msgid "call method"
 msgstr "вызов метода"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:35
-msgid "language for translate"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:45
+msgid "language for translation"
 msgstr "язык для перевода"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:38
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:48
 msgid "port number"
 msgstr "номер порта"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:41
-msgid "host destination"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:51
+msgid "destination host"
 msgstr "хост назначения"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:44
-msgid "post request a signed certificate by server"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:55
+msgid "post a request on the server for the certificate to be signed"
 msgstr "послать запрос подписания сертификата на сервер"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:47
-msgid "get signed certificate from server"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:58
+msgid "get the signed certificate from the server"
 msgstr "забрать подписанный сертификат с сервера"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:50
-msgid "path to cert and key files"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:61
+msgid "path to the cert and key files"
 msgstr "путь к файлам сертификата и ключа"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:53
-msgid "view a list of running processes"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:64
+msgid "view the list of running processes"
 msgstr "просмотр списка запущенных процессов"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:56
-msgid "dump (using with key --list-pid)"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:67
+msgid "dump (to be used with --list-pid)"
 msgstr "дамп (используйте с ключом --list-pid)"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:59
-msgid "view result of process"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:70
+msgid "view the result of the process"
 msgstr "просмотр результата работы процесса"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:62
-msgid "kill selected process"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:73
+msgid "kill the selected process"
 msgstr "завершить выбранный процесс"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:65
-msgid "clear cache session"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:76
+msgid "clear the session cache"
 msgstr "очистить кэш сессии"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:68
-msgid "view session information"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:79
+msgid "view the session information"
 msgstr "просмотр информации о сессии"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:71
-msgid "view information about session with sid = SID"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:83
+msgid "view information about session = SID"
 msgstr "Просмотр информации о сессии с номером SID"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:75
-msgid "view list active session on server"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:87
+msgid "view the active session list on the server"
 msgstr "просмотр списка активных сессий на сервере"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:78
-msgid "update the certificate revocation lists"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:90
+msgid "update the revocation list"
 msgstr "обновить список отзыва сертификатов"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:81
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:93
 msgid "stop cl-consoled"
 msgstr "остановить cl-consoled"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:84
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:96
 msgid "do not display progress bar"
 msgstr "не отображать прогрессбар"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:87
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:99
 msgid "no questions during the process"
 msgstr "не задавать вопросы во время процесса"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:116
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:129
 msgid "Unknown parameter"
 msgstr "Неизвестный параметр"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:128
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:172
-msgid "method is not available"
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:140
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:183
+msgid "Method not available"
 msgstr "Метод не доступен"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:139
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:182
-msgid "Error in parameter "
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:151
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:193
+msgid "Wrong option "
 msgstr "Ошибка в параметре "
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:158
-msgid "Run process? (yes/no): "
+#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:169
+msgid "Run the process? (yes/no): "
 msgstr "Запустить процесс? (yes/no): "
 
-#: /var/calculate/mydir/git/calculate-console/console/application/methods_func.py:164
-msgid "Interrupted by user"
-msgstr "Прервано пользователем"
-
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:44
-msgid "No access to file!"
+msgid "No access to the file!"
 msgstr "Нет доступа к файлу!"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:47
@@ -368,19 +367,19 @@ msgstr "Не удалось получить данные сертификата
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:50
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:75
 #, python-format
-msgid "Permission denied %s"
+msgid "%s: permission denied"
 msgstr "Доступ запрещён %s"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:57
-msgid "Sid Deleted!"
+msgid "SID Deleted!"
 msgstr "Сессия удалена!"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:59
-msgid "Server delete sid error"
+msgid "SID deletion error"
 msgstr "Ошибка удаления сессии на сервере"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:69
-msgid "This session not registered on server!"
+msgid "This session not registered on the server!"
 msgstr "Данная сессия не зарегистрирована на сервере!"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:78
@@ -389,39 +388,35 @@ msgstr "Информация о сессии: "
 
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:79
 #, python-format
-msgid "Session number - %s"
+msgid "Session number: %s"
 msgstr "Номер сессии = %s"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:80
 #, python-format
-msgid "Certificate number - %s"
+msgid "Certificate number: %s"
 msgstr "Номер сертификата - %s"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:81
 #, python-format
-msgid "Date issue of certificate - %s"
+msgid "Certificate issued on %s"
 msgstr "Дата подписания сертификата - %s"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:101
-msgid "Active session on server: "
+msgid "Active sessions on the server: "
 msgstr "Активные сессии  на сервере:"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:106
-msgid "No active session on server"
-msgstr "нет активных сессий на сервере"
+msgid "No active session on the server"
+msgstr "Нет активных сессий на сервере"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:114
 msgid "Error clearing session cache"
 msgstr "Ошибка очистки кэша сессии"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/sid_func.py:116
-msgid "Session cache is cleared"
+msgid "Session cache cleared"
 msgstr "Кэш сессии очищен"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:43
-msgid "Certificate not found in Server Database!"
-msgstr "Сертификат не найден в базе сервера!"
-
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:44
 #, python-format
 msgid "client use certificate %s"
@@ -432,21 +427,21 @@ msgid "You can generate a new certificate using the keys --gen-cert-by and --get
 msgstr "Вы можете сгенерировать новый сертификат, используя ключи --gen-cert-by и --get-cert-from"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:51
-msgid "Certificate not send!"
+msgid "Certificate not sent!"
 msgstr "Сертификат не отправлен!"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:54
 #, python-format
-msgid " Your certifitate id - %d"
-msgstr "Номер Вашего сертификата - %d"
+msgid " Your certifitate ID = %d"
+msgstr "Номер Вашего сертификата = %d"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:57
-msgid "expiry date certificate has passed"
+msgid "The certificate has expired"
 msgstr "Время жизни сертификата истекло"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:60
 #, python-format
-msgid "shelf life expires after %d days"
+msgid "The certificate expires after %d days"
 msgstr "Время жизни сертификата истекает через %d дней"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:72
@@ -455,7 +450,7 @@ msgstr "Новая сессия"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:73
 msgid " Old Session"
-msgstr "Старая сессия"
+msgstr "Предыдущая сессия"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:74
 #, python-format
@@ -463,26 +458,26 @@ msgid " Your session id = %s"
 msgstr "Номер Вашей сессии = %s"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:120
-msgid "You have sent a request to sign the certificate."
+msgid "You have already sent a request to sign the certificate."
 msgstr "У Вас уже есть отправленный запрос на подписание сертификата."
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:121
 #, python-format
-msgid "request id - %s"
-msgstr "Номер запроса - %s"
+msgid "Request ID = %s"
+msgstr "Номер запроса = %s"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:122
-msgid "Send new request? y/[n]: "
+msgid "Send a new request? y/[n]: "
 msgstr "Отправить навый запрос на подпись сертификата? y/[n]: "
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:127
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:177
-msgid "connect..."
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:179
+msgid "connecting..."
 msgstr "подключение..."
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:133
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:184
-msgid "Close. Connecting Error."
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:186
+msgid "Closing. Connection error."
 msgstr "Ошибка соединения. Закрываюсь."
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:134
@@ -491,88 +486,102 @@ msgid "Error: %s"
 msgstr "Ошибка: %s"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:143
-msgid "secret key and request exists"
+msgid "secret key and request now exist"
 msgstr "секретный ключ и запрос на подпись сертификата созданы"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:144
-msgid "Create new secret key and request? y/[n]: "
-msgstr "Создать новые Секретный Ключ и Запрос на подпись сертификата? y/[n]: "
+msgid "Create a new secret key and request? y/[n]: "
+msgstr "Создать новые секретный ключ и запрос на подпись сертификата? y/[n]: "
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:159
-msgid "This server can not sign certificate!"
+msgid "This server has not signed the certificate!"
 msgstr "Сервер не подписал сертификат!"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:164
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:206
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:208
 #, python-format
-msgid "Your request id - %s"
-msgstr "Номер Вашего запроса - %s"
+msgid "Your request ID = %s"
+msgstr "Номер Вашего запроса = %s"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:169
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:165
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:209
+msgid "To sign the certificate in the server use command"
+msgstr "Для подписания сертификата на сервере используется команда"
+
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:171
 #, python-format
-msgid "request was not sent or deleted file %s"
+msgid "Request not sent or file %s deleted"
 msgstr "Запрос не был послан или удалён файл %s"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:190
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:192
 #, python-format
-msgid "Request %s not found on client side"
+msgid "Request %s not found on the client's side"
 msgstr "Запрос %s не найден на стороне клиента"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:202
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:204
 msgid "Request to sign is rejected!"
 msgstr "Запрос на подпись сертификата отвергнут!"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:205
-msgid "Request for the signing has not yet reviewed."
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:207
+msgid "Signature request not reviewed yet."
 msgstr "Запрос на подписание сертификата ещё не рассмотрен."
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:209
-msgid "Request on signature does not match sent earlier."
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:213
+msgid "Signature request does not match earlier data."
 msgstr "Запрос или подпись не соответствуют отправленным ранее."
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:212
-msgid "Request was sent from another ip."
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:216
+msgid "The request was sent from another IP."
 msgstr "Запрос был послан с другого адреса."
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:279
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:226
+#, python-format
+msgid "Certificate save. Your certificate id - %s"
+msgstr "Сертификат сохранён. Номер вашего сертификата - %s"
+
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:283
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:170
-msgid "Not found field \"CN\" in certificate!"
+msgid "Field \"CN\" not found in the certificate!"
 msgstr "Не найдено поле \"CN\" в сертификате!"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:292
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:296
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:180
 msgid "filename = "
 msgstr "Имя файла ="
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:293
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:297
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:181
-msgid "CERTIFICATE ADD"
+msgid "Certificate added"
 msgstr "Сертификат добавлен"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:295
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:299
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:183
-msgid "file with ca certificates exists"
+msgid "A file with CA certificates now exists"
 msgstr "Файл с сертификатом удостоверяющего центра создан"
 
-#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:307
-msgid "You do not have a certificate. Use key --gen-cert-by HOST for generate new request or key --get-cert-from HOST for get new certificate from server."
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:311
+msgid "You do not have a certificate. Use --gen-cert-by HOST to generate new request or --get-cert-from HOST to get a new certificate from the server."
 msgstr "У Вас нет сертификата. Используйте ключ --gen-cert-by HOST для генерации запроса на сертитфикат или ключ --get-cert-from HOST чтобы забрать сертификат с сервера."
 
+#: /var/calculate/mydir/git/calculate-console/console/application/cert_func.py:383
+msgid "Password: "
+msgstr "Пароль: "
+
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:98
-msgid "Certificate not found in client"
+msgid "Certificate not found on the client’s side"
 msgstr "Сертификат не найден на стороне клиента"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:107
-msgid "Error open file"
+msgid "Failed to open the file"
 msgstr "Ошибка при открытии файла"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:193
-msgid "Server certificate is not valid"
+msgid "Invalid server certificate"
 msgstr "Сертификат сервера недействителен!"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:197
-msgid "CA not found on server"
-msgstr "Сертификат Центра Авторизации не найден на сервере"
+msgid "CA not found on the server"
+msgstr "Сертификат Центра авторизации не найден на сервере"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:204
 msgid "Error. Certificate not added to trusted"
@@ -600,23 +609,23 @@ msgid "Subject"
 msgstr "Субъект"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:216
-msgid "Add CA certificates to trusted? y/[n]:"
-msgstr "Добавить сертификат Центра Авторизации в доверенные? y/[n]:"
+msgid "Add the CA certificate to trusted? y/[n]:"
+msgstr "Добавить сертификат Центра авторизации в доверенные? y/[n]:"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:221
 msgid "Certificate not added to trusted"
 msgstr "Сертификат не добавлен в доверенные"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:226
-msgid "Untrusted Server Certificate!"
+msgid "Untrusted server certificate!"
 msgstr "Недоверенный сертификат сервера!"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:240
-msgid "Add this Servers certificate to trusted (s) or"
+msgid "Add this server certificate to trusted (s) or"
 msgstr "Добавить сертификат этого сервера в доверенные (s) или"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:241
-msgid "Try add CA and ROOT certificates to trusted (c) or"
+msgid "Try to add the CA and ROOT certificates to trusted (c) or"
 msgstr "Попытаться добавить сертификат ЦА и корневой в доверенные (c) или"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:242
@@ -624,16 +633,303 @@ msgid "Quit (q)? s/c/[q]: "
 msgstr "Выйти (q)? s/c/[q]: "
 
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:290
-msgid "Try add CA and ROOT certificates"
+msgid "Try to add the CA and ROOT certificates"
 msgstr "Добавить Корневой и сертификат ЦА"
 
 #: /var/calculate/mydir/git/calculate-console/console/application/client_class.py:415
 msgid "This server is not trusted"
 msgstr "Сервер не является доверенным"
 
+#~ msgid "Process name - %s"
+#~ msgstr "Имя процесса - %s"
+
+#~ msgid "Process id - %s"
+#~ msgstr "Идентификатор процесса - %s"
+
+#~ msgid "Process started %s"
+#~ msgstr "Процесс запущен %s"
+
+#~ msgid "Process is active"
+#~ msgstr "Процесс активен"
+
+#~ msgid "Process has been completed"
+#~ msgstr "Процесс завершён"
+
+#~ msgid "Not found pid for this session!"
+#~ msgstr "Не найдены процессы для вашей сессии!"
+
+#~ msgid "Server get pids error"
+#~ msgstr "Ошибка списка процессов с сервера"
+
+#~ msgid "use key"
+#~ msgstr "используйте ключ"
+
+#~ msgid "Execute sessions:"
+#~ msgstr "Запущенные сессии:"
+
+#~ msgid "Process is completed"
+#~ msgstr "Процесс завершён"
+
+#~ msgid "Session doesn't belong to your certificate"
+#~ msgstr "Сессия не соответствует Вашему сертификату"
+
+#~ msgid "It was not possible to kill process"
+#~ msgstr "Не удалось завершить процесс"
+
+#~ msgid "field CN and L in CA certificate are incorrect!"
+#~ msgstr "поля CN и L в сертификате CA некорректны!"
+
+#~ msgid "error creating directory %s"
+#~ msgstr "Ошибка при создании директории %s"
+
+#~ msgid "CRL add"
+#~ msgstr "CRL добавлен"
+
+#~ msgid "CA certificate delete from user trusted certificate"
+#~ msgstr ""
+#~ "Сертификат Центра Авторизации удалён из пользовательского списка "
+#~ "доверенных сертификатов"
+
+#~ msgid "CA certificate delete from system trusted certificate"
+#~ msgstr ""
+#~ "Сертификат Центра Авторизации удалён из системного списка доверенных "
+#~ "сертификатов"
+
+#~ msgid "Enter certificate data by hand? y/[n]: "
+#~ msgstr "Ввести данные сертификата вручную? y/[n]: "
+
+#~ msgid "Country (2 words): [%s]"
+#~ msgstr "Страна (2 символа): [%s]"
+
+#~ msgid "Clear Cache error! "
+#~ msgstr "Ошибка очистки кэша!"
+
+#~ msgid "server send pid = "
+#~ msgstr "сервер послал идентификатор процесса = "
+
+#~ msgid "Process not exist or not belong to your session"
+#~ msgstr "Процесс не существует или принадлежит не вашей сессии"
+
+#~ msgid "no connection to server!"
+#~ msgstr "нет соединения с сервером!"
+
+#~ msgid "Process is terminated"
+#~ msgstr "Процесс завершён"
+
+#~ msgid "cannot create directory %s"
+#~ msgstr "Не удалось создать директорию %s"
+
+#~ msgid "Password is invalid"
+#~ msgstr "Неверный пароль"
+
+#~ msgid "language for translate"
+#~ msgstr "язык для перевода"
+
+#~ msgid "host destination"
+#~ msgstr "хост назначения"
+
+#~ msgid "post request a signed certificate by server"
+#~ msgstr "послать запрос подписания сертификата на сервер"
+
+#~ msgid "get signed certificate from server"
+#~ msgstr "забрать подписанный сертификат с сервера"
+
+#~ msgid "path to cert and key files"
+#~ msgstr "путь к файлам сертификата и ключа"
+
+#~ msgid "view a list of running processes"
+#~ msgstr "просмотр списка запущенных процессов"
+
+#~ msgid "dump (using with key --list-pid)"
+#~ msgstr "дамп (используйте с ключом --list-pid)"
+
+#~ msgid "view result of process"
+#~ msgstr "просмотр результата работы процесса"
+
+#~ msgid "kill selected process"
+#~ msgstr "завершить выбранный процесс"
+
+#~ msgid "clear cache session"
+#~ msgstr "очистить кэш сессии"
+
+#~ msgid "view session information"
+#~ msgstr "просмотр информации о сессии"
+
+#~ msgid "view information about session with sid = SID"
+#~ msgstr "Просмотр информации о сессии с номером SID"
+
+#~ msgid "view list active session on server"
+#~ msgstr "просмотр списка активных сессий на сервере"
+
+#~ msgid "update the certificate revocation lists"
+#~ msgstr "обновить список отзыва сертификатов"
+
+#~ msgid "method is not available"
+#~ msgstr "Метод не доступен"
+
+#~ msgid "Error in parameter "
+#~ msgstr "Ошибка в параметре "
+
+#~ msgid "Run process? (yes/no): "
+#~ msgstr "Запустить процесс? (yes/no): "
+
+#~ msgid "Interrupted by user"
+#~ msgstr "Прервано пользователем"
+
+#~ msgid "No access to file!"
+#~ msgstr "Нет доступа к файлу!"
+
+#~ msgid "Permission denied %s"
+#~ msgstr "Доступ запрещён %s"
+
+#~ msgid "Sid Deleted!"
+#~ msgstr "Сессия удалена!"
+
+#~ msgid "Server delete sid error"
+#~ msgstr "Ошибка удаления сессии на сервере"
+
+#~ msgid "This session not registered on server!"
+#~ msgstr "Данная сессия не зарегистрирована на сервере!"
+
+#~ msgid "Session number - %s"
+#~ msgstr "Номер сессии = %s"
+
+#~ msgid "Certificate number - %s"
+#~ msgstr "Номер сертификата - %s"
+
+#~ msgid "Active session on server: "
+#~ msgstr "Активные сессии  на сервере:"
+
+#~ msgid "No active session on server"
+#~ msgstr "нет активных сессий на сервере"
+
+#~ msgid "Session cache is cleared"
+#~ msgstr "Кэш сессии очищен"
+
+#~ msgid " Your certifitate id - %d"
+#~ msgstr "Номер Вашего сертификата - %d"
+
+#~ msgid "expiry date certificate has passed"
+#~ msgstr "Время жизни сертификата истекло"
+
+#~ msgid "shelf life expires after %d days"
+#~ msgstr "Время жизни сертификата истекает через %d дней"
+
+#~ msgid "You have sent a request to sign the certificate."
+#~ msgstr "У Вас уже есть отправленный запрос на подписание сертификата."
+
+#~ msgid "request id - %s"
+#~ msgstr "Номер запроса - %s"
+
+#~ msgid "Send new request? y/[n]: "
+#~ msgstr "Отправить навый запрос на подпись сертификата? y/[n]: "
+
+#~ msgid "connect..."
+#~ msgstr "подключение..."
+
+#~ msgid "Close. Connecting Error."
+#~ msgstr "Ошибка соединения. Закрываюсь."
+
+#~ msgid "secret key and request exists"
+#~ msgstr "секретный ключ и запрос на подпись сертификата созданы"
+
+#~ msgid "Create new secret key and request? y/[n]: "
+#~ msgstr ""
+#~ "Создать новые Секретный Ключ и Запрос на подпись сертификата? y/[n]: "
+
+#~ msgid "This server can not sign certificate!"
+#~ msgstr "Сервер не подписал сертификат!"
+
+#~ msgid "Your request id - %s"
+#~ msgstr "Номер Вашего запроса - %s"
+
+#~ msgid "request was not sent or deleted file %s"
+#~ msgstr "Запрос не был послан или удалён файл %s"
+
+#~ msgid "Request %s not found on client side"
+#~ msgstr "Запрос %s не найден на стороне клиента"
+
+#~ msgid "Request for the signing has not yet reviewed."
+#~ msgstr "Запрос на подписание сертификата ещё не рассмотрен."
+
+#~ msgid "Request on signature does not match sent earlier."
+#~ msgstr "Запрос или подпись не соответствуют отправленным ранее."
+
+#~ msgid "Request was sent from another ip."
+#~ msgstr "Запрос был послан с другого адреса."
+
+#~ msgid "Not found field \"CN\" in certificate!"
+#~ msgstr "Не найдено поле \"CN\" в сертификате!"
+
+#~ msgid "CERTIFICATE ADD"
+#~ msgstr "Сертификат добавлен"
+
+#~ msgid "file with ca certificates exists"
+#~ msgstr "Файл с сертификатом удостоверяющего центра создан"
+
+#~ msgid ""
+#~ "You do not have a certificate. Use key --gen-cert-by HOST for generate "
+#~ "new request or key --get-cert-from HOST for get new certificate from "
+#~ "server."
+#~ msgstr ""
+#~ "У Вас нет сертификата. Используйте ключ --gen-cert-by HOST для генерации "
+#~ "запроса на сертитфикат или ключ --get-cert-from HOST чтобы забрать "
+#~ "сертификат с сервера."
+
+#~ msgid "Certificate not found in client"
+#~ msgstr "Сертификат не найден на стороне клиента"
+
+#~ msgid "Error open file"
+#~ msgstr "Ошибка при открытии файла"
+
+#~ msgid "Server certificate is not valid"
+#~ msgstr "Сертификат сервера недействителен!"
+
+#~ msgid "CA not found on server"
+#~ msgstr "Сертификат Центра Авторизации не найден на сервере"
+
+#~ msgid "Add CA certificates to trusted? y/[n]:"
+#~ msgstr "Добавить сертификат Центра Авторизации в доверенные? y/[n]:"
+
+#~ msgid "Untrusted Server Certificate!"
+#~ msgstr "Недоверенный сертификат сервера!"
+
+#~ msgid "Add this Servers certificate to trusted (s) or"
+#~ msgstr "Добавить сертификат этого сервера в доверенные (s) или"
+
+#~ msgid "Try add CA and ROOT certificates to trusted (c) or"
+#~ msgstr "Попытаться добавить сертификат ЦА и корневой в доверенные (c) или"
+
+#~ msgid "Try add CA and ROOT certificates"
+#~ msgstr "Добавить Корневой и сертификат ЦА"
+
+#~ msgid "Certificate not found in Server Database!"
+#~ msgstr "Сертификат не найден в базе сервера!"
+
 #~ msgid "Time"
 #~ msgstr "Время"
 
+#~ msgid "client use %s"
+#~ msgstr "клиент использует %s"
+
+#~ msgid "Add certificate to server Database..."
+#~ msgstr "Добавление сертификата в БД сервера..."
+
+#~ msgid "Certificate not found in server database!"
+#~ msgstr "Сертификат не найден в БД сервера!"
+
+#, fuzzy
+#~ msgid "Session doesn't belong to your certificate!"
+#~ msgstr "Сессия не соответствует Вашему сертификату"
+
+#, fuzzy
+#~ msgid "It was not possible to kill process!"
+#~ msgstr "Не удалось завершить процесс"
+
+#, fuzzy
+#~ msgid "Process kill"
+#~ msgstr "Процесс убит"
+
 #~ msgid "Error"
 #~ msgstr "Ошибка"
 
@@ -646,35 +942,34 @@ msgstr "Сервер не является доверенным"
 #~ msgid "Repeat password for %s: "
 #~ msgstr "Повтор пароля для %s: "
 
-#~ msgid "Password: "
-#~ msgstr "Пароль: "
-
 #~ msgid "Repeat: "
 #~ msgstr "Повтор: "
 
 #~ msgid "Passwords do not match"
 #~ msgstr "Пароли не совпадают"
 
-#~ msgid "client use %s"
-#~ msgstr "клиент использует %s"
-
-#~ msgid "Add certificate to server Database..."
-#~ msgstr "Добавление сертификата в БД сервера..."
-
 #~ msgid "Your certificate ID = %s"
 #~ msgstr "Номер Вашего сертификата = %s"
 
-#~ msgid "Certificate not found in server database!"
+#~ msgid "Certificate not found in the server database"
+#~ msgstr "Сертификат не найден в БД сервера"
+
+#~ msgid " Your session ID = %s"
+#~ msgstr "Номер Вашей сессии = %s"
+
+#~ msgid "Certificate not found in the server database!"
 #~ msgstr "Сертификат не найден в БД сервера!"
 
+#~ msgid "CERTIFICATE ADDED"
+#~ msgstr "Сертификат добавлен"
+
+#~ msgid "Certificate not found in server database"
+#~ msgstr "Сертификат не найден в БД сервера"
+
 #, fuzzy
-#~ msgid "Session doesn't belong to your certificate!"
+#~ msgid "Session does not match your certificate"
 #~ msgstr "Сессия не соответствует Вашему сертификату"
 
 #, fuzzy
-#~ msgid "It was not possible to kill process!"
+#~ msgid "Failed to kill process"
 #~ msgstr "Не удалось завершить процесс"
-
-#, fuzzy
-#~ msgid "Process kill"
-#~ msgstr "Процесс убит"
