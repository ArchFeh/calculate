diff --git consolegui/application/Box.py consolegui/application/Box.py
index e3d71f3..172d4fc 100755
--- consolegui/application/Box.py
+++ consolegui/application/Box.py
@@ -261,6 +261,7 @@ class MainWgt(QtGui.QMainWindow):
         self.sender().setDisabled(True)
         self.ClientObj.app.processEvents()
         server_host_name = self.ClientObj.client.server_host_name
+        password = self.ClientObj.client.password
         self.disconnect(True)
 
         if hasattr (self.ClientObj._parent, 'set_localhost'):
@@ -268,7 +269,7 @@ class MainWgt(QtGui.QMainWindow):
             self.cur_size = self.size()
             self.ConnectWidget = FrameConnection(self, self.ClientObj)
             self.ConnectWidget.connect_to_host(server_host_name, \
-                                               self.ClientObj.port)
+                                      self.ClientObj.port, re_passwd=password)
 
             if not self.main_frame.isEnabled():
                 self.left_frame.setEnabled(True)
@@ -397,6 +398,7 @@ class MainWgt(QtGui.QMainWindow):
         list_pid = client_list_pid(self.ClientObj.client)
 
         msgBox = QMessageBox(self)
+        msgBox.setWindowTitle(_('Closing session'))
         msgBox.setText(_("Close your session") +' ' +_('with %s?') \
                                         %self.ClientObj.host_name + '\t')
         if len(list_pid):
diff --git consolegui/application/CertificateClass.py consolegui/application/CertificateClass.py
index 6e7fd56..664ffff 100755
--- consolegui/application/CertificateClass.py
+++ consolegui/application/CertificateClass.py
@@ -113,7 +113,8 @@ class CertClass (QtGui.QWidget):
             informative_text = _("request id = %s\n") \
                                 %open(cert_path + 'req_id', 'r').read() \
                                 + _("Send new request?")
-            reply = show_question(self, text, informative_text)
+            reply = show_question(self, text, informative_text,
+                                  title = _('Calculate Console'))
 
             if reply == QtGui.QMessageBox.No:
                 return 0
@@ -153,7 +154,8 @@ class CertClass (QtGui.QWidget):
             
             text = _('Private Key and Request exists!')
             informative_text = _("Create new Private Key and Request?")
-            reply = show_question(self, text, informative_text)
+            reply = show_question(self, text, informative_text,
+                                  title = _('Calculate Console'))
             
             if reply == QtGui.QMessageBox.Yes:
                 self.req_obj = RequestCreate(self, self.ClientObj, key, \
diff --git consolegui/application/ConnectionTabs.py consolegui/application/ConnectionTabs.py
index 415dfe8..069af84 100644
--- consolegui/application/ConnectionTabs.py
+++ consolegui/application/ConnectionTabs.py
@@ -9,7 +9,7 @@ import sudsds, time, sys
 
 from TrayIcon import TrayIcon
 
-from more import show_question, get_sid, get_view_params
+from more import get_sid, get_view_params
 from MainClass import ApiClient
 from calculate.consolegui.datavars import DataVarsGui
 from pid_information import client_pid_info
@@ -18,6 +18,7 @@ class SelectedMethodWgt(QtGui.QWidget):
     def __init__(self, app, args):
         QtGui.QWidget.__init__(self)
         self.args = args
+        self.user_changed_flag = False
         self.lang = args.lang
         self.method = args.method
         self.ClientObj = ApiClient(app, self)
@@ -31,7 +32,7 @@ class SelectedMethodWgt(QtGui.QWidget):
         self.setWindowIcon(QtGui.QIcon('/usr/share/pixmaps/calculate3.png'))
 
         if self.connect():
-            return
+            sys.exit(1)
         # definition of screen resolution
         prim_screen = app.desktop().primaryScreen()
         d_size = app.desktop().screenGeometry(prim_screen).size()
@@ -81,7 +82,10 @@ class SelectedMethodWgt(QtGui.QWidget):
                 self.ClientObj.signaling.close()
                 self.ClientObj.signaling.wait()
             return 1
-        reply = self.show_close_messagebox()
+        if not self.user_changed_flag:
+            reply = QtGui.QMessageBox.Yes
+        else:
+            reply = self.show_close_messagebox()
 
         from mainframe import MainFrame
         if reply == QtGui.QMessageBox.Yes:
@@ -110,6 +114,9 @@ class SelectedMethodWgt(QtGui.QWidget):
         elif reply == QtGui.QMessageBox.No:
             return 0
 
+    def user_changed(self):
+        self.user_changed_flag = True
+
     def show_close_messagebox(self):
         msgBox = QtGui.QMessageBox(self)
         if self.ClientObj.method_names.has_key(self.method):
@@ -227,8 +234,7 @@ class ToolTabWidget(QtGui.QTabWidget):
         self.setMinimumWidth(450)
 
         self.setWindowTitle(self.Name)
-        self.setStyleSheet(
-        '''
+        self.setStyleSheet('''
         QTabBar::tab:last {
         background: qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
                                     stop: 0 #E1E1E1, stop: 0.4 #DDDDDD,
@@ -237,8 +243,12 @@ class ToolTabWidget(QtGui.QTabWidget):
         border-bottom-color: #C2C7CB; border-top-left-radius: 4px;
         border-top-right-radius: 4px; padding-left: 3px;
 
-        margin-left: 3px; margin-bottom: 5px; margin-top: 2px; width: 18px;
-        }''')
+        margin-left: 3px; margin-bottom: 5px; margin-top: 2px; width: 18px;}
+        QTabBar::tab:last::hover {background: 
+                            qlineargradient(x1: 0, y1: 0, x2: 0, y2: 1,
+                            stop: 0 #E9E9E9, stop: 0.4 #E5E5E5,
+                            stop: 0.5 #E1E1E1, stop: 1.0 #DDDDDD);}
+                            ''')
         self.setWindowIcon(QtGui.QIcon('/usr/share/pixmaps/calculate3.png'))
 
         self.show()
@@ -314,6 +324,10 @@ class ToolTabWidget(QtGui.QTabWidget):
             self.insertTab(self.count() - 1, widget, self.gui_icon , \
                                                       self.new_con_txt)
             self.setCurrentIndex(self.count() - 2)
+        if self.currentWidget().ClientObj.client:
+            self.tabbar.setTabEnabled(self.count() - 1, True)
+        else:
+            self.tabbar.setTabEnabled(self.count() - 1, False)
 
     def rename_tab(self, text = None, ind = None):
         if not text:
@@ -370,20 +384,6 @@ class ToolTabWidget(QtGui.QTabWidget):
         event.ignore()
 
     def _closeEvent(self):
-        if self.count() > 2:
-            text = _('At closing program all connects will be close!')
-            informative_text = _('Are you sure want to close program?')
-            reply = show_question(self, text, informative_text)
-            if reply == QtGui.QMessageBox.Yes:
-                for tab_num in range(self.count()):
-                    if not self.close_tab(0, True):
-                        return 1
-
-                self.app.exit()
-
-            elif reply == QtGui.QMessageBox.No:
-                return 1
-        else:
             for tab_num in range(self.count()):
                 if not self.close_tab(0, True):
                     return 1
diff --git consolegui/application/ControlButton.py consolegui/application/ControlButton.py
index 383115c..0efb824 100644
--- consolegui/application/ControlButton.py
+++ consolegui/application/ControlButton.py
@@ -219,11 +219,14 @@ class ControlButtonWgt(QtGui.QWidget):
                 QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Maximum))
         return end_layout
 
-    def add_clear_cache_button(self, pid):
+    def add_clear_cache_button(self, pid = None):
         end_layout = self.pre_add_button()
-        self.pid = pid
         self.clear_proc_cache_button = QtGui.QPushButton(_('Close'), self)
-        self.clear_proc_cache_button.clicked.connect(self.clear_pid_cache)
+        if pid:
+            self.pid = pid
+            self.clear_proc_cache_button.clicked.connect(self.clear_pid_cache)
+        else:
+            self.clear_proc_cache_button.clicked.connect(self._parent.back)
         self.clear_proc_cache_button.setMinimumWidth(64)
         self.clear_proc_cache_button.setFixedHeight(32)
         end_layout.addWidget(self.clear_proc_cache_button)
diff --git consolegui/application/DisplayMethod.py consolegui/application/DisplayMethod.py
index ffd83a9..d5231e6 100755
--- consolegui/application/DisplayMethod.py
+++ consolegui/application/DisplayMethod.py
@@ -244,8 +244,12 @@ class DisplayMethod(QtGui.QWidget):
         self._parent.main_frame.viewport().setStyleSheet('')
 
         # set new Title
+        if self.ClientObj.method_names.has_key(method_name):
+            view_method = self.ClientObj.method_names[method_name]
+        else:
+            view_method = method_name
         self.ClientObj._parent.setWindowTitle \
-                (method_name + ' - ' + self.ClientObj._parent.windowTitle())
+                (view_method + ' - ' + self.ClientObj._parent.windowTitle())
         self.ClientObj.MainWidget.main_frame_view(view, method_name)
 
     def groupActivated(self, groups, sub_group, back = False):
diff --git consolegui/application/LeftMenu.py consolegui/application/LeftMenu.py
index e39a084..3ff2c6d 100755
--- consolegui/application/LeftMenu.py
+++ consolegui/application/LeftMenu.py
@@ -321,8 +321,11 @@ class LeftMenu(QtGui.QScrollArea):
                               + diff)
             self.layout.addWidget(self.button_list[num_step])
 
-        width_list.sort()
-        max_width = width_list.pop()
+        if width_list:
+            width_list.sort()
+            max_width = width_list.pop()
+        else:
+            max_width = 0
         for num_step in range(len(steps)):
             self.button_list[num_step].setFixedWidth(max_width)
             
@@ -359,7 +362,7 @@ class LeftMenu(QtGui.QScrollArea):
             change_step = set_step if set_step else 0
             if self._parent.ClientObj.param_objects[method_name]['step'] > \
                                                                 change_step:
-                self.setEnabled(True)
+#                self.setEnabled(True)
                 return
             try:
                 self.collect.disconnect()
@@ -384,7 +387,7 @@ class LeftMenu(QtGui.QScrollArea):
             if self._parent.ClientObj.param_objects[method_name]['step'] > \
                                                                 change_step:
                 self.check_step(method_name, set_step)
-                self.setEnabled(True)
+#                self.setEnabled(True)
                 return
             try:
                 self.calling.disconnect()
@@ -441,7 +444,7 @@ class LeftMenu(QtGui.QScrollArea):
                 text = _('At current step has mistake.')
                 informative_text = _('Do you want to continue?')
                 reply = show_question(self._parent, text, informative_text, \
-                                      not_move = True)
+                              not_move = True, title = _('Calculate Console'))
 
                 if reply == QtGui.QMessageBox.No:
                     self.setEnabled(True)
diff --git consolegui/application/MainFrameResult.py consolegui/application/MainFrameResult.py
index 75ae2d4..e80a73b 100755
--- consolegui/application/MainFrameResult.py
+++ consolegui/application/MainFrameResult.py
@@ -16,7 +16,7 @@
 #  limitations under the License.
 
 from PySide import QtGui, QtCore
-import urllib2, suds
+import urllib2, sudsds
 
 from calculate.core.client.function import switch, create_obj
 
@@ -59,6 +59,13 @@ class PlusButton(QtGui.QPushButton):
         self.get_Frame_thread.start()
 
     def after_call(self, view):
+        if self.ClientObj.method_names.has_key(self.method):
+            view_method = self._parent.ClientObj.method_names \
+                                                    [self.method]
+        else:
+            view_method = self.method
+        self._parent.ClientObj._parent.setWindowTitle(view_method + \
+                    ' - ' + self.ClientObj.Name)
         self._parent._parent.main_frame_view(view, self.method)
 
 class MainFrameRes(QtGui.QWidget):
@@ -176,10 +183,15 @@ class MainFrameRes(QtGui.QWidget):
                                        table.onClick + '_view', step = 0)
                 view = self.client.service[0][table.onClick + '_view'] \
                                     (sid, view_params)
-            except suds.MethodNotFound, e:
+            except sudsds.MethodNotFound, e:
                 _print(e)
                 return
-            self._parent.ClientObj._parent.setWindowTitle(table.onClick + \
+            if self._parent.ClientObj.method_names.has_key(table.onClick):
+                view_method = self._parent.ClientObj.method_names \
+                                                        [table.onClick]
+            else:
+                view_method = table.onClick
+            self._parent.ClientObj._parent.setWindowTitle(view_method + \
                         ' - ' + self.ClientObj.Name)
             self.ClientObj.param_objects[self.method_name]['offset'] = 0
             self._parent.main_frame_view(view, table.onClick)
@@ -230,11 +242,16 @@ class MainFrameRes(QtGui.QWidget):
                                        self.method_name + '_view', step = 0)
                 view = self.client.service[0][self.method_name + '_view'] \
                                                     (sid, view_params)
-            except suds.MethodNotFound:
+            except sudsds.MethodNotFound:
                 return
-            self._parent.ClientObj._parent.setWindowTitle(self.method_name + \
+            if self._parent.ClientObj.method_names.has_key(self.method_name):
+                view_method = self._parent.ClientObj.method_names \
+                                                        [self.method_name]
+            else:
+                view_method = self.method_name
+            self._parent.ClientObj._parent.setWindowTitle(view_method + \
                         ' - ' + self.ClientObj.Name)
-            self._parent.main_frame_view(view, self.method_name, \
+            self._parent.main_frame_view(view, view_method, \
                                          change_offset = True)
         return wrapper
 
@@ -339,13 +356,13 @@ class MainFrameRes(QtGui.QWidget):
         self._parent.control_button.add_clear_cache_button(self.cur_pid)
         self.initUI()
 
-    def clear_pid_cache(self):
-        self.clear_proc_cache_button.setDisabled(True)
-        sid = int(self.ClientObj.sid)
-        res = self.client.service.clear_pid_cache(sid, self.cur_pid)
-        if res:
-            _print (_('Error close process'))
-        self._parent.back()
+#    def clear_pid_cache(self):
+#        self.clear_proc_cache_button.setDisabled(True)
+#        sid = int(self.ClientObj.sid)
+#        res = self.client.service.clear_pid_cache(sid, self.cur_pid)
+#        if res:
+#            _print (_('Error close process'))
+#        self._parent.back()
 
     def startGroup(self, item):
         pass
@@ -511,9 +528,9 @@ class MainFrameRes(QtGui.QWidget):
                 if self.get_Frame_thread.isRunning():
                     self.get_Frame_thread.wait()
             self.get_Frame_thread = ClientServiceThread(self.ClientObj,\
-                           'get_frame', sid, pid, return_except = True, \
-                           sleeptime = int(self.ClientObj.client.frame_period),\
-                           through_object = (sid, pid))
+                          'get_frame', sid, pid, return_except = True, \
+                          sleeptime = int(self.ClientObj.client.frame_period),\
+                          through_object = (sid, pid))
             self.get_Frame_thread.signal_extended.connect(self.get_Frame_cycle)
             self.get_Frame_thread.start()
 
@@ -611,14 +628,15 @@ class MainFrameRes(QtGui.QWidget):
                        'get_progress', sid, pid, id, return_except = True, \
                        through_object = (sid, pid, id, temp_progress, \
                        progressBar))
-        self.get_Progress_thread.signal_extended.connect(self.get_Progress_cycle)
+        self.get_Progress_thread.signal_extended.connect \
+                                                (self.get_Progress_cycle)
         self.get_Progress_thread.start()
 
     def get_Progress_cycle(self, returnProgr, through_object):
         if type(returnProgr) == Exception:
             _print (_('Error get progress from Server.'))
 #            show_msg(_('Error get progress from Server.') +'\n'+ \
-#                     _('Please, resfesh this Page later.'),'get progress error')
+#                   _('Please, resfesh this Page later.'),'get progress error')
             return 1
         sid, pid, id, temp_progress, progressBar = through_object
 ########################################
diff --git consolegui/application/ShortFrameResult.py consolegui/application/ShortFrameResult.py
index 9436377..5a01adb 100644
--- consolegui/application/ShortFrameResult.py
+++ consolegui/application/ShortFrameResult.py
@@ -217,14 +217,14 @@ class ShortFrameRes(QtGui.QWidget):
         self._parent.control_button.add_clear_cache_button(self.cur_pid)
         self.initUI()
 
-    def clear_pid_cache(self):
-        self.clear_proc_cache_button.setDisabled(True)
-        sid = int(self.ClientObj.sid)
-        res = self.client.service.clear_pid_cache(sid, self.cur_pid)
-        if res:
-            show_msg (_('Error clear process cache on server'))
-        else:
-            self._parent.back()
+#    def clear_pid_cache(self):
+#        self.clear_proc_cache_button.setDisabled(True)
+#        sid = int(self.ClientObj.sid)
+#        res = self.client.service.clear_pid_cache(sid, self.cur_pid)
+#        if res:
+#            show_msg (_('Error clear process cache on server'))
+#        else:
+#            self._parent.back()
 
     def startGroup(self, item):
         pass
diff --git consolegui/application/TrayIcon.py consolegui/application/TrayIcon.py
index 944ec9f..58b2264 100644
--- consolegui/application/TrayIcon.py
+++ consolegui/application/TrayIcon.py
@@ -143,8 +143,8 @@ class TrayIcon (QtGui.QSystemTrayIcon):
         self.setToolTip('cl-console-gui - '+ _('System control'))
         self.setContextMenu(self.right_menu)
 
-        self.update_thread = TrayUpdateSystem(parent)
-        self.update_thread.mes_sig.connect(self.showMessage)
+#        self.update_thread = TrayUpdateSystem(parent)
+#        self.update_thread.mes_sig.connect(self.showMessage)
         
     def translate(self):
         # Translate left click menu
@@ -169,19 +169,17 @@ class TrayIcon (QtGui.QSystemTrayIcon):
         self._parent.currentWidget().tools()
 
     def exit(self):
-#        if self._parent.isVisible():
-#            self._parent.hide()
-        if self.update_thread.isRunning():
-            text = _('The system is updated')
-            informative_text = _('Stop updating and exit?')
-            reply = show_question(self._parent, text, informative_text)
-            
-            if reply == QtGui.QMessageBox.No:
-                return 0
-                    
-            elif reply == QtGui.QMessageBox.Yes:
-                self.update_thread.close()
-                self.update_thread.wait()
+#        if self.update_thread.isRunning():
+#            text = _('The system is updated')
+#            informative_text = _('Stop updating and exit?')
+#            reply = show_question(self._parent, text, informative_text)
+#
+#            if reply == QtGui.QMessageBox.No:
+#                return 0
+#
+#            elif reply == QtGui.QMessageBox.Yes:
+#                self.update_thread.close()
+#                self.update_thread.wait()
 
         self._parent._closeEvent()
     
@@ -254,24 +252,24 @@ class LeftButtonMenu(QtGui.QMenu):
                                          self, triggered=parent.windowVisible)
         self.addAction(self.windowVisible)
 
-        # Add Update system action
-        update_icons = ['system-software-update']
-        update_icon = QtGui.QIcon()
-        for image in update_icons:
-            update_icon.setThemeName(themeName)
-            update_icon = update_icon.fromTheme(image)
-            if not update_icon.isNull():
-                break
-            update_icon.setThemeName('Tango')
-            update_icon = update_icon.fromTheme(image)
-            if not update_icon.isNull():
-                break
-        
-        self.sys_update = QtGui.QAction(update_icon, _("Update system"), \
-                                        self, triggered=parent.start_update_system)
-        self.addAction(self.sys_update)
-
-        self.addSeparator()
+#        # Add Update system action
+#        update_icons = ['system-software-update']
+#        update_icon = QtGui.QIcon()
+#        for image in update_icons:
+#            update_icon.setThemeName(themeName)
+#            update_icon = update_icon.fromTheme(image)
+#            if not update_icon.isNull():
+#                break
+#            update_icon.setThemeName('Tango')
+#            update_icon = update_icon.fromTheme(image)
+#            if not update_icon.isNull():
+#                break
+#
+#        self.sys_update = QtGui.QAction(update_icon, _("Update system"), \
+#                                        self, triggered=parent.start_update_system)
+#        self.addAction(self.sys_update)
+#
+#        self.addSeparator()
         
         # Add exit action
         exit_icons = ['application-exit', 'system-log-out']
diff --git consolegui/application/client_class.py consolegui/application/client_class.py
index 7ef5fab..098e113 100755
--- consolegui/application/client_class.py
+++ consolegui/application/client_class.py
@@ -132,7 +132,6 @@ class AddServerCert (QtGui.QDialog):
 
         self.setAttribute(QtCore.Qt.WA_ShowModal)
         self.flag = 4
-        self.exec_()
 
     def add_server(self):
         ca_certs = self.parent.trusted_path + "cert.list"
@@ -158,6 +157,7 @@ class AddServerCert (QtGui.QDialog):
                 if len(words) > 1:
                     # if first word...
                     if words[0] == host:
+                        self.flag = 3
                         return 0
 
         # Open file with compliance server certificates and server hostname
@@ -166,7 +166,6 @@ class AddServerCert (QtGui.QDialog):
         fcl.close()
         show_msg (_('Server certificate add to trusted \n%s') \
                   %(self.parent.trusted_path + filename),_('Certificate add'))
-
         self.flag = 3
         from conf_connection import FrameConnection
         self.ConnectWidget = FrameConnection(self, self.ClientObj)
@@ -438,7 +437,8 @@ class CheckingClientHTTPSConnection(CheckingHTTPSConnection):
             inf_text += "\n  %s : %s" %(subj[0], subj[1])
 
         text = _("Add CA certificates to trusted? ")
-        reply = show_question(self.ClientObj.MainWidget, text, inf_text)
+        reply = show_question(self.ClientObj.MainWidget, text, inf_text,
+                              title = _('Adding certificate'))
 
         if reply == QtGui.QMessageBox.No:
             show_msg (_('Certificate not added to trusted'))
@@ -451,6 +451,7 @@ class CheckingClientHTTPSConnection(CheckingHTTPSConnection):
     # add certificate server in trusted
     def add_server_cert(self, cert):
         self.add_cert = AddServerCert(self, self.ClientObj, cert)
+        self.add_cert.exec_()
         return self.add_cert.flag
 
     def connect_trusted_root(self, sock, root_cert, crl_certs):
diff --git consolegui/application/conf_connection.py consolegui/application/conf_connection.py
index d4336d8..6b6c94c 100755
--- consolegui/application/conf_connection.py
+++ consolegui/application/conf_connection.py
@@ -241,7 +241,8 @@ class FrameConnection(QtGui.QWidget):
         
         self.connect_to_host(self.str_host, int_port)
 
-    def connect_to_host(self, host_name, port = None, auto = False):
+    def connect_to_host(self, host_name, port = None, auto = False, 
+                        re_passwd = False):
         logging.basicConfig(level=logging.FATAL)
         logging.getLogger('suds.client').setLevel(logging.FATAL)
         logging.getLogger('suds.transport').setLevel(logging.FATAL)
@@ -314,6 +315,8 @@ class FrameConnection(QtGui.QWidget):
                 import M2Crypto
                 bio = M2Crypto.BIO.openfile(CERT_KEY)
                 rsa = M2Crypto.m2.rsa_read_key(bio._ptr(),lambda *unused: None)
+                if re_passwd != False:
+                    self.str_passwd = re_passwd
                 if not rsa and not self.str_passwd and auto:
                     self.passwd_wgt = LocalhostPasswd(self)
                     passwd = self.passwd_wgt.text()
@@ -347,6 +350,7 @@ class FrameConnection(QtGui.QWidget):
             #If the certificate file misses
 
             if Connect_Error:
+                self.ClientObj.client = None
                 if crypto_Error and 'passwd' in locals():
                     show_msg (_('Password is invalid'), \
                                                   _('Connection Error'), self)
@@ -366,7 +370,8 @@ class FrameConnection(QtGui.QWidget):
                              'get new certificate from server.')
                     show_msg (mess, parent = self)
                 else:
-                    show_msg (e, parent = self)
+                    if e.message or e.args:
+                        show_msg (e, parent = self)
                 return
                 CERT_FILE = None
                 CERT_KEY = None
@@ -389,6 +394,7 @@ class FrameConnection(QtGui.QWidget):
                     if host_name in ['127.0.0.1', 'localhost']:
                         self.ClientObj._parent.set_localhost(self.ClientObj)
             self.ClientObj.client.server_host_name = host_name
+            self.ClientObj.client.password = self.str_passwd
             post_connect_action(self.ClientObj.client, self.ClientObj)
     #----------------------------------------------------
         except WebFault, f:
diff --git consolegui/application/helpwidget.py consolegui/application/helpwidget.py
index bfffd0b..a3df788 100755
--- consolegui/application/helpwidget.py
+++ consolegui/application/helpwidget.py
@@ -51,8 +51,8 @@ class HelpWgt(QtGui.QWidget):
         linkLabel.setContentsMargins(10,5,10,5)
         linkLabel.setOpenExternalLinks(True)
         helpQuit = QtGui.QPushButton(_("Close"), self)
-#        helpQuit.setFixedWidth(100)
-        helpQuit.setShortcut(QtGui.QKeySequence(QtCore.Qt.Key_Return))
+        helpQuit.setShortcut(QtGui.QKeySequence(QtCore.Qt.Key_Escape))
+        helpQuit.setFixedWidth(100)
 
         self.image_lbl = QtGui.QLabel(self)
 
@@ -78,7 +78,7 @@ class HelpWgt(QtGui.QWidget):
         layout.addWidget(self.image_lbl, 0,0,3,1)
         layout.addWidget(helpLabel,0,1)
         layout.addWidget(linkLabel,1,1)
-        layout.addWidget(helpQuit,2,1)
+        layout.addWidget(helpQuit,2,1, QtCore.Qt.AlignRight)
         self.setLayout(layout)
         helpQuit.clicked.connect(self.close)
 
@@ -136,6 +136,7 @@ class BugWgt(QtGui.QWidget):
         Send_button.clicked.connect(self.send_bug)
 
         Quit_button = QtGui.QPushButton(_("Close"), self)
+        Quit_button.setShortcut(QtGui.QKeySequence(QtCore.Qt.Key_Escape))
         Quit_button.clicked.connect(self.close)
 
         layout = QtGui.QGridLayout(self)
@@ -178,7 +179,8 @@ class BugWgt(QtGui.QWidget):
             if not bug_icon.isNull():
                 break
 
-        self.setWindowIcon (bug_icon)
+        self.setWindowIcon(bug_icon)
+        self.setWindowTitle(_('Report Bug'))
 
         self.move(parent.window().geometry().x() +
                   parent.window().geometry().width() / 2
diff --git consolegui/application/mainframe.py consolegui/application/mainframe.py
index bed542b..d236274 100755
--- consolegui/application/mainframe.py
+++ consolegui/application/mainframe.py
@@ -26,8 +26,8 @@ from more import show_msg, LabelWordWrap, MultipleChoice, SelectTable, \
                  ReadonlyCheckBox, get_view_params, ImageLabel, SelectList, \
                  QComboWgt
 from sudsds import WebFault
-from ReturnMessage import ReturnedMessage
 from SelectTable import SelectedTableWidget
+from ReturnMessage import ReturnedMessage
 import urllib2, time
 from os import path
 
@@ -111,6 +111,8 @@ class MainFrame(QtGui.QWidget):
         x = 1
         y = 0
 
+        from ConnectionTabs import SelectedMethodWgt
+        self.tabWidget = SelectedMethodWgt
         # for advanced settings
         self.expert = False
         self.expert_list = []
@@ -187,15 +189,10 @@ class MainFrame(QtGui.QWidget):
 
                     # add close button if one field
                     if len (self.view.groups.GroupField) == 1 \
-                            and len (Group.fields.Field) == 1:
-                        exit_button = QtGui.QPushButton(_('Close'), self)
-                        exit_button.setFixedWidth(100)
-                        exit_button.clicked.connect \
-                                            (self.ClientObj.MainWidget.back)
-                        self.grid.addWidget(exit_button, x, y+1)
-                        x += 1
+                                            and len (Group.fields.Field) == 1:
                         add_button_flag = True
                         self._parent.control_button.del_button()
+                        self._parent.control_button.add_clear_cache_button()
                 
                 elif field.element == 'input':
                     if field.name in ['cl_page_count','cl_page_offset']:
@@ -289,7 +286,8 @@ class MainFrame(QtGui.QWidget):
             self.add_standart_button.emit(Group, x, y, None, None)
 
 #        self.grid.setSizeConstraint(self.grid.SizeConstraint.SetMinimumSize)
-        self.grid.setSizeConstraint(QtGui.QLayout.SizeConstraint.SetMaximumSize)
+        self.grid.setSizeConstraint \
+                                (QtGui.QLayout.SizeConstraint.SetMaximumSize)
         # hide expert settings
 
         self.grid.setContentsMargins(28, 28, 28, 28)
@@ -409,7 +407,11 @@ class MainFrame(QtGui.QWidget):
 
         if not image_name:
             return
-        self.image_lbl = ImageLabel(image_name, self)
+        height_image = 192
+        if hasattr (self.ClientObj, 'height_image'):
+            if self.ClientObj.height_image:
+                height_image = self.ClientObj.height_image
+        self.image_lbl = ImageLabel(image_name, height_image, self)
         self.common_layout.addWidget(self.image_lbl)
 
     # methods add all elements
@@ -458,6 +460,11 @@ class MainFrame(QtGui.QWidget):
                 self.changed_expert_list.append(field.name)
             self.view_dict[field.name].textChanged.connect( \
                                      self.changed_expert_input(field.name))
+        if type(self.window()) == self.tabWidget:
+            if not self.window().user_changed_flag:
+                self.view_dict[field.name].textChanged.connect( \
+                                    self.window().user_changed)
+
         # set disable item if uncompatible
         if field.uncompatible:
             self.view_dict[field.name].setToolTip(field.uncompatible)
@@ -517,6 +524,10 @@ class MainFrame(QtGui.QWidget):
                 self.changed_expert_list.append(field.name)
             self.view_dict[field.name].clicked.connect( \
                                         self.changed_expert_check(field.name))
+        if type(self.window()) == self.tabWidget:
+            if not self.window().user_changed_flag:
+                self.view_dict[field.name].clicked.connect( \
+                                    self.window().user_changed)
         if field.uncompatible:
             self.view_dict[field.name].setToolTip(field.uncompatible)
             self.view_dict[field.name].setDisabled(True)
@@ -625,6 +636,9 @@ class MainFrame(QtGui.QWidget):
             if self.expert:
                 radiolist[i].clicked.connect(self.expert_remove\
                                                            (field.name))
+            if type(self.window()) == self.tabWidget:
+                if not self.window().user_changed_flag:
+                    radiolist[i].clicked.connect(self.window().user_changed)
 
         layout.addStretch(1)
 #        self.GroupBox.setLayout(layout)
@@ -710,10 +724,20 @@ class MainFrame(QtGui.QWidget):
                 self.changed_expert_list.append(field.name)
             self.view_dict[field.name].currentIndexChanged.connect( \
                                        self.changed_expert_combo(field.name))
+        if type(self.window()) == self.tabWidget:
+            if not self.window().user_changed_flag:
+                self.view_dict[field.name].currentIndexChanged.connect( \
+                                    self.window().user_changed)
         if field.uncompatible:
             self.view_dict[field.name].setToolTip(field.uncompatible)
             self.view_dict[field.name].setDisabled(True)
-        self.grid.addWidget(self.view_dict[field.name], x, y+1)
+        if self.view_dict[field.name].ComboBox.sizeHint().width() > 100:
+            self.view_dict[field.name].setFixedWidth(
+                      self.view_dict[field.name].ComboBox.sizeHint().width())
+        else:
+            self.view_dict[field.name].setFixedWidth(148)
+        self.grid.addWidget(self.view_dict[field.name], x, y+1,
+                            QtCore.Qt.AlignLeft)
 
         self.error_label_dict[field.name] = ErrorLabel(self)
         self.grid.addWidget(self.error_label_dict[field.name], x+1, y, 1, 2)
@@ -793,10 +817,26 @@ class MainFrame(QtGui.QWidget):
                                        self.changed_expert_combo(field.name))
             self.view_dict[field.name].lineEdit().textChanged.connect( \
                                        self.changed_expert_input(field.name))
+        if type(self.window()) == self.tabWidget:
+            if not self.window().user_changed_flag:
+                self.view_dict[field.name].currentIndexChanged.connect( \
+                                        self.window().user_changed)
+                self.view_dict[field.name].lineEdit().textChanged.connect( \
+                                        self.window().user_changed)
         if field.uncompatible:
             self.view_dict[field.name].setToolTip(field.uncompatible)
             self.view_dict[field.name].setDisabled(True)
-        self.grid.addWidget(self.view_dict[field.name], x, y+1)
+
+#        import ipdb
+#        ipdb.set_trace()
+        w = self.view_dict[field.name].ComboBox.sizeHint().width()
+        if w > 100:
+            self.view_dict[field.name].setFixedWidth(w)
+        else:
+            self.view_dict[field.name].setFixedWidth(148)
+
+        self.grid.addWidget(self.view_dict[field.name], x, y+1,
+                            QtCore.Qt.AlignLeft)
 
         self.error_label_dict[field.name] = ErrorLabel(self)
         self.grid.addWidget(self.error_label_dict[field.name], x+1, y, 1, 2)
@@ -807,7 +847,7 @@ class MainFrame(QtGui.QWidget):
         else:
             add_ability = False
         choice = field.choice.string if field.choice else []
-        
+
         if field.listvalue:
             default = field.listvalue.string
         elif field.value:
@@ -831,7 +871,13 @@ class MainFrame(QtGui.QWidget):
                                        self.expert_remove(field.name))
             self.view_dict[field.name].clear_button.clicked.connect( \
                                         self.expert_add(field.name))
-            
+        if type(self.window()) == self.tabWidget:
+            if not self.window().user_changed_flag:
+                self.view_dict[field.name].Changed.connect( \
+                                        self.window().user_changed)
+                self.view_dict[field.name].clear_button.clicked.connect( \
+                                        self.window().user_changed)
+
         if field.uncompatible:
             self.label_dict[field.name].setToolTip(field.uncompatible)
             self.label_dict[field.name].setDisabled(True)
@@ -849,14 +895,13 @@ class MainFrame(QtGui.QWidget):
         else:
             add_ability = True
         choice = field.choice.string if field.choice else []
-        
+
         if field.listvalue:
             default = field.listvalue.string
         elif field.value:
             default = field.value.split(',')
         else:
             default = []
-#        print "=>> field.default =", field.default
         comments = field.comments
 #        if field.name in self.error_fields_name:
 #            field.default = False
@@ -872,6 +917,12 @@ class MainFrame(QtGui.QWidget):
                                        self.expert_remove(field.name))
             self.view_dict[field.name].recover_but.clicked.connect( \
                                         self.expert_add(field.name))
+        if type(self.window()) == self.tabWidget:
+            if not self.window().user_changed_flag:
+                self.view_dict[field.name].Changed.connect( \
+                                        self.window().user_changed)
+                self.view_dict[field.name].recover_but.clicked.connect( \
+                                        self.window().user_changed)
 #            self.view_dict[field.name].Changed.connect( \
 #                                       self.selectList_changed(False, field))
 #            self.view_dict[field.name].recover_but.clicked.connect( \
@@ -911,6 +962,10 @@ class MainFrame(QtGui.QWidget):
                 self.changed_expert_list.append(field.name)
             self.view_dict[field.name].lineEdit.textChanged.connect( \
                                        self.changed_expert_input(field.name))
+        if type(self.window()) == self.tabWidget:
+            if not self.window().user_changed_flag:
+                self.view_dict[field.name].lineEdit.textChanged.connect( \
+                                    self.window().user_changed)
 
         if field.uncompatible:
             self.label_dict[field.name].setToolTip(field.uncompatible)
@@ -948,12 +1003,19 @@ class MainFrame(QtGui.QWidget):
                                        self.expert_remove(field.name))
             self.view_dict[field.name].lineEdit.textChanged.connect( \
                                        self.expert_remove(field.name))
+        if type(self.window()) == self.tabWidget:
+            if not self.window().user_changed_flag:
+                self.view_dict[field.name].ComboBox.currentIndexChanged. \
+                                        connect(self.window().user_changed)
+                self.view_dict[field.name].lineEdit.textChanged.connect( \
+                                        self.window().user_changed)
                                        
         if field.uncompatible:
             self.label_dict[field.name].setToolTip(field.uncompatible)
             self.label_dict[field.name].setDisabled(True)
             self.view_dict[field.name].setToolTip(field.uncompatible)
             self.view_dict[field.name].setDisabled(True)
+
         self.grid.addWidget(self.view_dict[field.name], x, y+1)
 
         self.error_label_dict[field.name] = ErrorLabel(self)
@@ -964,7 +1026,7 @@ class MainFrame(QtGui.QWidget):
         self.label_dict[field.name] = LabelWordWrap(field.label, self)
         self.grid.addWidget(self.label_dict[field.name], x, y)
 
-        self.view_dict[field.name] = PasswordWidget(self, field.value)        
+        self.view_dict[field.name] = PasswordWidget(self, field.value)
 
         # advanced settings (expert)
         if self.expert:
@@ -974,6 +1036,10 @@ class MainFrame(QtGui.QWidget):
                 self.changed_expert_list.append(field.name)
             self.view_dict[field.name].textChanged.connect( \
                                        self.expert_remove(field.name))
+        if type(self.window()) == self.tabWidget:
+            if not self.window().user_changed_flag:
+                self.view_dict[field.name].textChanged.connect( \
+                                        self.window().user_changed)
 
         if field.uncompatible:
             self.label_dict[field.name].setToolTip(field.uncompatible)
@@ -992,10 +1058,10 @@ class MainFrame(QtGui.QWidget):
             self.view_dict[field.name] = ExpertWidget(field.label, self)
         else:
             self.view_dict[field.name] = ExpertWidget\
-                        (_('Press for advanced settings.'), self)
+                        (_('Advanced settings.'), self)
         self.view_dict[field.name].setFlat(True)
         self.grid.addWidget(self.view_dict[field.name], x, y, 1, 2)
-        
+
         if field.value == 'open':
             self.view_dict[field.name].set_open()
         else:
@@ -1021,17 +1087,16 @@ class MainFrame(QtGui.QWidget):
                                   self.set_disabled_expert(field.name, False))
 
     expert_signal = QtCore.Signal()
-    
+
     def set_disabled_expert(self, field_name, disabled = True):
         def wrapper():
             self.view_dict[field_name].setDisabled(disabled)
-            
             self.ClientObj.app.processEvents()
         return wrapper
-        
+
     def set_error_output(self):
         self.error_output = False
-    
+
     def expert_clicked(self, cur_field):
         def wrapper():
             if self.calling_error:
@@ -1068,6 +1133,12 @@ class MainFrame(QtGui.QWidget):
         if not method_name:
             method_name = self.method_name
         # display view in main frame
+        if self.ClientObj.method_names.has_key(method_name):
+            view_method = self._parent.ClientObj.method_names[method_name]
+        else:
+            view_method = method_name
+        self.ClientObj._parent.setWindowTitle(view_method + ' - ' \
+                                                        + self.ClientObj.Name)
         self.ClientObj.MainWidget.main_frame_view(view, method_name, \
                                      step_change = True, error_output = False)
 
@@ -1076,21 +1147,22 @@ class MainFrame(QtGui.QWidget):
             reply = None
             if self.changed_expert_list:
                 text = _('Clean expert parameters?')
-                reply = show_question(self, text, cursor_pos = True)
-                
+                reply = show_question(self, text, cursor_pos = True,
+                                      title = _('Calculate Console'))
+
             if reply == QtGui.QMessageBox.Yes or not self.changed_expert_list:
                 for field_name in self.changed_expert_list:
                     if field_name not in self.expert_list:
                         self.expert_list.append(field_name)
                 self.expert_signal.emit()
         return wrapper
-    
+
     def add_button (self, field, x, y, brief = False):
         if not hasattr (self, 'buttons_widget'):
             self.buttons_widget = ButtonsWidget(self)
             self.grid.addWidget(self.buttons_widget, x, y, 1, 2)
             x += 1
-        
+
         button = QtGui.QPushButton(field.label, self.buttons_widget)
         self.buttons_widget.add_button(button)
         self.view_dict[field.name] = button
@@ -1108,7 +1180,6 @@ class MainFrame(QtGui.QWidget):
                 # Call server method
                 if self.check_run_threads():
                     return
-                    
 #                _print ('========>>>>>>', self.param_object)
                 self.button_call_thread = ClientServiceThread(self.ClientObj,\
                                         method_name, int(self.ClientObj.sid),\
@@ -1118,7 +1189,7 @@ class MainFrame(QtGui.QWidget):
                                             (self.button_clicked_after)
                 self.button_call_thread.start()
             return wrapper
-        
+
         self.view_dict[field.name].clicked.connect \
                                            (init_param_object(self, field))
         if not brief:
@@ -1140,12 +1211,12 @@ class MainFrame(QtGui.QWidget):
                 error = True
                 self.ClientObj.param_objects[self.method_name] \
                                                        ['error'] = meth_result
-                    
+
         if error:
             self.error_display()
 #            self.ClientObj.param_objects[self.method_name]['error'] = None
             return 0
-                
+
         if meth_result[0].type == "pid":
             # create process dict
             self.ClientObj.process_dict[meth_result[0].message] = {}
@@ -1159,9 +1230,13 @@ class MainFrame(QtGui.QWidget):
                           ['layout'].setAlignment(QtCore.Qt.AlignTop)
 
             # set new window title
-            self.ClientObj._parent.setWindowTitle(method_name + '-' \
+            if self.ClientObj.method_names.has_key(method_name):
+                view_method = self._parent.ClientObj.method_names[method_name]
+            else:
+                view_method = method_name
+            self.ClientObj._parent.setWindowTitle(view_method + ' - ' \
                                                         + self.ClientObj.Name)
-                
+
             # Call method display process results
             self.ClientObj.MainWidget.main_frame_res(method_name, \
                                                         meth_result[0])
@@ -1177,7 +1252,7 @@ class MainFrame(QtGui.QWidget):
                                     through_object = method_name)
             self.button_call_thread.signal.connect(self.expert_clicked_after)
             self.button_call_thread.start()
-    
+
     def add_element_steps (self, field):
         steps = field.tablevalue.head.string
         icons = []
@@ -1251,6 +1326,10 @@ class MainFrame(QtGui.QWidget):
 
         self.table_widget.itemClicked.connect(self.row_changed( \
                      self.view_dict[field.name], self.table_dict[field.name]))
+        if type(self.window()) == self.tabWidget:
+            if not self.window().user_changed_flag:
+                self.table_widget.itemClicked.connect \
+                                            (self.window().user_changed)
 
         if self.expert:
             if field.default:
@@ -1421,7 +1500,7 @@ class MainFrame(QtGui.QWidget):
 
             # if not readonly
             elif table.values.ChoiceValue[column].typefield in \
-                                                        ['combo', 'comboEdit']:
+                                                       ['combo', 'comboEdit']:
                 ChoiceValue = table.values.ChoiceValue[column]
                 for row in range (len(table.body.stringArray)):
                     val = table.body.stringArray[row].string[column]
@@ -1634,11 +1713,12 @@ class MainFrame(QtGui.QWidget):
             self.grid.addWidget(help_lbl, x, y, 1, 2)
             x += 1
 
-        brief_sa = QtGui.QScrollArea(self)
+#        brief_sa = QtGui.QScrollArea(self)
         brief_widget = QtGui.QWidget(self)
 
         self.brief_grid = QtGui.QGridLayout(brief_widget)
-        self.brief_grid.setContentsMargins(10,10,10,10)
+#        self.brief_grid.setContentsMargins(10,10,10,10)
+        self.brief_grid.setContentsMargins(0,0,0,0)
         self.brief_grid.setSpacing(10)
         self.brief_grid.setColumnStretch(0,2)
         self.brief_grid.setColumnStretch(1,5)
@@ -1662,28 +1742,22 @@ class MainFrame(QtGui.QWidget):
 #                    QtGui.QSizePolicy.Expanding, QtGui.QSizePolicy.Expanding)
 #        self.brief_grid.addItem(spacer_brief, x, y, 1, 2)
         brief_widget.setFixedHeight(brief_widget.sizeHint().height())
-        brief_sa.setWidget(brief_widget)
-        brief_sa.viewport().setObjectName('Brief')
-        brief_sa.viewport().setStyleSheet("#Brief "
-        "{background-color: #E4E1E0;}")
         brief_widget.setObjectName('Brief_w')
         brief_widget.setStyleSheet("#Brief_w "
         "{background-color: transparent;}")
 
         exp = QtGui.QSizePolicy.Policy.Expanding
-        brief_sa.setSizePolicy(exp, exp)
-        brief_sa.setWidgetResizable(True)
 
         expert_brief = ExpertWidget(_('View options'), self)
         expert_brief.setFlat(True)
         expert_brief.set_close()
         expert_brief.clicked.connect(self.show_brief_widget \
-                                    (brief_sa, expert_brief))
+                                    (brief_widget, expert_brief))
         self.grid.addWidget(expert_brief, x, y, 1, 2)
         x += 1
-        brief_sa.hide()
+        brief_widget.hide()
 
-        self.grid.addWidget(brief_sa, x, y, 1, 2)
+        self.grid.addWidget(brief_widget, x, y, 1, 2)
         x += 1
 
         self.add_standart_button.connect(self._parent.control_button.\
@@ -1863,13 +1937,10 @@ class MainFrame(QtGui.QWidget):
         def wrapper():
             '''add variable values from widget in param_object'''
             # store params name if list for each step
-
             for Group in self.view.groups.GroupField:
                 if not Group.fields:
                     continue
                 for field in Group.fields.Field:
-                    if not hasattr (self.param_object, field.name):
-                        continue
                     if hasattr (self.param_object, 'cl_page_count'):
                         self.param_object.cl_page_count = \
                                             self.ClientObj.count_row_res_table
@@ -1877,6 +1948,8 @@ class MainFrame(QtGui.QWidget):
                         self.param_object.cl_page_offset = str(0 + \
                                                 self.ClientObj.param_objects \
                                                 [self.method_name]['offset'])
+                    if not hasattr (self.param_object, field.name):
+                        continue
                     if field.name == 'cl_page_count':
                         self.param_object[field.name] = \
                                             self.ClientObj.count_row_res_table
@@ -2232,9 +2305,9 @@ class MainFrame(QtGui.QWidget):
                         if from_left_frame and left_frame.step != step_num:
                             left_frame.check_step(str(self.method_name), \
                                                   left_frame.step)
-#                            self.left_check_step.connect(left_frame.check_step\
-#                                     (str(self.method_name), left_frame.step))
-#                            self.left_check_step.emit()
+#                           self.left_check_step.connect(left_frame.check_step\
+#                                    (str(self.method_name), left_frame.step))
+#                           self.left_check_step.emit()
                         return
 
             if not self.error_fined:
diff --git consolegui/application/more.py consolegui/application/more.py
index 03527c0..4c5b8c1 100755
--- consolegui/application/more.py
+++ consolegui/application/more.py
@@ -29,7 +29,7 @@ class TopMenu(QtGui.QPushButton):
         self.setStyleSheet("QPushButton{border: none; margin: 1px;}"
                            "QPushButton:hover{border: 1px solid #73D1FF;"
                            "border-radius: 3px; margin: 1px;}")
-#        self.setStyleSheet("QPushButton{border: none; margin: 0px 0px 0px 0px;}"
+#     self.setStyleSheet("QPushButton{border: none; margin: 0px 0px 0px 0px;}"
 #                           ":hover {border: 1px solid #73D1FF;"
 #                           "border-radius: 3px; margin: 0px 0px 0px 0px;}"
 #                           ":pressed {border: 1px solid #63C1EF;"
@@ -574,7 +574,6 @@ class ComboFileWgt(QtGui.QWidget):
                     self.ComboBox.addItem(item)
                     if value == item:
                         self.ComboBox.setCurrentIndex(self.ComboBox.count()-1)
-
             else:
                 for item in range (len(self.comments)):
                     try:
@@ -694,7 +693,8 @@ class CentralCheckBox (QtGui.QWidget):
     def change_label(self):
         if self.pCheckB.disabled:
             return
-        elif self.pCheckB.checkState() == QtCore.Qt.CheckState.PartiallyChecked:
+        elif self.pCheckB.checkState() == \
+                                    QtCore.Qt.CheckState.PartiallyChecked:
             self.set_label(_('Auto'))
         elif self.pCheckB.checkState() == QtCore.Qt.CheckState.Checked:
             self.set_label(_('Yes'))
@@ -796,16 +796,28 @@ class MultipleChoiceDialog (QtGui.QWidget):
         super(MultipleChoiceDialog, self).__init__()
         self._parent = parent
         self.layout = QtGui.QGridLayout(self)
+        self.layout.setColumnStretch(0,5)
+        self.layout.setColumnStretch(1,5)
+        self.layout.setColumnStretch(2,0)
+        self.layout.setColumnStretch(3,5)
+        self.layout.setColumnStretch(4,5)
+
         self.Available_dict = Available_dict
 
+        minimum = QtGui.QSizePolicy.Policy.Maximum
+        exp = QtGui.QSizePolicy.Policy.Expanding
         # if there is a possibility of adding
         if add_ability:
+            add_line_wgt = QtGui.QWidget(self)
+            add_line_layout = QtGui.QHBoxLayout(add_line_wgt)
             # add "input new items" LineEdit
             self.add_LineEdit = QtGui.QLineEdit(self)
-            self.layout.addWidget(self.add_LineEdit, 0,0,1,4)
+            self.add_LineEdit.setSizePolicy(exp, minimum)
+            add_line_layout.addWidget(self.add_LineEdit)
 
             # add "add new items" PushButton
             self.add_Button = QtGui.QPushButton(self)
+            self.add_Button.setFixedWidth(32)
             try:
                 self.add_Button.setIcon(QtGui.QIcon.fromTheme("list-add"))
             except:
@@ -813,20 +825,27 @@ class MultipleChoiceDialog (QtGui.QWidget):
             self.add_Button.setShortcut \
                                     (QtGui.QKeySequence(QtCore.Qt.Key_Return))
             self.add_Button.clicked.connect(self.add_new_item)
-            self.layout.addWidget(self.add_Button, 0,4)
-        
+            self.add_Button.setSizePolicy(exp, minimum)
+            add_line_layout.addWidget(self.add_Button)
+
+            self.layout.addWidget(add_line_wgt, 0,0,1,5)
+
         # add 2 labels
         self.available_label = QtGui.QLabel('Available values', self)
+        self.available_label.setSizePolicy(exp, minimum)
         self.layout.addWidget(self.available_label, 1,0,1,2)
-        
+
         self.selected_label = QtGui.QLabel('Selected values', self)
+        self.selected_label.setSizePolicy(exp, minimum)
         self.layout.addWidget(self.selected_label, 1,3,1,2)
 
         #add left list
         self.left_ListWidget = ListWidget(self)
         self.left_ListWidget.itemDoubleClicked.connect(self.plus_item)
         self.layout.addWidget(self.left_ListWidget, 2,0,2,2)
-        
+
+        p_m_wgt = QtGui.QWidget(self)
+        p_m_layout = QtGui.QVBoxLayout(p_m_wgt)
         # add '+' button
         self.plus_Button = QtGui.QPushButton(self)
         plus_icons = ['go-next-view','go-next']
@@ -838,8 +857,8 @@ class MultipleChoiceDialog (QtGui.QWidget):
         if icon_next.isNull():
             self.plus_Button.setText('->')
         self.plus_Button.clicked.connect(self.plus_item)
-        self.layout.addWidget(self.plus_Button, 2,2)
-        
+        p_m_layout.addWidget(self.plus_Button)
+
         # add '-' button
         self.minus_Button = QtGui.QPushButton(self)
         minus_icons = ['go-previous-view','go-previous']
@@ -851,55 +870,65 @@ class MultipleChoiceDialog (QtGui.QWidget):
         if icon_prev.isNull():
             self.minus_Button.setText('<-')
         self.minus_Button.clicked.connect(self.minus_item)
-        self.layout.addWidget(self.minus_Button, 3,2)
-        
+        p_m_layout.addWidget(self.minus_Button)
+
+        self.layout.addWidget(p_m_wgt, 2, 2, 2, 1)
+
         #add right list
         self.right_ListWidget = ListWidget(self)
         self.right_ListWidget.itemDoubleClicked.connect(self.minus_item)
         self.layout.addWidget(self.right_ListWidget, 2,3,2,2)
-        
+
+        buttons_wgt = QtGui.QWidget(self)
+        buttons_layout = QtGui.QHBoxLayout(buttons_wgt)
         # add OK button
         self.Ok_Button = QtGui.QPushButton('Ok', self)
         self.Ok_Button.clicked.connect(self.ok_pressed)
-        self.layout.addWidget(self.Ok_Button, 4,3)
-        
+        self.Ok_Button.setFixedWidth(100)
+        buttons_layout.addWidget(self.Ok_Button)
+
         # add Cancel button
-        self.Cancel_Button = QtGui.QPushButton('Cancel', self)
+        self.Cancel_Button = QtGui.QPushButton(_('Cancel'), self)
         self.Cancel_Button.clicked.connect(self.close)
-        self.layout.addWidget(self.Cancel_Button, 4,4)
-        
+        self.Cancel_Button.setFixedWidth(100)
+        buttons_layout.addWidget(self.Cancel_Button)
+
+        self.layout.addWidget(buttons_wgt, 4,3,1,2, QtCore.Qt.AlignRight)
+
         #add Items in list
-        self.left_ListWidget.addItems(
-                               map(lambda x: Available_dict[x], 
+        self.left_ListWidget.addItems(map(lambda x: Available_dict[x], 
                                    filter (lambda x: x not in Selected_list, 
                                            Available_list)))
         self.right_ListWidget.addItems(map(lambda x: Available_dict[x],
                                  filter (lambda x: x in Available_dict.keys(),
                                  Selected_list)))
-        
-        self.setAttribute(QtCore.Qt.WA_DeleteOnClose)
-        
+
+        self.layout.setRowStretch(0,0)
+        self.layout.setRowStretch(1,0)
+        self.layout.setRowStretch(2,1)
+        self.layout.setRowStretch(3,1)
+        self.layout.setRowStretch(4,0)
         self.setLayout(self.layout)
-        
+
     def add_new_item(self):
         # Slot click event add_Button
         if self.add_LineEdit.text() not in [None, '']:
             self.right_ListWidget.addItem(self.add_LineEdit.text())
             self.add_LineEdit.setText('')
         self.add_LineEdit.setFocus()
-        
+
     def plus_item(self):
         # get item in left_ListWidget and set this item in right_ListWidget
         temp_item = self.left_ListWidget.takeItem \
                                         (self.left_ListWidget.currentRow())
         self.right_ListWidget.addItem(temp_item)
-    
+
     def minus_item(self):
         # get item in right_ListWidget and set this item in left_ListWidget
         temp_item = self.right_ListWidget.takeItem \
                                         (self.right_ListWidget.currentRow())
         self.left_ListWidget.addItem(temp_item)
-    
+
     def ok_pressed(self):
         # save all lists and close this widget
         self._parent.Selected = []
@@ -1531,7 +1560,7 @@ class ExpertWidget (QtGui.QPushButton):
         pm = pm.transformed(QtGui.QTransform().rotate(90))
         self.image_lbl.setPixmap(pm)
         self.image_lbl.setAlignment(QtCore.Qt.AlignCenter)
-        
+
         # add transparency
         self.image_lbl.setAttribute(QtCore.Qt.WA_NoSystemBackground)
 
@@ -1754,7 +1783,7 @@ class PlusRow (QtGui.QWidget):
                     self.ComboBox.setItemData(ch, values[ch])
                     if text and text == values[ch]:
                         self.ComboBox.setCurrentIndex(self.ComboBox.count()-1)
-                
+
                 if not text in values and text != None:
                     self.ComboBox.addItem(text)
                     self.ComboBox.setItemData(self.ComboBox.count(), text)
@@ -1777,7 +1806,7 @@ class PlusRow (QtGui.QWidget):
                     text = self.table.item(num_row, col).text()
                     default = text.split(',')
                 def_res = []
-                
+
                 if comments and hasattr (comments, 'string'):
                     comm = comments.string
                 else: comm = []
@@ -1997,9 +2026,8 @@ class PasswordWgt(QtGui.QWidget):
         super(PasswordWgt, self).__init__()
         self._parent = parent
         self.text = text
-        
         self.layout = QtGui.QGridLayout(self)
-        
+
         self.pass_edit = QtGui.QLineEdit(self)
         self.pass_edit.setEchoMode(self.pass_edit.Password)
 
@@ -2008,27 +2036,24 @@ class PasswordWgt(QtGui.QWidget):
 
         self.pass_edit2 = QtGui.QLineEdit(self)
         self.pass_edit2.setEchoMode(self.pass_edit2.Password)
-                
+
         self.layout.addWidget(LabelWordWrap(_('Repeat'), self), 1, 0)
         self.layout.addWidget(self.pass_edit2, 1, 1)
         self.pass_edit.textChanged.connect(self.check_passwd)
         self.pass_edit2.textChanged.connect(self.check_passwd)
-                
 
         self.ok_button = QtGui.QPushButton(_('Ok'), self)
         self.ok_button.setShortcut(QtGui.QKeySequence(QtCore.Qt.Key_Return))
         self.ok_button.clicked.connect(self.send_password)
-        
         self.layout.addWidget(self.ok_button,2,0)
 
         self.cancel_button = QtGui.QPushButton(_('Cancel'), self)
-        self.cancel_button.setShortcut(QtGui.QKeySequence(QtCore.Qt.Key_Escape))
+        self.cancel_button.setShortcut(QtGui.QKeySequence \
+                                                    (QtCore.Qt.Key_Escape))
         self.cancel_button.clicked.connect(self.close)
-        
         self.layout.addWidget(self.cancel_button,2,1)
-        
         self.move(QtGui.QCursor.pos())
-        
+
     def send_password(self):
         password = self.pass_edit.text()
         if password == self.pass_edit2.text():
@@ -2247,12 +2272,14 @@ def show_msg(text, title = None, parent = None):
     msgBox.exec_()
 
 def show_question(parent, text, informative_text = None, cursor_pos = False, 
-                  not_move = False):
+                  not_move = False, title = None):
     msgBox = QtGui.QMessageBox()
     msgBox.setText(text)
     msgBox.setInformativeText(informative_text)
     msgBox.setStandardButtons(QtGui.QMessageBox.Yes | QtGui.QMessageBox.No)
     msgBox.setDefaultButton(QtGui.QMessageBox.No)
+    if title:
+        msgBox.setWindowTitle(title)
     # translate
     msgBox.button(msgBox.Yes).setText(_('Yes'))
     msgBox.button(msgBox.No).setText(_('No'))
@@ -2263,9 +2290,9 @@ def show_question(parent, text, informative_text = None, cursor_pos = False,
     if cursor_pos:
         msgBox.move(QtGui.QCursor.pos())
     else:
-        msgBox.move(parent.frameGeometry().x() + parent.size().width()/2 - 150,\
+        msgBox.move(parent.frameGeometry().x()+parent.size().width()/2 - 150,\
                 parent.frameGeometry().y() + parent.size().height()/2 - 100)
-    
+
     reply = msgBox.exec_()
     return reply
 
@@ -2295,13 +2322,13 @@ def client_post_auth(client):
         show_msg (e.value)
         return 1
     return 0
-    
+
 class ClientSignal(QtCore.QThread):
     sid_sig = QtCore.Signal(int, int)
     def __init__(self, ClientObj):
         QtCore.QThread.__init__(self)
         self.ClientObj = ClientObj
-        
+
     def run(self):
         self.exit_flag = False
         try:
@@ -2478,7 +2505,7 @@ class ClientServiceThread(QtCore.QThread):
                                     (self.parameters_object)
             elif self.third_params == None:
                 result = client.service[0][self.method_name] \
-                                    (self.parameters_object, self.second_params)
+                                  (self.parameters_object, self.second_params)
             else:
                 result = client.service[0][self.method_name] \
                                 (self.parameters_object, self.second_params, \
@@ -2509,7 +2536,7 @@ class ClientServiceThread(QtCore.QThread):
         self.close_flag = True
 
 class ImageLabel(QtGui.QLabel):
-    def __init__(self, image, parent = None):
+    def __init__(self, image, height_image, parent = None):
         QtGui.QLabel.__init__(self)
         self._parent = parent
         repeat = None
@@ -2536,10 +2563,13 @@ class ImageLabel(QtGui.QLabel):
             if os.path.isfile(fix_image_path):
                 layout = QtGui.QHBoxLayout(self)
                 fix_image = QtGui.QLabel(self)
-                fix_image.setStyleSheet("background-image: url(%s); " \
-                                        %fix_image_path)
                 img = Image.open(fix_image_path)
+                img.thumbnail((img.size[0],height_image), Image.ANTIALIAS)
+                temp_file = '/tmp/%s_fix' %filename
+                img.save(temp_file, "JPEG")
                 fix_image.setFixedWidth(img.size[0])
+                fix_image.setStyleSheet("background-image: url(%s); " \
+                                        %temp_file)
                 layout.addWidget(fix_image)
                 layout.setContentsMargins(0,0,0,0)
                 layout.setAlignment(QtCore.Qt.AlignLeft)
@@ -2549,12 +2579,16 @@ class ImageLabel(QtGui.QLabel):
             style = "background-color: qlineargradient(x1: 0, y1: 0, " + \
                 "x2: 0, y2: 1, stop: 0 %s, stop: 1 %s);" %(color1, color2)
 
-        style += "background-image: url(%s); " %image
+        im = Image.open(image)
+        im.thumbnail((im.size[0],height_image), Image.ANTIALIAS)
+        temp_file = '/tmp/%s_temp' %filename
+        im.save(temp_file, "JPEG")
+        style += "background-image: url(%s); " %temp_file
         style += "background-attachment: fixed; "
         style += "background-repeat: %s; " %repeat_dict[repeat.lower()]
         style += "border-bottom: 1px solid #B8B3B0;"
         self.setStyleSheet(style)
-        self.setFixedHeight(200)
+        self.setFixedHeight(im.size[1])
 
 def get_view_params(client, method, step = None, expert = None, brief = None):
     view_params = create_obj(client, method)
diff --git consolegui/application/session_function.py consolegui/application/session_function.py
index 1dd7a19..ed8aabb 100755
--- consolegui/application/session_function.py
+++ consolegui/application/session_function.py
@@ -51,13 +51,8 @@ def client_post_cert (client, lang):
     sid = get_sid(client)
     results = client.service.post_cert()
     if results[0][0] == -4:
-        show_msg (_('Certificate added to database server. ') + \
-                  _('Must restart the program.'),\
-                        _("Certificate not found in Server Database!"))
-        ip, mac = get_ip_mac()
-        cert_id = client.service.cert_add(mac, 'gui')
-        _print (_("Your certificate ID = %s") %cert_id)
-        sys.exit(1)
+        show_msg (_("Certificate not found in Server Database!"), _('Error'))
+        raise Exception()
     sid, new_session = client_sid(sid, client, results[0][0], lang)
     if new_session:
         _print (_(" New Session"))
@@ -79,7 +74,7 @@ def client_post_cert (client, lang):
 class ViewSessionInfo (QtGui.QWidget):
     def __init__(self, parent, client, window):
         QtGui.QWidget.__init__(self)
-        self.layout = QtGui.QVBoxLayout()
+        self.layout = QtGui.QGridLayout()
         
         sid = get_sid(client)
         try:
@@ -92,68 +87,54 @@ class ViewSessionInfo (QtGui.QWidget):
         ip, mac = get_ip_mac()
         
         if results[0][0] == -4:
-            self.layout.addWidget(LabelWordWrap \
-                        (_('Certificate not found in Server Database!'), self))
-                        
-            self.layout.addWidget(LabelWordWrap \
-                        (_('Add certificate to server Database...'), self))
-            
-            self.layout.addWidget(LabelWordWrap(_('Your IP adress - ')+ip, self))
-            self.layout.addWidget(LabelWordWrap(_('Your MAC adress - ')+mac, self))
-
-            try:
-                cert_id = client.service.cert_add(mac, 'gui')
-            except urllib2.URLError:
-                self.layout.addWidget(LabelWordWrap \
-                                    (_('Error adding certificate to server!')))
-                self.setLayout(self.layout)
-                return 1
-            self.layout.addWidget(LabelWordWrap \
-                                   (_('Your certificate ID = ')+cert_id, self))
+            self.layout.addWidget(LabelWordWrap(_('Certificate not found in'
+                        ' Server Database!'), self), 0,0,1,2)
             self.setLayout(self.layout)
-
             return 1
 
         sid = get_sid(client)
-        self.layout.addWidget(LabelWordWrap \
-                                     (_('Your session id = ')+str(sid), self))
-        
+        self.layout.addWidget(LabelWordWrap(_('Your session id = ')+str(sid),
+                                            self), 4,0,1,2)
+
         if results[0][0] == -3:
-            self.layout.addWidget(LabelWordWrap \
-                                           (_('Certificate not send!'), self))
+            self.layout.addWidget(LabelWordWrap(_('Certificate not send!'),
+                                                self), 5,0,1,2)
         else:
-            self.layout.addWidget(LabelWordWrap \
-                       (_('Your certifitate id = ')+ str(results[0][0]), self))
+            self.layout.addWidget(LabelWordWrap(_('Your certifitate id = ') \
+                            + str(results[0][0]), self), 5,0,1,2)
             try:
                 if results[0][1] == -2:
-                    self.layout.addWidget(LabelWordWrap \
-                                (_('expiry date certificate has passed'), self))
+                    self.layout.addWidget(LabelWordWrap(_('expiry date '
+                                'certificate has passed'), self), 6,0,1,2)
                 elif results[0][1] > 0:
-                    self.layout.addWidget(LabelWordWrap \
-                                (_('shelf life expires after %d days') \
-                                %(results[0][1]), self))
+                    self.layout.addWidget(LabelWordWrap(_('shelf life expires'
+                            ' after %d days')%(results[0][1]), self), 6,0,1,2)
             except:
                 pass
-        self.layout.addWidget(LabelWordWrap(_('Your IP adress - ')+ip, self))
-        self.layout.addWidget(LabelWordWrap(_('Your MAC adress - ')+mac, self))
-        
+        self.layout.addWidget(LabelWordWrap(_('Your IP adress - ') + ip,
+                                            self), 7,0,1,2)
+        self.layout.addWidget(LabelWordWrap(_('Your MAC adress - ') + mac,
+                                            self), 8,0,1,2)
+
         # Add clear cache Button
         self.clear_cache_button = QtGui.QPushButton \
-                                    (_('Clear your cache session'), self)
+                                    (_('Clear session cache'), self)
         self.clear_cache_button.clicked.connect(self.clear_cache(client, sid))
-        self.layout.addWidget(self.clear_cache_button)
-        
+        self.layout.addWidget(self.clear_cache_button, 9,0)
+
         Quit_button = QtGui.QPushButton(_("Close"), self)
-        
-        self.layout.addWidget(Quit_button)
+        Quit_button.setShortcut(QtGui.QKeySequence(QtCore.Qt.Key_Escape))
+
+        self.layout.addWidget(Quit_button, 9, 1)
         self.connect(Quit_button, QtCore.SIGNAL("clicked()"),
                      self, QtCore.SLOT("close()"))
 
-        self.setFixedSize(240,200)
+        self.setFixedSize(260,200)
         self.setLayout(self.layout)
-        
+
         self.setWindowIcon(QtGui.QIcon.fromTheme("document-edit-verify"))
-        
+        self.setWindowTitle(_('Session information'))
+
         self.move(window.geometry().x() + window.geometry().width() / 2 \
                   - self.size().width() / 2, \
                   window.geometry().y() + window.geometry().height() / 2 \
diff --git consolegui/application/tools.py consolegui/application/tools.py
index 9958b16..0e55516 100755
--- consolegui/application/tools.py
+++ consolegui/application/tools.py
@@ -89,6 +89,7 @@ class ToolsWidget (QtGui.QWidget):
         toolQuit = QtGui.QPushButton(_('Cancel'), self)
         toolQuit.setFixedWidth(100)
         toolQuit.clicked.connect(self.close)
+        toolQuit.setShortcut(QtGui.QKeySequence(QtCore.Qt.Key_Escape))
         self.botton_layout.addWidget(toolQuit)
 
         self.gui_signal.connect(tab.GuiWidget.save_changes(ClientObj))
@@ -159,7 +160,8 @@ class ToolTabWidget(QtGui.QTabWidget):
                                     %tab_list[self.cur_tab_num]
             informative_text = _('<center>Apply them?</center>')
 
-            reply = show_question(self.parent(), text, informative_text)
+            reply = show_question(self.parent(), text, informative_text,
+                                  title = _('Saving changes'))
 
             if reply == QtGui.QMessageBox.Yes:
                 if self.cur_tab_num == 0:
@@ -207,7 +209,7 @@ class ToolGui(QtGui.QWidget):
 
         self.h_image_lineedit = QtGui.QLineEdit(self)
         self.h_image_lineedit.setToolTip(_('Set fixed height image for '
-                                         'actions')+_('0 - hide images'))
+                                         'actions')+' '+_('0 - hide images'))
 
         self.h_image_lineedit.setText(str(ClientObj.height_image))
 
@@ -519,7 +521,10 @@ class ToolOther(QtGui.QWidget):
                 ClientObj.lang = self.lang_ComboBox.itemData \
                                            (self.lang_ComboBox.currentIndex())
                 if ClientObj.client:
-                    client_post_cert(ClientObj.client, ClientObj.lang)
+                    try:
+                        client_post_cert(ClientObj.client, ClientObj.lang)
+                    except:
+                        return
                     ClientObj.methods_list = client_list_methods \
                                             (ClientObj.sid, ClientObj.client)
                     from DisplayMethod import DisplayMethod
diff --git data/cl-console-gui.desktop data/cl-console-gui.desktop
index 02de617..e0e4803 100644
--- data/cl-console-gui.desktop
+++ data/cl-console-gui.desktop
@@ -1,9 +1,9 @@
 [Desktop Entry]
-Name=Calculate Utilities Console
-Name[ru]=Консоль Calculate Utilities
+Name=Calculate Console
+Name[ru]=Консоль Calculate
 Comment=Calculate Utilities console
 Exec=cl-console-gui
 Icon=calculate3
 Terminal=false
 Type=Application
-Categories=System;
+Categories=Settings;X-XFCE-SettingsDialog;X-XFCE-SystemSettings;
\ No newline at end of file
diff --git ru/console_gui.po ru/console_gui.po
index 32ee71a..4cf0e72 100755
--- ru/console_gui.po
+++ ru/console_gui.po
@@ -2,8 +2,8 @@ msgid ""
 msgstr ""
 "Project-Id-Version: console_gui_translate\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2012-06-08 10:42+0300\n"
-"PO-Revision-Date: 2012-06-08 10:42+0300\n"
+"POT-Creation-Date: 2012-06-15 16:04+0300\n"
+"PO-Revision-Date: 2012-06-15 16:04+0300\n"
 "Last-Translator: Denis <ds@mail.ru>\n"
 "Language-Team: \n"
 "Language: \n"
@@ -15,57 +15,62 @@ msgstr ""
 "X-Poedit-SourceCharset: utf-8\n"
 "X-Poedit-SearchPath-0: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application\n"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:357
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:361
 msgid "Connection lost!"
 msgstr "Соединение потеряно!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:379
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:383
 msgid "Server was restarted."
 msgstr "Сервер был перезапущен."
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:380
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:384
 msgid "Please, connect to server again."
 msgstr "Пожалуйста, подключитесь к серверу снова."
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:397
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:401
+msgid "Closing session"
+msgstr "Закрытие сессии"
+
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:402
 msgid "Close your session"
 msgstr "Закрыть данную сессию"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:397
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:402
 #, python-format
 msgid "with %s?"
 msgstr "c %s?"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:401
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:406
 #, python-format
 msgid "at closing session, data %d process will be deleted!"
 msgstr "При закрытии сессии данные %d процессa будут удалены!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:404
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:409
 #, python-format
 msgid "at closing session, data %d processes will be deleted!"
 msgstr "При закрытии сессии данные %d процессов будут удалены!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:411
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:124
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:416
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:131
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:700
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1928
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2257
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1957
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2284
 msgid "Yes"
 msgstr "Да"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:412
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:125
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:417
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:132
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:702
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1930
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2258
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1959
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2285
 msgid "No"
 msgstr "Нет"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:417
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/Box.py:422
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/create_cert.py:114
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1046
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2024
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:891
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1075
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2050
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:50
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:132
 msgid "Cancel"
@@ -170,6 +175,7 @@ msgid "PID %d not found"
 msgstr "Процесс id %d не найден"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/pid_information.py:84
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/LeftMenu.py:243
 msgid "Permission denied"
 msgstr "Доступ запрещён"
 
@@ -198,8 +204,8 @@ msgid "Country (2 words)"
 msgstr "Страна (2 символа)"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/create_cert.py:101
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1801
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2006
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1830
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2034
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:36
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:85
 msgid "Password"
@@ -215,8 +221,8 @@ msgid "Field \"Country\" must be two-character"
 msgstr "Поле \"Страна\" должно состоять из двух символов"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/create_cert.py:139
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:139
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:225
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:140
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:227
 msgid "Input Error"
 msgstr "Ошибка Ввода"
 
@@ -274,51 +280,49 @@ msgstr "Сессия не соответствует Вашему сертифи
 msgid "It was not possible to kill process!"
 msgstr "Не удалось завершить процесс!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:119
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:126
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/helpwidget.py:53
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/helpwidget.py:138
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ControlButton.py:225
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:146
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ControlButton.py:224
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:125
 msgid "Close"
 msgstr "Закрыть"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:140
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:147
 msgid "language for translate"
 msgstr "язык для перевода"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:143
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:150
 msgid "call method"
 msgstr "вызов метода"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:146
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:153
 msgid "port number"
 msgstr "номер порта"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:149
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:156
 msgid "host destination"
 msgstr "хост назначения"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:273
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:342
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:283
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:356
 msgid "New connection"
 msgstr "Новое соединение"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:374
-msgid "At closing program all connects will be close!"
-msgstr "При закрытии программы все соединения будут закрыты!"
-
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ConnectionTabs.py:375
-msgid "Are you sure want to close program?"
-msgstr "Вы точно хотите закрыть программу?"
-
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/LeftMenu.py:426
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/LeftMenu.py:444
 msgid "At current step has mistake."
 msgstr "На текущем шаге есть ошибка."
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/LeftMenu.py:427
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/LeftMenu.py:445
 msgid "Do you want to continue?"
 msgstr "Вы хотите продолжить?"
 
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/LeftMenu.py:447
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:117
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:158
+msgid "Calculate Console"
+msgstr "Calculate Console"
+
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/helpwidget.py:21
 msgid "User should be not root"
 msgstr "Пользователь должен быть не root"
@@ -340,7 +344,7 @@ msgid "Distributive website"
 msgstr "Сайт Дистрибутива"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/helpwidget.py:88
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/helpwidget.py:167
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/helpwidget.py:168
 msgid "Calculate Console "
 msgstr "Calculate Console "
 
@@ -374,15 +378,22 @@ msgstr "Сообщение:"
 msgid "Send Bug"
 msgstr "Отправить ошибку"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/helpwidget.py:203
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/helpwidget.py:183
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:180
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:332
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:395
+msgid "Report Bug"
+msgstr "Сообщить об ошибке"
+
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/helpwidget.py:205
 msgid "Enter valid email!"
 msgstr "Введите существующий адрес электронной почты!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/helpwidget.py:228
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/helpwidget.py:230
 msgid "Email sent!"
 msgstr "Письмо отправлено!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/helpwidget.py:232
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/helpwidget.py:234
 msgid "Error sending!"
 msgstr "Ошибка отправки"
 
@@ -391,7 +402,7 @@ msgid "Previous"
 msgstr "Назад"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ControlButton.py:163
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2018
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2045
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:43
 msgid "Ok"
 msgstr "Ok"
@@ -400,112 +411,93 @@ msgstr "Ok"
 msgid "Next"
 msgstr "Далее"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ControlButton.py:238
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ControlButton.py:241
 msgid "Error close process"
 msgstr "Ошибка закрытия процесса"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:54
-msgid "Certificate added to database server. "
-msgstr "Сертификат добавлен в базу сервера. "
-
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:55
-msgid "Must restart the program."
-msgstr "Необходимо перезапустить программу."
-
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:56
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:96
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:90
 msgid "Certificate not found in Server Database!"
 msgstr "Сертификат не найден в БД сервера!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:59
-#, python-format
-msgid "Your certificate ID = %s"
-msgstr "Номер Вашего сертификата = %s"
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:54
+msgid "Error"
+msgstr "Ошибка"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:63
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:58
 msgid " New Session"
 msgstr "Новая сессия"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:64
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:59
 msgid " Old Session"
 msgstr "Старая сессия"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:65
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:60
 #, python-format
 msgid " Your session id = %s"
 msgstr "Номер Вашей сессии = %s"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:67
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:123
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:62
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:100
 msgid "Certificate not send!"
 msgstr "Сертификат не отправлен!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:69
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:64
 #, python-format
 msgid " Your certifitate id = %d"
 msgstr "Номер Вашего сертификата = %d"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:72
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:130
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:67
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:107
 msgid "expiry date certificate has passed"
 msgstr "Время жизни сертификата истекло"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:74
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:133
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:69
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:110
 #, python-format
 msgid "shelf life expires after %d days"
 msgstr "Время жизни сертификата истекает через %d дней"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:88
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:148
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:180
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:232
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:249
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:274
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:277
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:284
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:83
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:149
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:182
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:234
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:251
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:275
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:278
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:285
 msgid "Not connected!"
 msgstr "Соединение отсутствует!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:99
-msgid "Add certificate to server Database..."
-msgstr "Добавление сертификата в БД сервера..."
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:96
+msgid "Your session id = "
+msgstr "Номер Вашей сессии = "
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:101
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:137
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:103
+msgid "Your certifitate id = "
+msgstr "Номер Вашего сертификата = "
+
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:114
 msgid "Your IP adress - "
 msgstr "Ваш IP адрес - "
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:102
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:138
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:116
 msgid "Your MAC adress - "
 msgstr "Ваш MAC адрес - "
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:108
-msgid "Error adding certificate to server!"
-msgstr "Ошибка добавления сертификата на сервер!"
-
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:112
-msgid "Your certificate ID = "
-msgstr "Номер Вашего сертификата = "
-
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:119
-msgid "Your session id = "
-msgstr "Номер Вашей сессии = "
-
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:126
-msgid "Your certifitate id = "
-msgstr "Номер Вашего сертификата = "
-
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:142
-msgid "Clear your cache session"
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:121
+msgid "Clear session cache"
 msgstr "Очистить кэш сессии"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:170
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:136
+msgid "Session information"
+msgstr "Информация о сессии"
+
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:151
 msgid "Error clearing session cache"
 msgstr "Ошибка удаления кэша сессии"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:172
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/session_function.py:153
 msgid "Session cache is cleared"
 msgstr "Кэш сессии удалён"
 
@@ -517,82 +509,76 @@ msgstr "О программе"
 msgid "Information"
 msgstr "Справка"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:180
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:332
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:395
-msgid "Report Bug"
-msgstr "Сообщить об ошибке"
-
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:488
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:600
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:599
 msgid "Open"
 msgstr "Открыть"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:698
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1932
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1961
 msgid "Auto"
 msgstr "Авто"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:997
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1026
 msgid "Clear Table"
 msgstr "Очистить таблицу"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1098
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1237
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1303
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1416
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1127
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1266
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1332
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1445
 msgid "Add row"
 msgstr "Добавить строку"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1109
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1138
 msgid "Recover Table"
 msgstr "Восстановить таблицу"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1153
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1182
 msgid "Check all"
 msgstr "Отметить все"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1316
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1345
 msgid "Reset changes"
 msgstr "Сбросить изменения"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1804
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2012
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:1833
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2040
 msgid "Repeat"
 msgstr "Повтор"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2129
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2154
 msgid "Break process"
 msgstr "Прервать процесс"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2291
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:356
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2318
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:359
 msgid "You do not have a certificate. Please, generate new request and get new certificate from server."
 msgstr "У Вас нет сертификата. Пожалуйста, сгенерируйте запрос на сертитфикат и получите сертификат с сервера."
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2359
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2386
 msgid "No methods available!"
 msgstr "Нет доступных методов!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2386
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2413
 msgid "No access to file!"
 msgstr "Нет доступа к файлу!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2389
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2416
 msgid "Failed to obtain certificate data!"
 msgstr "Не удалось получить данные сертификата!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2392
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2419
 #, python-format
 msgid "Permission denied %s"
 msgstr "Доступ запрещён %s"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2395
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2399
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2422
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2426
 msgid "Sid Deleted!"
 msgstr "Сессия удалена!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2402
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/more.py:2429
 msgid "Server delete sid error"
 msgstr "Ошибка удаления сессии на сервере"
 
@@ -623,24 +609,24 @@ msgid "Certificate signing request"
 msgstr "Запрос на подпись сертификата"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:99
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:139
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:204
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:224
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:140
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:206
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:226
 msgid "Enter Hostname or IP adress"
 msgstr "Введите имя хоста или IP адрес"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:100
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:205
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:207
 msgid "Field \"Host\" Error!"
 msgstr "Ошибка в поле \"Хост\"!"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:105
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:210
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:212
 msgid "Enter Port"
 msgstr "Введите номер порта"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:105
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:210
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:212
 msgid "Field \"Port\" Error!"
 msgstr "Ошибка в поле \"Порт\"!"
 
@@ -657,75 +643,75 @@ msgstr "Номер Вашего запроса = %s\n"
 msgid "Send new request?"
 msgstr "Отправить навый запрос на подпись сертификата?"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:133
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:136
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:220
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:134
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:137
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:222
 msgid "Close. Connecting Error."
 msgstr "Ошибка соединения. Закрываюсь."
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:154
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:155
 msgid "Private Key and Request exists!"
 msgstr "Секретный ключ и запрос на подпись сертификата созданы!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:155
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:156
 msgid "Create new Private Key and Request?"
 msgstr "Создать новые Секретный Ключ и Запрос на подпись сертификата?"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:184
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:186
 msgid "This server can not sign certificate!"
 msgstr "Сервер не подписал сертификат!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:189
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:263
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:191
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:265
 #, python-format
 msgid "Your request id = %s"
 msgstr "Номер Вашего запроса = %s"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:195
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:197
 #, python-format
 msgid "request was not sent or deleted file %s"
 msgstr "Запрос не был послан или удалён файл %s"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:220
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:222
 #, python-format
 msgid "Error code: %s"
 msgstr "Код ошибки: %s"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:236
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:238
 #, python-format
 msgid "Request %s not found on client side"
 msgstr "Запрос %s не найден на стороне клиента"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:259
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:261
 msgid "Request to sign is rejected!"
 msgstr "Запрос на подпись сертификата отвергнут!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:262
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:264
 msgid "Request for the signing has not yet reviewed.\n"
 msgstr "Запрос на подписание сертификата ещё не рассмотрен.\n"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:266
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:268
 msgid "Request on signature does not match sent earlier."
 msgstr "Запрос или подпись не соответствуют отправленным ранее."
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:272
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:274
 #, python-format
 msgid "OK. Certificate save. Your certificate id = %s"
 msgstr "Сертификат сохранён! Номер Вашего сертификата = %s"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:322
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:324
 msgid "Not found field \"CN\" in root certificate!"
 msgstr "Не найдено поле \"CN\" в корневом сертификате!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:334
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:336
 msgid "filename = "
 msgstr "Имя файла ="
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:335
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:337
 msgid "Root Certificate Add"
 msgstr "Корневой сертификат добавлен"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:337
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/CertificateClass.py:339
 msgid "file with ca certificates exists"
 msgstr "Файл с сертификатом удостоверяющего центра создан"
 
@@ -742,7 +728,7 @@ msgid "previous connection!"
 msgstr "предыдущее соединение!"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:174
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:352
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:355
 msgid "Connection Error"
 msgstr "Ошибка соединения"
 
@@ -750,62 +736,58 @@ msgstr "Ошибка соединения"
 msgid "Enter correctly port!"
 msgstr "Введите корректный порт!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:274
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:275
 msgid "This server is not trusted"
 msgstr "Данный сервер не является доверенным"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:337
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:340
 msgid "Verify Error"
 msgstr "Ошибка проверки сертификата сервера"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:351
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:354
 msgid "Password is invalid"
 msgstr "Пароль неверен"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:363
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/conf_connection.py:366
 msgid "You do not have a certificate or your certificate does not match the server certificate. Please, generate new request andget new certificate from server."
 msgstr "У вас нет сертификата или ваш сертификат не соответствует серверному сертификату. Пожалуйста, сгенерируйте запрос на сертитфикат и получите сертификат с сервера."
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ShortFrameResult.py:225
-msgid "Error clear process cache on server"
-msgstr "Ошибка удаления кэша процесса на сервере"
-
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ShortFrameResult.py:367
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:495
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:512
 msgid "Error get frame from Server..."
 msgstr "Ошибка получения фрейма с сервера."
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ShortFrameResult.py:368
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ShortFrameResult.py:442
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:496
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:513
 msgid "Error get frame from Server."
 msgstr "Ошибка получения фрейма с сервера."
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ShortFrameResult.py:369
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ShortFrameResult.py:443
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ShortFrameResult.py:485
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:497
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:514
 msgid "Please, resfesh this Page later."
 msgstr "Пожалуйста, обновите эту страницу позже."
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ShortFrameResult.py:441
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:570
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:587
 msgid "Error get entire frame from Server..."
 msgstr "Ошибка получения полного фрейма с сервера."
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ShortFrameResult.py:483
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ShortFrameResult.py:484
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:619
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:637
 msgid "Error get progress from Server."
 msgstr "Ошибка получения значения прогресса с сервера."
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ShortFrameResult.py:596
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:766
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:784
 msgid "Send"
 msgstr "Отправить"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/ShortFrameResult.py:629
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:799
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/MainFrameResult.py:817
 msgid "Error send password to Server"
 msgstr "Ошибка отправки сообщения (пароля) на сервер"
 
@@ -821,77 +803,81 @@ msgstr "Очистить файл конфигурации"
 msgid "Apply"
 msgstr "Применить"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:140
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:155
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:180
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:141
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:156
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:182
 msgid "Gui Tools"
 msgstr "Настройки интерфейса"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:141
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:155
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:184
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:142
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:156
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:186
 msgid "Other Tools"
 msgstr "Прочие настройки"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:158
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:159
 #, python-format
 msgid "In the %s tab has unsaved changes"
 msgstr "На вкладке %s имеются несохранённые изменения"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:160
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:161
 msgid "<center>Apply them?</center>"
 msgstr "<center>Применить их?</center>"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:205
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:164
+msgid "Saving changes"
+msgstr "Сохранение изменений"
+
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:207
 msgid "Height image"
 msgstr "Высота изображений"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:209
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:211
 msgid "Set fixed height image for actions"
 msgstr "Установка фиксированной высоты изображений для действий"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:210
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:212
 msgid "0 - hide images"
 msgstr "0 - скрыть изображения"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:218
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:220
 msgid "Expert view"
 msgstr "Расширенный просмотр"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:221
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:222
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:223
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:224
 msgid "Expert mode view results"
 msgstr "Расширенный режим просмотра результатов"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:228
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:230
 msgid "Count Row in result Table"
 msgstr "Кол-во строк в таблице"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:373
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:375
 msgid "Select Language"
 msgstr "Выбор языка"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:377
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:379
 msgid "English"
 msgstr "Английский"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:377
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:379
 msgid "Russian"
 msgstr "Русский"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:391
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:393
 msgid "Path to Certificates"
 msgstr "Директория с сертификатами"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:395
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:397
 msgid "Certificate Directory"
 msgstr "Директория с сертификатами"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:398
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:400
 msgid "Empty to default path"
 msgstr "Оставьте пустым для выбора стандартного пути"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:405
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/tools.py:407
 msgid "Timeout"
 msgstr "Таймаут"
 
@@ -921,42 +907,33 @@ msgid "System control"
 msgstr "Управление системой"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:151
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:253
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:251
 msgid "Show/Hide Window"
 msgstr "Показать/спрятать окно"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:152
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:159
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:270
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:379
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:377
 msgid "Update system"
 msgstr "Обновить систему"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:153
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:160
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:289
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:396
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:287
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:394
 msgid "Exit program"
 msgstr "Выйти из программы"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:158
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:363
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:361
 msgid "Program settings"
 msgstr "Настройки программы"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:175
-msgid "The system is updated"
-msgstr "Система обновляется"
-
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:176
-msgid "Stop updating and exit?"
-msgstr "Остановить обновление и выйти?"
-
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:234
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/TrayIcon.py:232
 msgid "Update is already running"
 msgstr "Обновление уже запущено"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/DisplayMethod.py:319
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/DisplayMethod.py:344
 msgid "Reconnect"
 msgstr "Переподключиться"
 
@@ -965,7 +942,7 @@ msgid "Untrusted Server Certificate!"
 msgstr "Недоверенный сертификат сервера!"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:55
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:428
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:427
 #, python-format
 msgid "Fingerprint = %s"
 msgstr "Отпечаток = %s"
@@ -976,12 +953,12 @@ msgid "Serial Number =  %s"
 msgstr "Серийный номер = %s"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:71
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:432
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:431
 msgid "Issuer"
 msgstr "Подписчик"
 
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:83
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:436
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:435
 msgid "Subject"
 msgstr "Субъект"
 
@@ -1018,101 +995,140 @@ msgstr ""
 msgid "Certificate add"
 msgstr "Сертификат добавлен"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:185
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:699
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:704
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:184
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:700
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:705
 #, python-format
 msgid "error creating directory %s"
 msgstr "Ошибка при создании директории %s"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:310
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:309
 msgid "Certificate not found in client"
 msgstr "Сертификат не найден на стороне клиента"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:321
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:320
 msgid "Error open file"
 msgstr "Ошибка при открытии файла"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:377
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:376
 msgid "Not found field \"CN\" in certificate!"
 msgstr "Не найдено поле \"CN\" в сертификате!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:387
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:386
 #, python-format
 msgid "filename = %s"
 msgstr "Имя файла = %s"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:387
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:386
 msgid "CERTIFICATE ADD"
 msgstr "Сертификат добавлен"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:389
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:388
 msgid "File with ca certificates exists"
 msgstr "Файл с сертификатом удостоверяющего центра создан"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:405
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:404
 msgid "Server certificate is not valid"
 msgstr "Сертификат сервера недействителен!"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:410
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:409
 msgid "CA not found on server"
 msgstr "Сертификат Центра Авторизации не найден на сервере"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:422
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:421
 msgid "Error. Certificate not added to trusted"
 msgstr "Ошибка! Сертификат не добавлен в доверенные"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:429
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:428
 #, python-format
 msgid "Serial Number = %s"
 msgstr "Серийный номер = %s"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:440
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:439
 msgid "Add CA certificates to trusted? "
 msgstr "Добавить сертификат Центра Авторизации в доверенные?"
 
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:441
+msgid "Adding certificate"
+msgstr "Добавление сертификата"
+
 #: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:444
 msgid "Certificate not added to trusted"
 msgstr "Сертификат не добавлен в доверенные"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:781
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:782
 msgid "CRL add"
 msgstr "Список отзыва сертификатов добавлен"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:870
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:871
 msgid "CA certificate delete from user trusted certificate"
 msgstr "Сертификат Центра Авторизации удалён из пользовательского списка доверенных сертификатов"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:890
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/client_class.py:891
 msgid "CA certificate delete from system trusted certificate"
 msgstr "Сертификат Центра Авторизации удалён из системного списка доверенных сертификатов"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:995
-msgid "Press for advanced settings."
-msgstr "Нажмите для дополнительных настроек"
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:1061
+msgid "Advanced settings."
+msgstr "Дополнительные настройки."
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:1078
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:1149
 msgid "Clean expert parameters?"
 msgstr "Очистить экспертные параметры?"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:1296
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:1375
 msgid "Delete selected rows"
 msgstr "Удалить выделенные строки"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:1540
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:1619
 msgid "Delete row"
 msgstr "Удалить строку"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:1677
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:1751
 msgid "View options"
 msgstr "Просмотреть параметры"
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:2155
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:2228
 msgid " Step "
 msgstr " Шаг "
 
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:2158
-#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:2162
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:2231
+#: /var/calculate/mydir/source/spyder/cl-api-client/consolegui/application/mainframe.py:2235
 msgid "Run"
 msgstr "Выполнение"
 
+#~ msgid "Certificate added to database server. "
+#~ msgstr "Сертификат добавлен в базу сервера. "
+
+#~ msgid "Must restart the program."
+#~ msgstr "Необходимо перезапустить программу."
+
+#~ msgid "Your certificate ID = %s"
+#~ msgstr "Номер Вашего сертификата = %s"
+
+#~ msgid "Add certificate to server Database..."
+#~ msgstr "Добавление сертификата в БД сервера..."
+
+#~ msgid "Error adding certificate to server!"
+#~ msgstr "Ошибка добавления сертификата на сервер!"
+
+#~ msgid "Your certificate ID = "
+#~ msgstr "Номер Вашего сертификата = "
+
+#~ msgid "Error clear process cache on server"
+#~ msgstr "Ошибка удаления кэша процесса на сервере"
+
+#~ msgid "Clear your cache session"
+#~ msgstr "Очистить кэш сессии"
+
+#~ msgid "At closing program all connects will be close!"
+#~ msgstr "При закрытии программы все соединения будут закрыты!"
+
+#~ msgid "Are you sure want to close program?"
+#~ msgstr "Вы точно хотите закрыть программу?"
+
+#~ msgid "The system is updated"
+#~ msgstr "Система обновляется"
+
+#~ msgid "Stop updating and exit?"
+#~ msgstr "Остановить обновление и выйти?"
