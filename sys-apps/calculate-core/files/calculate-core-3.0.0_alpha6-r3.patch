diff --git core/client/cert_func.py core/client/cert_func.py
index 99dfb15..2ca6b59 100644
--- core/client/cert_func.py
+++ core/client/cert_func.py
@@ -101,7 +101,7 @@ def client_post_request (cert_path, by_host):
         return 1
     url = "https://%s:%d/?wsdl" %(by_host, port)
     print _("%s\nconnect...") % url
-    from suds.client import Client
+    from sudsds.client import Client
     #try:
     client = Client(url, \
                     transport = HTTPSClientCertTransport(None, None, cert_path))
@@ -155,7 +155,7 @@ def client_get_cert(cert_path, args):
     url = "https://%s:%d/?wsdl" %(args.from_host, port)
     print _("%s\nconnect...") % url
     
-    from suds.client import Client
+    from sudsds.client import Client
     try:
         client = Client(url, \
                     transport = HTTPSClientCertTransport(None, None, cert_path))
diff --git core/client/client_class.py core/client/client_class.py
index eb3c5f7..c476673 100644
--- core/client/client_class.py
+++ core/client/client_class.py
@@ -16,27 +16,20 @@
 
 import urllib2 as u2
 import os, sys
-from suds.transport.http import HttpTransport
+from sudsds.transport.http import HttpTransport
 import httplib
 from httplib import HTTPConnection
 import socket, ssl
 import OpenSSL, hashlib
 from calculate.core.datavars import DataVarsCore
 from calculate.lib.datavars import DataVars
-from suds.client import Client
-from suds.cache import ObjectCache
+from sudsds.client import Client
 from cert_verify import verify, get_CRL
-from suds.options import Options
 #import cert_func.verify
 
 flag = 0
 
 class Client_suds(Client):
-    def __init__(self, url, **kwargs):
-        Client.__init__(self, url, **kwargs)
-        options = Options()
-        options.cache = ObjectCache(days=0)
-        
     def set_parameters (self, path_to_cert, CERT_FILE, PKEY_FILE):
         self.path_to_cert = path_to_cert
         if not CERT_FILE:
diff --git core/client/function.py core/client/function.py
index ce4fe98..2c01453 100644
--- core/client/function.py
+++ core/client/function.py
@@ -19,7 +19,7 @@ import subprocess
 import fcntl
 from OpenSSL import crypto
 import shlex
-import suds
+import sudsds
 from calculate.core.server.cert_cmd import getHwAddr, getIpLocal
 
 # get list of certificate and session id
@@ -121,7 +121,7 @@ def create_obj(client, method_name):
     
     info = operation.methods.get(method_name)
     if not info:
-        raise suds.MethodNotFound(method_name)
+        raise sudsds.MethodNotFound(method_name)
     type_op = info.binding.input.param_defs(info)[param][inf_param]
     str_type = type_op.type[param_type]
     
diff --git core/server/bootstrap.py core/server/bootstrap.py
index 1491b33..64da101 100644
--- core/server/bootstrap.py
+++ core/server/bootstrap.py
@@ -23,7 +23,6 @@ from calculate.core.client.cert_func import new_key_req
 from calculate.core.client.function import get_ip_mac_type
 from calculate.core.datavars import DataVarsCore
 from calculate.lib.utils.files import makeDirectory
-from calculate.lib.utils import ip as ip_mod
 import os, hashlib, OpenSSL, pwd, socket, sys
 from calculate.lib.cl_lang import setLocalTranslate
 setLocalTranslate('cl_core',sys.modules[__name__])
@@ -102,8 +101,9 @@ def check_serv_cert(cert_path):
 def check_client_cert(user_name):
     client_cert_path = check_user_path(user_name)
     server_host_name = socket.getfqdn()
-    if os.path.isfile(os.path.join(client_cert_path,server_host_name+'.crt')) and \
-            os.path.isfile(os.path.join(client_cert_path,server_host_name+'.key')):
+    if os.path.isfile(os.path.join(client_cert_path ,server_host_name+'.crt'))\
+                    and os.path.isfile(os.path.join \
+                    (client_cert_path, server_host_name+'.key')):
         return True
     return False
 
@@ -120,7 +120,7 @@ def change_args(args, step = None):
     return args
 
 def create_server_cert(cert, key, cert_path, args, port):
-    cert_cmd.check_server_certificate(cert, key, cert_path, args, port, auto = True)
+    cert_cmd.check_server_certificate(cert,key,cert_path,args,port,auto=True)
 
 def create_client_cert(server_cert, cert_path, data_path, certbase, user_name):
     client_cert_path = check_user_path(user_name)
@@ -130,7 +130,7 @@ def create_client_cert(server_cert, cert_path, data_path, certbase, user_name):
     req_id = create_request(server_cert, cert_path, data_path, certbase, \
                             client_cert_path, user_name)
     sign_certificate(req_id, cert_path, data_path)
-    get_certificate(cert_path, data_path, certbase, client_cert_path, user_name)
+    get_certificate(cert_path,data_path,certbase,client_cert_path,user_name)
 
 def check_user_path(user_name):
     try:
@@ -158,7 +158,7 @@ def check_user_path(user_name):
         os.chown(path[0], pwdObj.pw_uid, pwdObj.pw_gid)
         for _file in path[2]:
             if os.path.isfile(_file):
-                os.chown('/'.join([path[0], _file]),pwdObj.pw_uid,pwdObj.pw_gid)
+                os.chown('/'.join([path[0],_file]),pwdObj.pw_uid,pwdObj.pw_gid)
                 os.chmod(directory, 0644)
     return cert_dir
 
@@ -170,7 +170,8 @@ def create_request(server_cert, cert_path, data_path, certbase, \
     #csr_file = cert_path + server_host_name +'.csr'
     #pritn 'request file = ', csr_file
 
-    client_req_file = new_key_req(key, client_cert_path, server_host_name, auto = True)
+    client_req_file = new_key_req(key, client_cert_path, server_host_name,
+                                  auto = True)
 
     try:
         pwdObj = pwd.getpwnam(user_name)
@@ -199,7 +200,7 @@ def create_request(server_cert, cert_path, data_path, certbase, \
 def sign_certificate(req_id, cert_path, data_path):
     cert_cmd.sing_req_by_server(req_id, cert_path, data_path, auto = True)
 
-def get_certificate(cert_path, data_path, certbase, client_cert_path,user_name):
+def get_certificate(cert_path,data_path,certbase,client_cert_path,user_name):
     req_id_file = os.path.join(client_cert_path, 'req_id')
     if not os.path.exists(req_id_file):
         print _("request was not sent or deleted file %s") %req_id_file
@@ -320,6 +321,44 @@ def get_certificate(cert_path, data_path, certbase, client_cert_path,user_name):
             print _("CERTIFICATE ADD")
         else:
             print _("file with ca certificates exists")
+
+        trust_dir = os.path.join(client_cert_path, 'trusted')
+        if not os.path.isdir(trust_dir):
+            os.makedirs(trust_dir)
+        os.chown(trust_dir, pwdObj.pw_uid, pwdObj.pw_gid)
+        os.chmod(trust_dir, 0755)
+
+        ca_certs = os.path.join(trust_dir, "cert.list")
+
+        if not os.path.exists(ca_certs):
+            fc = open(ca_certs,"w")
+            fc.close()
+            os.chown(ca_certs, pwdObj.pw_uid, pwdObj.pw_gid)
+            os.chmod(ca_certs, 0644)
+
+        host = 'localhost'
+        filename = host
+        cert_file_trust = os.path.join(trust_dir, filename)
+        fc = open(cert_file_trust,"w")
+        fc.write(ca_root)
+        fc.close()
+        os.chown(cert_file_trust, pwdObj.pw_uid, pwdObj.pw_gid)
+        os.chmod(cert_file_trust, 0644)
+        with open(ca_certs) as fd:
+            t = fd.read()
+            # for each line
+            for line in t.splitlines():
+                # Split string into a words list
+                words = line.split()
+                if len(words) > 1:
+                    # if first word...
+                    if words[0] == host:
+                        return 0
+
+        # Open file with compliance server certificates and server hostname
+        fcl = open(ca_certs,"a")
+        fcl.write(host + ' ' + filename + '\n')
+        fcl.close()
     return 0
 
 def key_force(cert_path, data_path):
diff --git core/server/cert_cmd.py core/server/cert_cmd.py
index a2ee1ac..5e2f5ac 100644
--- core/server/cert_cmd.py
+++ core/server/cert_cmd.py
@@ -179,7 +179,7 @@ def check_server_certificate(cert, key, cert_path, args, port, auto = False):
         port = args.port if args.port else 8888
         url = "https://%s:%d/?wsdl" %(args.host, port)
         print _("%s\nconnect...") % url
-        from suds.client import Client
+        from sudsds.client import Client
         from client_class import HTTPSClientsCertTransport
         try:
             client = Client(url, \
@@ -226,7 +226,7 @@ def check_server_certificate(cert, key, cert_path, args, port, auto = False):
         url = "https://%s:%d/?wsdl" %(args.root_host, port)
         print _("%s\nconnect...") % url
 
-        from suds.client import Client
+        from sudsds.client import Client
         from client_class import HTTPSClientsCertTransport
         try:
             client = Client(url, \
@@ -690,7 +690,8 @@ def sing_req_by_server(id_client_req, cert_path, data_path, auto = False):
         if auto:
             group_name = "all"
         else:
-            group_name = "%s" %raw_input(_("Enter Group new certificate: "))
+            group_name = "%s" %raw_input(_("Enter Group new certificate " \
+                                           "(group name or 'all'): "))
         config = data_path + '/client_certs/ssl-client.cfg'
         if os.path.exists(config):
             os.unlink(config)
@@ -912,9 +913,6 @@ def view_signed_cert(args, serv_certbase, data_path):
 # View clients requests on server
 def view_client_request(args, client_certbase, data_path):
     req_id = args.req_id
-#    dump = args.dump
-#    remove = args.remove
-
     if req_id == 'all':
         if not os.path.exists(client_certbase):
             fc = open(client_certbase,"w")
diff --git core/server/certificate.py core/server/certificate.py
index 343fffa..96d9a20 100644
--- core/server/certificate.py
+++ core/server/certificate.py
@@ -280,7 +280,7 @@ class CoreWsdl:
         dv = datavars.DataVarsCore()
         dv.importCore()
         dv.flIniFile()
-        dv.addGroup(_("Certificate View"),
+        dv.addGroup(None,
             normal=('cl_cert_id',),
             next_label=_("View"))
         view = ViewInfo (dv)
diff --git core/server/cl_server.py core/server/cl_server.py
index 8c8e48a..e4662da 100644
--- core/server/cl_server.py
+++ core/server/cl_server.py
@@ -125,7 +125,6 @@ def main(*args, **keywords):
         logger.setLevel(logging.DEBUG)
 
     # delete all sid and pid informations file
-    clean(sids_file, pids_file, sids_pids, sids, pids)
     cert_cmd.create_path(data_path, certbase, rights, group_rights)
     #####################
     try:
@@ -232,6 +231,7 @@ def main(*args, **keywords):
                 sys.stderr.write(
                     _("Can not create pid file %s")%args.pidfile+"\n")
                 sys.exit(1)
+        clean(sids_file, pids_file, sids_pids, sids, pids)
         print _("Server start")
         server.start()
     except KeyboardInterrupt:
diff --git core/server/clean.py core/server/clean.py
index be0bdab..5572f5b 100644
--- core/server/clean.py
+++ core/server/clean.py
@@ -66,7 +66,6 @@ class CoreWsdl:
         while len(self.glob_frame_list[pid]) > \
                   self.glob_process_dict[pid]['counter']:
             time.sleep(1)
-
         methodname = self.glob_process_dict[pid]['method_name']
         if methodname:
             self.clear_cache(sid, methodname)
diff --git core/server/client_class.py core/server/client_class.py
index b406414..1c58d31 100644
--- core/server/client_class.py
+++ core/server/client_class.py
@@ -16,7 +16,7 @@
 
 import urllib2 as u2
 import os, sys
-from suds.transport.http import HttpTransport
+from sudsds.transport.http import HttpTransport
 import httplib
 from httplib import HTTPConnection
 import socket, ssl
diff --git core/server/edit_groups.py core/server/edit_groups.py
index 3f31fc2..39b7b8d 100644
--- core/server/edit_groups.py
+++ core/server/edit_groups.py
@@ -267,9 +267,8 @@ class CoreWsdl:
             dv.flIniFile()
             dv.Get('cl_group_name')
 
-        dv.addGroup(_("Group detail"),
-            normal=('cl_group_name', 'cl_group_rights',
-                    'cl_page_count','cl_page_offset'))
+        dv.addGroup(None,
+            normal=('cl_group_name', 'cl_group_rights'))
 
         view = ViewInfo(dv)
 
@@ -638,7 +637,7 @@ class CoreWsdl:
             dv.importCore()
             dv.flIniFile()
 
-        dv.addGroup(_("Group add"),
+        dv.addGroup(None,
             normal=('cl_group_add', 'cl_group_rights'),
             next_label=_("Add"))
 
diff --git core/server/request.py core/server/request.py
index 76fe636..1872a5f 100644
--- core/server/request.py
+++ core/server/request.py
@@ -273,7 +273,7 @@ class CoreWsdl:
             dv.flIniFile()
             dv.Get('cl_req_id')
 
-        dv.addGroup(_("Requests detail"),
+        dv.addGroup(None,
             normal=('cl_req_id', 'cl_req_user_name', 'cl_req_ip', 'cl_req_mac',
                     'cl_req_date', 'cl_req_location', 'cl_req_group'))
 
@@ -438,7 +438,7 @@ class CoreWsdl:
             dv.flIniFile()
             dv.Get('cl_req_id')
 
-        dv.addGroup(_("Requests detail"),
+        dv.addGroup(_("Requests confirm"),
             normal=('cl_req_id', 'cl_req_user_name', 'cl_req_ip', 'cl_req_mac',
               'cl_req_date', 'cl_req_location', 'cl_req_group'),
             next_label=_("Done"))
diff --git core/server/test.py core/server/test.py
index 3b76ecd..cd301db 100644
--- core/server/test.py
+++ core/server/test.py
@@ -88,8 +88,8 @@ class CoreWsdl:
             # Учёт процесса выполнения
             perc = 0
             while self.getProgress() < 100:
-                time.sleep(0.1)
-                perc += 20
+                time.sleep(1)
+                perc += 5
                 #self.addMessage(type = 'warning', message = '%s%%' %perc)
                 # Увеличение процента выполнения процесса
                 if perc < 50:
@@ -359,7 +359,7 @@ class CoreWsdl:
             if expert:
                 group.fields.append(Field(
                         name = "expert_open",
-                        label = _("Press for advanced settings..."),
+                        #label = _("Advanced settings..."),
                         type = "label",
                         help = \
                         "you not human? This is a anti-bot test",
@@ -407,7 +407,7 @@ class CoreWsdl:
             else:
                 group.fields.append(Field(
                         name = "expert_close",
-                        label = _("Press for advanced settings..."),
+                        #label = _("Advanced settings..."),
                         type = "label",
                         help = \
                         "you not human? This is a anti-bot test",
@@ -541,7 +541,7 @@ class CoreWsdl:
             if expert:
                 group.fields.append(Field(
                         name = "expert_open",
-                        label = _("Press for advanced settings..."),
+                        #label = _("Advanced settings..."),
                         type = "label",
                         help = \
                         "you not human? This is a anti-bot test",
@@ -561,7 +561,7 @@ class CoreWsdl:
             else:
                 group.fields.append(Field(
                         name = "expert_close",
-                        label = _("Press for advanced settings..."),
+                        #label = _("Advanced settings..."),
                         type = "label",
                         help = \
                         "you not human? This is a anti-bot test",
diff --git ru/cl_core.po ru/cl_core.po
index c7480b1..96c118c 100644
--- ru/cl_core.po
+++ ru/cl_core.po
@@ -2,8 +2,8 @@ msgid ""
 msgstr ""
 "Project-Id-Version: calculate-api\n"
 "Report-Msgid-Bugs-To: \n"
-"POT-Creation-Date: 2012-06-08 13:28+0300\n"
-"PO-Revision-Date: 2012-06-08 13:29+0300\n"
+"POT-Creation-Date: 2012-06-09 14:16+0300\n"
+"PO-Revision-Date: 2012-06-09 14:16+0300\n"
 "Last-Translator: Denis <ds@mail.ru>\n"
 "Language-Team: \n"
 "Language: \n"
@@ -621,14 +621,14 @@ msgstr ""
 #: /var/calculate/mydir/git/calculate-api/core/client/client_class.py:199
 #: /var/calculate/mydir/git/calculate-api/core/client/client_class.py:289
 #: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:510
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:801
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:802
 msgid "Serial Number = "
 msgstr "Серийный номер = "
 
 #: /var/calculate/mydir/git/calculate-api/core/client/client_class.py:201
 #: /var/calculate/mydir/git/calculate-api/core/client/client_class.py:291
 #: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:512
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:803
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:804
 msgid ""
 "\n"
 "Issuer"
@@ -639,8 +639,8 @@ msgstr ""
 #: /var/calculate/mydir/git/calculate-api/core/client/client_class.py:205
 #: /var/calculate/mydir/git/calculate-api/core/client/client_class.py:295
 #: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:516
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:807
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:847
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:808
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:848
 msgid ""
 "\n"
 "Subject"
@@ -853,7 +853,7 @@ msgid "Gratulations!"
 msgstr "Поздравляю!"
 
 #: /var/calculate/mydir/git/calculate-api/core/server/bootstrap.py:44
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1047
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1048
 #, python-format
 msgid "Certificate %s not found"
 msgstr "Сертификат %s не найден"
@@ -950,7 +950,7 @@ msgid "file %s not found!"
 msgstr "файл %s не найден!"
 
 #: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:509
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:800
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:801
 msgid "Fingerprint = "
 msgstr "Отпечаток = "
 
@@ -985,48 +985,48 @@ msgid "Deleted"
 msgstr "Удалено"
 
 #: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:678
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:747
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:748
 msgid "Certificate number (id) must be int"
 msgstr "Номер сертификата должен быть целочисленным"
 
 #: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:683
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:752
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:753
 #, python-format
 msgid "Signing Request %s not found"
 msgstr "Запрос на подпись %s не найден"
 
 #: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:687
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:756
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:757
 #, python-format
 msgid "certificate %s already exists"
 msgstr "Сертификат %s успешно создан"
 
 #: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:693
-msgid "Enter Group new certificate: "
-msgstr "Введите группу нового сертификата: "
+msgid "Enter Group new certificate (group name or 'all'): "
+msgstr "Введите группу нового сертификата (имя группы или 'all'): "
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:728
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:784
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:729
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:785
 #, python-format
 msgid "certificate %s is signed"
 msgstr "Сертификат %s подписан"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:730
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:731
 #, python-format
 msgid "certificate %s not signed"
 msgstr "Сертификат %s не подписан"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:739
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:740
 msgid "Root certificate or private key not found"
 msgstr "Корневой сертификат или секретный ключ не найден"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:740
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:741
 #, python-format
 msgid "look at %s"
 msgstr "смотрите %s"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:823
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:863
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:824
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:864
 msgid ""
 "\n"
 "request sent from:"
@@ -1034,212 +1034,212 @@ msgstr ""
 "\n"
 "запрос на подпись отправлен от:"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:826
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:866
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:827
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:867
 msgid "date"
 msgstr "дата"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:830
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:831
 msgid "Certificate not found!"
 msgstr "Сертификат не найден!"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:869
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:870
 msgid "Request not found!"
 msgstr "Запрос на подпись не найден!"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:896
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:936
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:897
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:937
 #, python-format
 msgid "Request \t%s - not signed"
 msgstr "Запрос \t%s - не подписан"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:898
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:938
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:899
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:939
 #, python-format
 msgid "Request \t%s"
 msgstr "Запрос \t%s"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:901
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:941
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:902
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:942
 msgid "Certificates or requests not found!"
 msgstr "Сертификат или запрос не найден!"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:907
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:947
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:908
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:948
 msgid "certificate (request) number not int and not 'all'"
 msgstr "номер сертификата (запроса) не целочисленный и не 'all'"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:932
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:933
 msgid "Certificate \t"
 msgstr "Сертификат \t"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:966
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:967
 msgid "id must be int"
 msgstr "идентификатор должен быть целочисленным"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:975
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:976
 #, python-format
 msgid "Request and certificate with id = %s not found!"
 msgstr "Запрос или сертификат с идентификатором = %s не найден!"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:979
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:980
 #, python-format
 msgid "request %s not found!"
 msgstr "запрос %s не найден!"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:982
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:983
 msgid "This request has already been signed"
 msgstr "Запрос успешно подписан"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:983
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:984
 msgid "Delete certificate and request? y/[n]: "
 msgstr "Удалить сертификат и запрос на подпись? y/[n]: "
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:985
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:986
 msgid "Not deleted"
 msgstr "Не удалён"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1015
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1016
 msgid "request deleted"
 msgstr "запрос на подпись сертификата удалён"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1018
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1019
 msgid "certificate deleted"
 msgstr "сертификат удалён"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1020
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1021
 msgid "delete file error!"
 msgstr "ошибка удаления файла!"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1034
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1035
 msgid "CRL deleted"
 msgstr "Список отзыва сертификатов удалён"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1036
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1037
 msgid "CRL not exists"
 msgstr "Список отзыва сертификатов не создан"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1042
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1043
 msgid "Id revocation certificate must be integer!"
 msgstr "Номер отзываемого сертификата должен быть целочисленным!"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1125
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1126
 msgid "You should not to specify index of value"
 msgstr "Вы не должны указывать индекс значения"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1159
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1160
 msgid "Variable is not list"
 msgstr "Переменная не список"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1171
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1172
 msgid "start server"
 msgstr "сервер запущен"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1174
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1175
 msgid "port number"
 msgstr "номер порта"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1177
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1178
 msgid "Specify the location of a PID file"
 msgstr "Указать расположение PID файла"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1180
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1181
 msgid "operations with certificates (number or \"all\"). Server not run"
 msgstr "операции с сертификатами (номер или \"all\"). Сервер не запускается"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1183
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1184
 msgid "view clients requests (number or \"all\")"
 msgstr "просмотр клиентских запросов (номер или \"all\")"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1186
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1187
 msgid "view servers certificates (number or \"all\"). Server not run"
 msgstr "просмотр серверных сертификатов (номер или \"all\"). Сервер не запускается"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1189
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1190
 msgid "bootstrap action"
 msgstr "начальные загрузки"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1192
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1193
 msgid "use with key --bootstrap, remove all certificates, requests and config files on server"
 msgstr "используйте с ключом --bootstrap, удаление всех сертификатов, запросов и конфигурационных файлов на сервере"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1196
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1197
 msgid "dump (using with -c [ID])"
 msgstr "дамп (используйте с ключом -c [ID])"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1199
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1200
 msgid "debug"
 msgstr "режим отладки (debug)"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1202
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1203
 msgid "remove selected certificate (using with -c [ID])"
 msgstr "удалить выбранный сертификат (используйте с ключом -c [ID])"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1205
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1206
 msgid "Add right for certificate (or list via ',') (using with -c [ID])"
 msgstr "добавить права для сертификата (или списка через ',') (используйте с ключом -c [ID])"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1209
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1210
 msgid "Delete right(s) for certificate (using with -c [ID])"
 msgstr "удаление прав сертификата (используйте с -c [ID])"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1212
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1213
 msgid "generate a root (CA) certificate"
 msgstr "генерировать корневой сертификат (сертификат удостоверяющего центра)"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1215
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1216
 msgid "send request to sign root certificate"
 msgstr "отправить запрос на подписание корневого сертификата"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1218
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1219
 msgid "get signed certificate from server"
 msgstr "получить подписанный сертификат с сервера (хост сервера)"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1221
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1222
 msgid "use root certificate as server cert"
 msgstr "использовать корневой сертификат как сертификат сервера"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1224
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1225
 msgid "sign client's request by server certificate"
 msgstr "подписать запрос на подписание сертификата клиента сертификатом сервера"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1227
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1228
 msgid "sign server's request by root certificate"
 msgstr "подписать запрос на подписание сертификата сервера корневым сертификатом"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1230
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1231
 msgid "refuse to sign server request"
 msgstr "отвергнуть серверный запрос на подпись сертификата"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1233
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1234
 msgid "refuse to sign client request"
 msgstr "отвергнуть клиентский запрос на подпись сертификата"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1236
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1237
 msgid "revoke early signed server (or ca) certificate. rm to remove CRL"
 msgstr "отозвать ранее подписанный сертификат сервера (удостоверяющего центра). rm для удаления списка отзыва"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1239
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1240
 msgid "display value for specified variable (section.variablename). If section skipped then using variables from main section"
 msgstr "отобразить значение для указанной переменной (раздел.имя_переменной). Если раздел пропущен, то используются переменные из основного раздела"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1243
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1244
 msgid "Display variable as human readable"
 msgstr "выводить значение в удобном для человека виде"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1246
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1247
 msgid "write value for variable (section.variablename=value)"
 msgstr "записать значение для переменной (секция.имя_переменной=значение)"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1249
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1250
 msgid "check configuration"
 msgstr "проверка конфигурации"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1252
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1253
 msgid "path to log files"
 msgstr "путь к файлам логов"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1255
+#: /var/calculate/mydir/git/calculate-api/core/server/cert_cmd.py:1256
 msgid "prints the version number, then exits"
 msgstr "вывод версии программы и выход"
 
@@ -1487,11 +1487,11 @@ msgstr "Добавить"
 msgid "watcher process pid %d error"
 msgstr "ошибка наблюдения за процессом с идентификатором %d"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/clean.py:92
+#: /var/calculate/mydir/git/calculate-api/core/server/clean.py:91
 msgid "Variables cl_core_monitor_period or cl_core_sid_live not found"
 msgstr "Переменная cl_core_monitor_period или cl_core_sid_live не найдены"
 
-#: /var/calculate/mydir/git/calculate-api/core/server/clean.py:196
+#: /var/calculate/mydir/git/calculate-api/core/server/clean.py:195
 msgid "Error read sid files"
 msgstr "Ошибка чтения файлов с идентификаторами сессий"
 
@@ -1652,6 +1652,10 @@ msgstr "Ошибка ввода"
 msgid "Exception: %s"
 msgstr "Исключение: %s"
 
+#, fuzzy
+#~ msgid "Enter Group new certificate "
+#~ msgstr "Введите группу нового сертификата: "
+
 #~ msgid "Request id"
 #~ msgstr "номер "
 
