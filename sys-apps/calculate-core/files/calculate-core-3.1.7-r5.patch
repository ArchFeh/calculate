diff --git core/server/api_types.py core/server/api_types.py
index 8161a9e..0bca760 100644
--- core/server/api_types.py
+++ core/server/api_types.py
@@ -359,7 +359,7 @@ class ViewInfo(DataVarsSerializer):
             varGroups = datavars.getGroups()
             lastGroup = len(varGroups)-1
             # interate all vars group
-            if not onlyhelp and (step in(0,-1,None) or allsteps):
+            if step in(0,-1,None) or allsteps:
                 briefData = datavars.getBrief()
                 self.groups.append(self.stepGroup(varGroups,brief_label,
                             help_value=briefData.get("help",None),
diff --git core/server/func.py core/server/func.py
index fdee9d5..be7c323 100644
--- core/server/func.py
+++ core/server/func.py
@@ -1659,7 +1659,7 @@ class WsdlBase:
 def clearDataVars(func):
     def wrapper(*args,**kwargs):
         try:
-            func(*args,**kwargs)
+            return func(*args,**kwargs)
         finally:
             WsdlMeta.closeDataVars()
     return wrapper
diff --git core/server/methods_func.py core/server/methods_func.py
index d546c1f..0bae3f0 100644
--- core/server/methods_func.py
+++ core/server/methods_func.py
@@ -501,7 +501,7 @@ def collect_object(client, param_object, view, args,wait_thread = None,
                                             val)
 
             elif field.element in ['input', 'openfile',\
-                                   'file', 'radio']:
+                                   'file', 'radio','combo','comboEdit']:
                 param_object = set_obj_item(client, param_object, field.name,
                                             _getattr(args, field.name))
             elif field.element in ['password'] and _getattr(args, field.name) \
@@ -517,21 +517,6 @@ def collect_object(client, param_object, view, args,wait_thread = None,
                                             password)
                 if wait_thread:
                     wait_thread.resume()
-            elif field.element in ['combo', 'comboEdit']:
-                value = _getattr(args, field.name)
-                if value:
-                    if hasattr (field.choice, 'string'):
-                        choice = field.choice.string
-                    else:
-                        choice = field.choice
-                    for item in choice:
-                        if item:
-                            if value.lower() == item.lower():
-                                value = item
-                                break
-
-                param_object = set_obj_item(client, param_object, field.name,
-                                            value)
             elif field.element in ['multichoice', 'multichoice_add', \
                                    'selecttable', 'selecttable_add']:
                 val = _getattr(args, field.name)
diff --git core/server/replace_class.py core/server/replace_class.py
index 860ede2..02ea194 100644
--- core/server/replace_class.py
+++ core/server/replace_class.py
@@ -515,7 +515,7 @@ def call_method(metaObject, args, unknown_args, colorPrint):
     view_obj.step = None
     view_obj.expert = True
     view_obj.brief = None
-    view_obj.onlyhelp = False
+    view_obj.onlyhelp = True
 
     try:
         view = getattr(metaObject, method_view_name)(0, view_obj)
diff --git core/utils/cl_core_setup.py core/utils/cl_core_setup.py
index 7d84869..900a213 100644
--- core/utils/cl_core_setup.py
+++ core/utils/cl_core_setup.py
@@ -31,7 +31,7 @@ class ClCoreSetupAction(Action):
     # ошибки, которые отображаются без подробностей
     native_error = (FilesError,TemplatesError,VariableError,DataVarsError)
     templateTaskMessage = __("System are being configured")
-    successMessage = __("System configured!")
+    successMessage = None
     failedMessage = __("Failed to configure the system!")
     interruptMessage = __("Configuration manually interrupted")
 
@@ -66,6 +66,7 @@ class ClCoreSetupAction(Action):
                         'cl_template_path_use,cl_ebuild_phase,'
                         'cl_template_clt_set)',
           'condition':lambda dv:(dv.Get('cl_core_pkg_desktop_set') == 'on' and
+                        dv.isModuleInstalled('desktop') and
                         not dv.Get('cl_ebuild_phase') in ("preinst","prerm"))
           }
          ]
diff --git core/utils/cl_core_variables.py core/utils/cl_core_variables.py
index 38c3dfd..d0c5ef3 100644
--- core/utils/cl_core_variables.py
+++ core/utils/cl_core_variables.py
@@ -31,7 +31,7 @@ class ClCoreVariables(Action):
     native_error = (FilesError,DataVarsError,VariableError)
     successMessage = None
     failedMessage = None
-    interruptMessage = __("Setting manually interrupted")
+    interruptMessage = __("Variables modification manually interrupted")
 
     tasks = [
          {'name':'write_vars',
diff --git core/variables/certificate.py core/variables/certificate.py
index a9efbb5..4511ff6 100644
--- core/variables/certificate.py
+++ core/variables/certificate.py
@@ -165,7 +165,7 @@ class VariableClCertPerms(Variable):
         return results
 
     def uncompatible(self):
-        return _('You can not change the certificate certificate')
+        return _('You can not change the certificate permissions')
 
 class VariableClCertGroups(Variable):
     """
