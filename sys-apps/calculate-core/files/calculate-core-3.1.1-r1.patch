diff --git core/client/cert_func.py core/client/cert_func.py
index cea6629..c430a50 100644
--- core/client/cert_func.py
+++ core/client/cert_func.py
@@ -76,8 +76,7 @@ def delete_old_cert(client):
 
 def client_post_request (cert_path, by_host):
     if os.path.exists(cert_path + 'req_id'):
-        print _("You have already sent a request for the certificate to be "\
-                "signed.")
+        print _("You already sent a certificate signature request.")
         print _("Request ID = %s") %open(cert_path + 'req_id', 'r').read()
         ans = raw_input (_("Send a new request? y/[n]: "))
         if not ans.lower() in ['y','yes']:
@@ -244,7 +243,7 @@ def client_get_cert(cert_path, args):
             fa.close()
             print _("Certificate added")
         else:
-            print _("file with the CA certificate now exists")
+            print _("file containing the CA certificate now exists")
     return 0
     
 def client_post_auth(client):
@@ -255,9 +254,10 @@ def client_post_auth(client):
             pass#client_post_cert(client)
         else:
             #client_post_request(client)
-            print _('You do not have a certificate. Use --gen-cert-by HOST '
-                    'to generate a new certificate or --get-cert-from HOST '
-                    'to get a new certificate from the server.')
+            print _('You do not have a certificate. Use option '
+                    '--gen-cert-by HOST to generate a new certificate '
+                    'or --get-cert-from HOST to get the certificate '
+                    'from the server.')
             sys.exit()
         print client.service.versions(sid, VERSION)
     except VerifyError, e:
@@ -287,7 +287,7 @@ def client_view_cert_right(client):
     try:
         cert_id = int (cert_id)
     except:
-        print _("Certificate ID error")
+        print _("Invalid certificate ID")
         return 1
     try:
         sid = get_sid(client.SID_FILE)
diff --git core/client/client_class.py core/client/client_class.py
index ce4e282..6c99e42 100644
--- core/client/client_class.py
+++ core/client/client_class.py
@@ -165,7 +165,7 @@ class clientHTTPSConnection (httplib.HTTPSConnection):
                 print _("filename = "), filename
                 print _("Certificate added")
             else:
-                print _("file with the CA certificate now exists")
+                print _("file containing the CA certificate now exists")
         get_CRL(cl_client_cert_dir + '/')
     
     
diff --git core/client/sid_func.py core/client/sid_func.py
index 09ee616..4430c70 100644
--- core/client/sid_func.py
+++ core/client/sid_func.py
@@ -89,7 +89,7 @@ def client_session_info(client):
     try:
         sid = int (sid)
     except:
-        print _("SID error")
+        print _("Invalid SID")
         return 1
     try:
         if sid > 0:
diff --git core/server/cert_cmd.py core/server/cert_cmd.py
index ee6d96a..3a33eb0 100644
--- core/server/cert_cmd.py
+++ core/server/cert_cmd.py
@@ -104,7 +104,7 @@ def check_server_certificate(cert, key, cert_path, args, port, auto = False):
                 name.ST = ''
             else:
                 name.ST.replace(' ', '_').replace('\t', '_')
-            name.C = raw_input (_('Country (TWO letters only!) [%s]: ') %lang)
+            name.C = raw_input (_('Country (two letters only!) [%s]: ') %lang)
             if not name.C:
                 name.C = lang
 
@@ -153,7 +153,7 @@ def check_server_certificate(cert, key, cert_path, args, port, auto = False):
     elif args.use_root_cert:
         if not os.path.exists(cert_path+'/root.crt'):
             print _('root certificate not found (use cl-core with '
-                    '--gen-root-cert)')
+                    'option --gen-root-cert)')
             return 1
 
         print _('Using the root certificate as the server certificate')
@@ -1185,7 +1185,7 @@ def parse(full=False):
         parser.add_argument(
             '--del-server-req', type=str, dest='id_del_req',
             metavar = 'id_req', help=_("refuse to sign the certificate at "
-                                       "server's request"))
+                                       "the server's request"))
         parser.add_argument(
             '--del-client-req', type=str, dest='id_del_client_req',
             metavar = 'id_req', help=_("decline client's request for signature"))
diff --git core/server/create_cert.py core/server/create_cert.py
index 286ef25..17e01df 100644
--- core/server/create_cert.py
+++ core/server/create_cert.py
@@ -86,7 +86,7 @@ def makeRequest(pubkey, pkey, serv_host, port):
             name.ST = ''
         else:
             name.ST.replace(' ', '_').replace('\t', '_')
-        name.C = raw_input (_('Country (TWO letters only!): '))
+        name.C = raw_input (_('Country (two letters only!): '))
 
     req.set_subject_name(name)
     #ext1 = X509.new_extension('nsComment', 'Hello there')
diff --git core/server/func.py core/server/func.py
index 2addbec..bb9ed24 100644
--- core/server/func.py
+++ core/server/func.py
@@ -632,7 +632,7 @@ class CoreWsdl():
                     lang = list_sid[3]
             fd.close()
         try:
-            if not lang.lower() in ['ru', 'en']:
+            if not lang.lower() in ['fr', 'ru', 'en']:
                 lang = "en"
         except:
                 lang = "en"
diff --git core/server/methods_func.py core/server/methods_func.py
index 5ba0bfd..57443a5 100644
--- core/server/methods_func.py
+++ core/server/methods_func.py
@@ -62,7 +62,7 @@ class BoolAction(argparse.Action):
             elif self.reFalse.match(values):
                 values = "off"
             else:
-                msg = _('value may be on or off')
+                msg = _('the value may be on or off')
                 parser.error(msg)
         setattr(ns, self.dest, values)
 
diff --git core/server/setup_package.py core/server/setup_package.py
index d7fde83..e63869c 100644
--- core/server/setup_package.py
+++ core/server/setup_package.py
@@ -172,7 +172,7 @@ class updateUserConfigs(shareUpdateConfigs):
                        set(self.getConfiguredPasswdUsers()))))
         if not xUsers:
             self.logger.info(_("Package %s") %nameProgram)
-            self.logger.warn(_("X sessions users not found"))
+            self.logger.warn(_("X session users not found"))
             return True
         self.logger.info(_("Package %s") %nameProgram)
         self.logger.info(_("Updating user configuration files"))
