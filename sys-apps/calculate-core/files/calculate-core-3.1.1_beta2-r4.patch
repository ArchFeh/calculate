diff --git core/server/replace_class.py core/server/replace_class.py
index d476d06..5a41c08 100644
--- core/server/replace_class.py
+++ core/server/replace_class.py
@@ -29,6 +29,7 @@ from methods_func import getErrorOnParam
 from func import shortTraceback
 from fcntl import ioctl
 from array import array
+import threading
 from calculate.lib.cl_print import color_print
 from calculate.lib.datavars import VariableError
 from calculate.lib.cl_lang import setLocalTranslate
@@ -40,6 +41,9 @@ class replaceClass():
     def startprocess (self, sid, target=None, method=None, method_name=None, \
                       auto_delete=False, args_proc = {}):
         """ start process """
+        if "LANG" in os.environ:
+            curThread = threading.currentThread()
+            curThread.lang = os.environ["LANG"]
         com = target(self.no_progress,self.gui_progress,self.gui_warning)
         if hasattr (com.__class__.__bases__[1], '__init__'):
             com.__class__.__bases__[1].__init__(com)
@@ -433,6 +437,9 @@ def call_method(metaObject, args, unknown_args, colorPrint):
             if i in parse(True).parse_known_args()[1]:
                 _print (_('Unknown parameter'), i)
                 return 1
+        else:
+            _print (_('Unknown argument'), i)
+            return 1
 
     param_object, steps = collect_object(None, param_object, view, args,
                                          stdin_passwd=stdin_passwd)
diff --git core/server/setup_package.py core/server/setup_package.py
index cb9838e..6b48b73 100644
--- core/server/setup_package.py
+++ core/server/setup_package.py
@@ -177,10 +177,7 @@ class updateUserConfigs(shareUpdateConfigs):
         dictPakkages = {}
         listIndex = []
         mergeProgram = "calculate-utilities"
-        self.startTask(_("Users configuring the {nameProgram} package by "
-                         "Calculate utilities").format(
-                            nameProgram=nameProgram),
-                       progress=True)
+        firstValue = True
         for userName in xUsers:
             clVars.Set("cl_root_path", '/', True)
             clVars.Set("ur_login", userName, True)
@@ -199,7 +196,15 @@ class updateUserConfigs(shareUpdateConfigs):
                                self.setProgress,
                                clVars, cltObj = False,
                                printWarning=False)
+            clTempl.onFirstValue = lambda *args: \
+                    self.startTask(
+                        _("User configuring the {nameProgram} package by "
+                          "Calculate Utilities").format(
+                          nameProgram=nameProgram),
+                          progress=True)
+            clTempl.firstValue = firstValue
             dirsFiles = clTempl.applyTemplates()
+            firstValue = clTempl.firstValue
             if dirsFiles is False:
                 self.printERROR(\
                     _("Error using templates for the user %s")\
@@ -218,7 +223,7 @@ class updateUserConfigs(shareUpdateConfigs):
         self.endTask()
         if dictPakkages:
             for calcPkg in listIndex:
-                self.printSUCCESS(_("Calculate utilities have changed files")\
+                self.printSUCCESS(_("Calculate Utilities have changed files")\
                                   +":")
                 for userName, configFiles in dictPakkages[calcPkg]:
                     self.printSUCCESS(" "*2 + _("User %s")%userName + ":")
@@ -346,16 +351,16 @@ class updateSystemConfigs(shareUpdateConfigs):
         clTempl = False
         #for mergeProgram in filter(None,mergePrograms):
         mergeProgram = "calculate-utilities"
-        if variables.Get('cl_ebuild_phase') == "preinst":
-            self.startTask(_("Package configuring the {nameProgram} package by "
-                             "Calculate utilities").format(
-                                nameProgram=nameProgram),
-                           progress=True)
-        else:
-            self.startTask(_("System configuring for {nameProgram} package by "
-                             "Calculate utilities").format(
-                                nameProgram=nameProgram),
-                           progress=True)
+        #if variables.Get('cl_ebuild_phase') == "preinst":
+        #    self.startTask(_("Package configuring the {nameProgram} package by "
+        #                     "Calculate Utilities").format(
+        #                        nameProgram=nameProgram),
+        #                   progress=True)
+        #else:
+        #    self.startTask(_("System configuring for {nameProgram} package by "
+        #                     "Calculate Utilities").format(
+        #                        nameProgram=nameProgram),
+        #                   progress=True)
         clVars.Set("cl_root_path", configPath, True)
         if variables.Get('cl_core_pkg_root_set') == 'on':
             clVars.Set("cl_root_path_next", '/', True)
@@ -390,6 +395,11 @@ class updateSystemConfigs(shareUpdateConfigs):
                            printERROR=self.printERROR,
                            printWARNING=self.printWARNING,
                            printWarning=False)
+        clTempl.onFirstValue = lambda *args: \
+            self.startTask(_("System configuring for {nameProgram} package by "
+                             "Calculate Utilities").format(
+                             nameProgram=nameProgram),
+                             progress=True)
         dirsFiles = clTempl.applyTemplates()
         # fix CONTENTS pkg file
         cfgs = getCfgFiles()
@@ -454,7 +464,7 @@ class updateSystemConfigs(shareUpdateConfigs):
         if dictPakkages:
             reGrey = re.compile(r"\._cfg\d{4}_")
             for calcPkg in listIndex:
-                self.SUCCESS(_("Calculate utilities have changed files")+":")
+                self.SUCCESS(_("Calculate Utilities have changed files")+":")
                 for nameF in dictPakkages[calcPkg]:
                     nameFile = nameF.partition(configPath)[2]
                     if nameFile:
