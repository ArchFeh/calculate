diff --git data/calculate-builder data/calculate-builder
index 969d725..944ecb7 100644
--- data/calculate-builder
+++ data/calculate-builder
@@ -11,6 +11,13 @@ KERNEL_VERSION_CONF="modules_${KERNEL_VERSION_CONF//-/_}"
 MODULES_PATH="/lib/modules/${KERNEL_VERSION}"
 CONF_FILE="/etc/conf.d/modules"
 
+variable_value()
+{
+	local varname=$1
+	cl-install -v --filter $varname | 
+		awk "{ if (\$1 == \"$varname\") print \$3 }"
+}
+
 get_cpufreq_modules(){
 	MODULES_STRING=""
 	for path in $(find $MODULES_PATH -name cpufreq)
@@ -42,11 +49,15 @@ find_string_modules(){
 }
 
 add_autoload_modules(){
+	local roottype=`variable_value os_root_type`
 	if ! find_string_modules;
 	then
 		ebegin "Added rules for cpu frequency"
 		get_cpufreq_modules
-		echo ${KERNEL_VERSION_CONF}=\"${MODULES_STRING}\" >> ${CONF_FILE}
+		if [[ $roottype == "hdd" ]]
+		then
+			echo ${KERNEL_VERSION_CONF}=\"${MODULES_STRING}\" >> ${CONF_FILE}
+		fi
 	else
 		ebegin "Cpu frequency modules already detected"
 	fi
@@ -58,7 +69,8 @@ start() {
 }
 
 stop() {
-	if rc-update show boot | grep -q calculate-builder
+	local roottype=`variable_value os_root_type`
+	if [[ $roottype == "hdd" ]] && rc-config list boot | grep -q calculate-builder
 	then
 		rc-update del calculate-builder boot
 	fi
diff --git pym/cl_builder.py pym/cl_builder.py
index 4778308..dec6ac5 100644
--- pym/cl_builder.py
+++ pym/cl_builder.py
@@ -656,6 +656,11 @@ class cl_builder(color_print):
             self.printERROR(_("System building failed"))
             return False
         self.printSUCCESS(_("System has built successfully"))
+        if self.assembleIso:
+            self.printWARNING(_("If you want emerge packages manually in "
+                   "assembling system, please perform:"))
+            self.printWARNING("  cl-make -p %s -T"%
+                              self.clVars.Get('os_builder_profile'))
         return True
 
     def restoreMount(self):
